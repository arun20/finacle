#============================================================
# IMPORTANT: Auto Generated Header. DO NOT CHANGE MANUALLY.
# Product: Finacle Core
# Category: User Defined
# Script: OGM_updAvalLimit.scr
# Type: NA|default
# Description: OGM_updAvalLimit.scr
# Author: Saisomasekhar_N
# Date: 6/22/18 3:23 PM
# Modification Log:
#============================================================
IMPORT LibCommonB001
IMPORT LibCommonB002
IMPORT common_business_XMLFunctions
IMPORT updAvailLimitInput
<--START
                # Script body goes here
                TRACE ON
                sub_createRepClassB("CUST","DATA")
                ##sv_r = urhk_b2k_printrepos("BANCS")
                
                ### THIS SCRIPT IS CALLED DURING PREPROCESS OF VERIFY IN OGM/IGM/ODCM/IDCM ###
                ### 1.GET MENU ID ###
                sv_a = func_getCallingMenuOptionB("CMMSG00004",BYREF CUST.DATA.menuId)
                PRINT(CUST.DATA.menuId)
                IF((CUST.DATA.menuId != "OGM")AND(CUST.DATA.menuId != "ODCM")AND(CUST.DATA.menuId != "IGM")AND(CUST.DATA.menuId != "IDCM"))THEN
                #{
                                EXITSCRIPT
                #}
                ENDIF
                
                ### 2.GET KEY FIELD VALUES FROM SRV - MENU SPECIFIC ###
                IF(CUST.DATA.menuId == "OGM")THEN
                #{
                                CUST.DATA.srvFieldNames = "bgCritDtl.bgFuncCode|bgCritDtl.bgSrlNum|bgCommonDtl.bgB2kId|bgCritDtl.bgType.type|bgChargeDtl.entityId.entityType"
                                CUST.DATA.srvFieldNames = CUST.DATA.srvFieldNames + "|" + "bgChargeDtl.eventSrlNum|bgCommonDtl.bgEventAmt|bgCritDtl.bgCritCrncy"
                                CUST.DATA.srvFieldNames = CUST.DATA.srvFieldNames + "|" + "bgAmendDtl.amendInd|bgAmendDtl.amendAmt"
                #}
                ENDIF
                IF(CUST.DATA.menuId == "ODCM")THEN
                #{
                                CUST.DATA.srvFieldNames = "dcOutCritDtl.dcFuncCode|dcOutCritDtl.dcRefNum|dcOutGenDtl.dcPordDtl.purOrdrDtl.purOrdHdrDtl.entityB2kId|dcOutCritDtl.dcReg.type|dcOutGenDtl.dcPordDtl.purOrdrDtl.purOrdHdrDtl.entityType"
                                CUST.DATA.srvFieldNames = CUST.DATA.srvFieldNames + "|" + "dcChargeDtl.eventSrlNum|dcOutGenDtl.dcAmtDtl.dcOpenValue|dcOutCritDtl.dcCrncyCode"
                                CUST.DATA.srvFieldNames = CUST.DATA.srvFieldNames + "|" + "dcAmendDtl.amendInd|dcAmendDtl.amendAmt"
                #}
                ENDIF
                IF(CUST.DATA.menuId == "IGM")THEN
                #{
                                CUST.DATA.srvFieldNames = "bgInMsg.bgCritDtl.bgFuncCode|bgInMsg.bgCritDtl.bgSrlNum|bgInMsg.bgCommonDtl.bgB2kId|bgInMsg.bgCritDtl.bgType.type|bgInMsg.bgChargeDtl.entityId.entityType"
                                CUST.DATA.srvFieldNames = CUST.DATA.srvFieldNames + "|" + "bgInMsg.bgChargeDtl.eventSrlNum|bgInMsg.bgCommonDtl.bgEventAmt|bgInMsg.bgCritDtl.bgCritCrncy"
                                CUST.DATA.srvFieldNames = CUST.DATA.srvFieldNames + "|" + "bgInMsg.bgAmendDtl.amendInd|bgInMsg.bgAmendDtl.amendAmt"
                #}
                ENDIF
                IF(CUST.DATA.menuId == "IDCM")THEN
                #{
                                CUST.DATA.srvFieldNames = "dcInMsgDtl.dcOutCritDtl.dcFuncCode|dcInMsgDtl.dcOutCritDtl.dcRefNum|dcInMsgDtl.dcOutGenDtl.dcPordDtl.purOrdrDtl.purOrdHdrDtl.entityB2kId|dcInMsgDtl.dcOutCritDtl.dcReg.type|dcInMsgDtl.dcOutGenDtl.dcPordDtl.purOrdrDtl.purOrdHdrDtl.entityType"
                                CUST.DATA.srvFieldNames = CUST.DATA.srvFieldNames + "|" + "dcInMsgDtl.dcChargeDtl.eventSrlNum|dcInMsgDtl.dcOutGenDtl.dcAmtDtl.dcOpenValue|dcInMsgDtl.dcOutCritDtl.dcCrncyCode"
                                CUST.DATA.srvFieldNames = CUST.DATA.srvFieldNames + "|" + "dcInMsgDtl.dcAmendDtl.amendInd|dcInMsgDtl.dcAmendDtl.amendAmt"
                #}
                ENDIF
                CUST.DATA.srvFieldValues = "funcCode|b2kRefNo|entityB2kId|b2kType|b2kIdType|eventSrlNum|b2kEventAmt|b2kCcy|amendInd|amendAmt"
                sub_getFieldValuesfromSRVStructB("10","CUST","DATA",CUST.DATA.srvFieldNames,CUST.DATA.srvFieldValues)
                PRINT(CUST.DATA.funcCode)
                PRINT(CUST.DATA.b2kRefNo)
                PRINT(CUST.DATA.entityB2kId)
                PRINT(CUST.DATA.b2kType)
                PRINT(CUST.DATA.b2kIdType)
                PRINT(CUST.DATA.eventSrlNum)
                CUST.DATA.b2kEventAmt = CDOUBLE(CUST.DATA.b2kEventAmt)
                PRINT(CUST.DATA.b2kEventAmt)
                PRINT(CUST.DATA.b2kCcy)
                PRINT(CUST.DATA.amendInd)
                CUST.DATA.amendAmt = CDOUBLE(CUST.DATA.amendAmt)
                PRINT(CUST.DATA.amendAmt)
		CUST.DATA.markInvokeStatus = ""
		CUST.DATA.eventOperType = ""
		CUST.DATA.liabAmt = ""
		IF(((CUST.DATA.menuId == "OGM") OR (CUST.DATA.menuId == "IGM")) AND (CUST.DATA.b2kIdType == "")) THEN
		#{
			IF(CUST.DATA.menuId == "OGM") THEN
			#{
				CUST.DATA.srvFieldNames = "bgMarkInvocationDtl.markInvokeStatus"
			#}
			ENDIF
			IF(CUST.DATA.menuId == "IGM") THEN
                        #{
                                CUST.DATA.srvFieldNames = "bgInMsg.bgMarkInvocationDtl.markInvokeStatus"
                        #}
                        ENDIF
			CUST.DATA.srvFieldValues = "markInvokeStatus"
			sub_getFieldValuesfromSRVStructB("1","CUST","DATA",CUST.DATA.srvFieldNames,CUST.DATA.srvFieldValues)
			PRINT(CUST.DATA.markInvokeStatus)
			CUST.DATA.b2kIdType = "BNKGR"
		#}
		ENDIF 
                ### 3.FETCH PREVIOUS OPERATION VALUES ON THIS ENTITY ###
                BANCS.INPARAM.BINDVARS = CUST.DATA.entityB2kId + "|" + CUST.DATA.b2kIdType + "|" + BANCS.STDIN.contextBankId
                BANCS.INPARAM.BINDVARS = BANCS.INPARAM.BINDVARS + "|" + CUST.DATA.entityB2kId + "|" + CUST.DATA.b2kIdType + "|" + BANCS.STDIN.contextBankId
                PRINT(BANCS.INPARAM.BINDVARS)
                sv_a = "slLimitId,prevEntityAmt,prevEntityCcy,prevAmdInd,prevAmdAmt,prevEarMark|SELECT SL_LIMIT_ID,ENTITY_AMOUNT,ENTITY_CCY,AMEND_IND,AMEND_AMT,TOTAL_EARMARK"
                sv_a = sv_a + " FROM CUSTOM.C_TFCT_TBL WHERE B2K_ID = ?SVAR AND B2KID_TYPE = ?SVAR AND BANK_ID = ?SVAR AND SRL_NUM = "
                sv_a = sv_a + " (SELECT MAX(SRL_NUM) FROM CUSTOM.C_TFCT_TBL WHERE B2K_ID = ?SVAR AND B2KID_TYPE = ?SVAR AND BANK_ID = ?SVAR) AND ROWNUM=1"
                PRINT(sv_a)
                sv_a = urhk_dbSelectWithBind(sv_a)
                PRINT(sv_a)
                sub_copyOutparamFieldB("slLimitId","CUST","DATA","slLimitId","")
                sub_copyOutparamFieldB("prevEntityAmt","CUST","DATA","prevEntityAmt","0")
                sub_copyOutparamFieldB("prevEntityCcy","CUST","DATA","prevEntityCcy","")
                sub_copyOutparamFieldB("prevAmdInd","CUST","DATA","prevAmdInd","")
                sub_copyOutparamFieldB("prevAmdAmt","CUST","DATA","prevAmdAmt","0")
                sub_copyOutparamFieldB("prevEarMark","CUST","DATA","prevEarMark","0")
                IF(sv_a != 0)THEN
                #{
                                sub_getFieldValuesfromONSB("1","CUST","DATA","tfc_limit_details_FIELD_1","slLimitId","")
                                CUST.DATA.slLimitId       = TOUPPER(CUST.DATA.slLimitId)
                                CUST.DATA.isNewEntity = "Y"
                #}
                ENDIF
                PRINT(CUST.DATA.slLimitId)
                PRINT(CUST.DATA.prevEntityAmt)
                PRINT(CUST.DATA.prevEntityCcy)
                PRINT(CUST.DATA.prevAmdInd)
                PRINT(CUST.DATA.prevAmdAmt)
                PRINT(CUST.DATA.prevEarMark)
                
                ### 4.REMOVE EARMARK ADDED DURING MAKER LEVEL ###
                #             IF(CUST.DATA.slLimitId != "")THEN
                #             #{
                #                             BANCS.INPUT.refNum	   	= CUST.DATA.b2kRefNo
				#                             BANCS.INPUT.acfNum        = CUST.DATA.slLimitId
                #                             BANCS.INPUT.holdAmount    = FORMAT$(CDOUBLE(CUST.DATA.prevEarMark),"%2.2f")
                #                             BANCS.INPUT.earType       = "R"
                #                             BANCS.INPUT.currency      = CUST.DATA.b2kCcy
                #                             IF(CDOUBLE(BANCS.INPUT.holdAmount) != 0)THEN
                #                             #{
                #                                             CALL("mngEarmark.scr")
                #                                             IF(FIELDEXISTS(INTF.DATA.orgCode))THEN
                #                                             #{
                #                                                             IF(INTF.DATA.orgCode != "000")THEN
                #                                                             #{
                #                                                                             sv_a = urhk_SRV_SetErr(INTF.DATA.orgCode + " - " + INTF.DATA.ErrorDesc)
                #                                                                             EXITSCRIPT
                #                                                             #}
                #                                                             ENDIF
                #                                             #}
                #                                             ENDIF
                #                             #}
                #                             ENDIF
                #             #}
                #             ENDIF
                
                ### 5.CALL UPDATE AVAIL LIMIT API ###
                BANCS.INPUT.holdAmount         = FORMAT$(CDOUBLE(CUST.DATA.prevEarMark),"%2.2f")
                BANCS.INPUT.refType = "T"
                BANCS.INPUT.txnAmount           = FORMAT$(CDOUBLE(CUST.DATA.prevEarMark),"%2.2f")
                BANCS.INPUT.refNum                  = CUST.DATA.b2kRefNo
                BANCS.INPUT.acfNum                  = CUST.DATA.slLimitId
                BANCS.INPUT.balance                   = FORMAT$(CDOUBLE(CUST.DATA.prevEntityAmt),"%2.2f") + "|" +  CUST.DATA.b2kCcy
                BANCS.INPUT.currency                 = CUST.DATA.b2kCcy
                IF((CDOUBLE(CUST.DATA.prevEarMark) == 0) OR (CUST.DATA.amendInd == "R")) THEN
                #{
			BANCS.INPUT.updTypeFlag        = "UO"
			IF(CUST.DATA.prevAmdInd == "R") THEN
			#{
				BANCS.INPUT.balance = FORMAT$(CDOUBLE(CUST.DATA.prevAmdAmt),"%2.2f") + "|" +  CUST.DATA.b2kCcy
			#}
			ENDIF
			BANCS.INPUT.balance = -1 * CDOUBLE(BANCS.INPUT.balance)
			BANCS.INPUT.balance = FORMAT$(CDOUBLE(BANCS.INPUT.balance),"%2.2f") + "|" +  CUST.DATA.b2kCcy
		#}
                ELSE
		#{
			BANCS.INPUT.updTypeFlag        = "RU"
			IF(CUST.DATA.prevAmdInd == "E") THEN
			#{
				BANCS.INPUT.balance = FORMAT$(CDOUBLE(CUST.DATA.prevAmdAmt),"%2.2f") + "|" +  CUST.DATA.b2kCcy
				BANCS.INPUT.holdAmount = FORMAT$(CDOUBLE(CUST.DATA.prevAmdAmt),"%2.2f")
			#}
			ENDIF
                #}
                ENDIF
               	IF((CUST.DATA.slLimitId == "") OR ((CDOUBLE(BANCS.INPUT.balance) == 0) AND (CDOUBLE(BANCS.INPUT.holdAmount) == 0)) OR(CUST.DATA.markInvokeStatus == "G")) THEN
		#{
			GOTO ENDSCRIPT
		#}
		ENDIF
		IF(CUST.DATA.menuId == "OGM") THEN
		#{
			CUST.DATA.srvFieldNames = "bgChargeDtl.eventOperType"
			CUST.DATA.srvFieldValues = "eventOperType"
			sub_getFieldValuesfromSRVStructB("1","CUST","DATA",CUST.DATA.srvFieldNames,CUST.DATA.srvFieldValues)
			PRINT(CUST.DATA.eventOperType)
		#}
		ENDIF
		sv_h = ""
		sv_h = sv_h + " liabAmt|SELECT BG_LIAB_AMT"
		sv_h = sv_h + " FROM TBAADM.BGM "
		sv_h = sv_h + " WHERE  BG_SRL_NUM = '" + CUST.DATA.b2kRefNo + "' "
		sv_h = sv_h + " AND BANK_ID = '" + BANCS.STDIN.contextBankId + "'" 
		print(sv_h)
		sv_i = urhk_dbSelectWithBind(sv_h)
		print(sv_i)
		IF (sv_i == 0) THEN
		#{
			CUST.DATA.liabAmt = BANCS.OUTPARAM.liabAmt
		#}
		ENDIF
		IF((CDOUBLE(CUST.DATA.liabAmt) == 0) AND (CUST.DATA.eventOperType == "Z")) THEN
		#{
			GOTO ENDSCRIPT
		#}
		ENDIF
                #IF((CUST.DATA.slLimitId != "")AND(CDOUBLE(CUST.DATA.prevEarMark)!= 0))THEN
                #IF(CDOUBLE(CUST.DATA.prevEarMark)!= 0)THEN
                #{
                CALL("updAvalLimit.scr")
                IF(FIELDEXISTS(INTF.DATA.orgCode))THEN
                #{
                                IF(INTF.DATA.orgCode != "000")THEN
                                #{
                                                sv_a = urhk_SRV_SetErr(INTF.DATA.orgCode + " - " + INTF.DATA.ErrorDesc)
						sv_u = urhk_setOrbOut("SuccessOrFailure|N")
						BANCS.OUTPUT.successOrFailure = "F"
                                                EXITSCRIPT
                                #}
                                ENDIF
                #}
                ENDIF
                #}
                #ENDIF
		ENDSCRIPT:
                TRACE OFF
                EXITSCRIPT
END-->

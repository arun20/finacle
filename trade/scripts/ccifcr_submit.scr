IMPORT LibCommonB001
IMPORT common_business_XMLFunctions
IMPORT CIFCommonFunctions

<--START
	TRACE ON
	#=====================================================
	# Creating Repository
	#=====================================================
	sub_createRepClassB("INTF", "DATA")
	
	#=====================================================
	# Variable Initialization
	#=====================================================
	sub_copyOptionalFieldB("slCifId","INTF","DATA","slCifId","")
	PRINT(INTF.DATA.slCifId)
	INTF.DATA.bankId 	= BANCS.STDIN.contextBankId
	INTF.DATA.addFlag 	= "Y"
	INTF.DATA.verifyFlag 	= "Y"
	
	#=====================================================
	# Selecting latest response from custom table
	#=====================================================
	BANCS.INPARAM.BINDVARS = INTF.DATA.slCifId +"|"+ INTF.DATA.bankId
	
	lv_s = "srlNum,cifXmlResponse|SELECT SRL_NUM,XML_RESPONSE FROM ("
	lv_s = lv_s + " SELECT	SRL_NUM,XML_RESPONSE "
	lv_s = lv_s + " FROM	CUSTOM.C_CCIFCR "
	lv_s = lv_s + " WHERE	SL_CIF_ID = ?SVAR "
	lv_s = lv_s + " AND	BANK_ID = ?SVAR "
	lv_s = lv_s + " ORDER	BY SRL_NUM DESC) "
	lv_s = lv_s + " WHERE	ROWNUM = 1"
	
	lv_u = urhk_dbSelectLongWithBind(lv_s)
	IF(lv_u != 0) THEN
	#{
		INTF.DATA.errorMsg = "Database operation failed. Please contact administrator."
		GOTO SENDERROR
	#}
	ENDIF
	sub_copyOutparamFieldB("cifXmlResponse","INTF","DATA","cifXmlResponse","")
	sub_copyOutparamFieldB("srlNum","INTF","DATA","srlNum","")
	PRINT(INTF.DATA.cifXmlResponse)
	PRINT(INTF.DATA.srlNum)
	
	#=====================================================
	# Getting Customer Type and other details
	#=====================================================
	lv_e = func_xmlParseFunc(INTF.DATA.cifXmlResponse,"<tradeFinCustFlag>","</tradeFinCustFlag>",BYREF INTF.DATA.tradeCustFlag)
	print(INTF.DATA.tradeCustFlag)
	lv_e = func_xmlParseFunc(INTF.DATA.cifXmlResponse,"<treasuryCustFlag>","</treasuryCustFlag>",BYREF INTF.DATA.treasuryCustFlag)
	print(INTF.DATA.treasuryCustFlag)
	lv_e = func_xmlParseFunc(INTF.DATA.cifXmlResponse,"<custType>","</custType>",BYREF INTF.DATA.custType)
	print(INTF.DATA.custType)
	
	#=====================================================
	# Treasury Customer Flag Validation
	#=====================================================
	IF((INTF.DATA.tradeCustFlag == "Y") OR (INTF.DATA.treasuryCustFlag == "Y")) THEN
	#{
		#=====================================================
		# Calling sub routine to get CIF details
		#=====================================================
		sub_getCIFDetails("INTF","DATA")
	#}
	ELSE
	#{
		INTF.DATA.errorMsg = "Customer not availed for TF/TS"
		GOTO SENDERROR
	#}
	ENDIF
	
	#=====================================================
	# Service Id selection based on Customer Type
	#=====================================================
	IF(TOUPPER(INTF.DATA.custType) == "RETAIL") THEN
	#{
		INTF.DATA.srvReqId	= "RetCustAdd"
	#}
	ELSE
	#{
		INTF.DATA.srvReqId	= "createCorporateCustomer"
	#}
	ENDIF
	
	#=====================================================
	# Calling sub routine to add CIF
	#=====================================================
	sub_createCIFAdd("INTF","DATA")
	
	lv_e = func_xmlParseFunc(BANCS.OUTPARAM.RespMesg,"<Status>","</Status>",BYREF INTF.DATA.status)
	IF((TOUPPER(INTF.DATA.status) == "FAILED") OR (TOUPPER(INTF.DATA.status) == "FAILURE")) THEN
	#{
		lv_e = func_xmlParseFunc(BANCS.OUTPARAM.RespMesg,"<ErrorDesc>","</ErrorDesc>",BYREF INTF.DATA.errorDesc)
		#INTF.DATA.errorMsg = "CIF creation failed. Please contact administartor."
		INTF.DATA.errorMsg = INTF.DATA.errorDesc
		INTF.DATA.errorMsg = func_replaceCharB(INTF.DATA.errorMsg,"|","")
		PRINT(INTF.DATA.errorMsg)
		GOTO SENDERROR
	#}
	ENDIF
	
	#====================================================================
	# Fetching generated CIF and response message
	#====================================================================
	IF(TOUPPER(INTF.DATA.custType) == "RETAIL") THEN
	#{
		lv_e = func_xmlParseFunc(BANCS.OUTPARAM.RespMesg,"<CustId>","</CustId>",BYREF INTF.DATA.crmCifId)
		print(INTF.DATA.crmCifId)
	#}
	ELSE
	#{
		lv_e = func_xmlParseFunc(BANCS.OUTPARAM.RespMesg,"<cifid>","</cifid>",BYREF INTF.DATA.crmCifId)
		print(INTF.DATA.crmCifId)
	#}
	ENDIF
	
	#====================================================================
	# If tradeFinCustFlag = "N", Then CIF creation should be verified
	#====================================================================
	IF(INTF.DATA.tradeCustFlag == "N") THEN
	#{
		INTF.DATA.srvReqId = "verifyCustomerDetails"
		sub_createCIFVerify("INTF","DATA")
		lv_e = func_xmlParseFunc(BANCS.OUTPARAM.RespMesg,"<Status>","</Status>",BYREF INTF.DATA.status)
		IF((TOUPPER(INTF.DATA.status) == "FAILED") OR (TOUPPER(INTF.DATA.status) == "FAILURE")) THEN
		#{
			IF(TOUPPER(INTF.DATA.custType) == "RETAIL") THEN
			#{
				INTF.DATA.resultMsg = "Retail Customer successfully created with CIFID " + INTF.DATA.crmCifId + ". But CIF verification failed. Please contact administrator."
			#}
			ELSE
			#{
				INTF.DATA.resultMsg = "Corporate Customer successfully created with CIFID " + INTF.DATA.crmCifId + ". But CIF verification failed. Please contact administrator."
			#}
			ENDIF
			INTF.DATA.verifyFlag = "N"
		#}
		ENDIF
	#}
	ENDIF
	
	#====================================================================
	# Updating the CIF Id created in custom table
	#====================================================================
	INTF.DATA.uniqueKey       = "SRL_NUM|SL_CIF_ID|BANK_ID"
	INTF.DATA.uniqueKeyValues = INTF.DATA.srlNum + "|" + INTF.DATA.slCifId + "|" + BANCS.STDIN.contextBankId
	PRINT(INTF.DATA.uniqueKeyValues)
	lv_a = func_updateCustTableB("CUSTOM.C_CCIFCR","CRM_CIF_ID|LCHG_USER_ID|LCHG_TIME",INTF.DATA.crmCifId+"|"+BANCS.STDIN.userId+"|DT"+BANCS.STDIN.sysDate,INTF.DATA.uniqueKey,INTF.DATA.uniqueKeyValues)
	
	IF((INTF.DATA.addFlag == "Y") AND (INTF.DATA.tradeCustFlag == "Y")) THEN
	#{
		IF(TOUPPER(INTF.DATA.custType) == "RETAIL") THEN
		#{
			INTF.DATA.resultMsg = "Retail Customer successfully created with CIFID " + INTF.DATA.crmCifId
		ELSE
		#{
			INTF.DATA.resultMsg = "Corporate Customer successfully created with CIFID " + INTF.DATA.crmCifId
		#}
		ENDIF
	#}
	ENDIF
	
	IF((INTF.DATA.addFlag == "Y") AND (INTF.DATA.tradeCustFlag == "N") AND (INTF.DATA.verifyFlag == "Y")) THEN
	#{
		IF(TOUPPER(INTF.DATA.custType) == "RETAIL") THEN
		#{
			INTF.DATA.resultMsg = "Retail Customer successfully created and verified with CIFID " + INTF.DATA.crmCifId
		ELSE
		#{
			INTF.DATA.resultMsg = "Corporate Customer successfully created and verified with CIFID " + INTF.DATA.crmCifId
		#}
		ENDIF
	#}
	ENDIF
	
	#=====================================================
	# Assigning Success/Failure Message
	#=====================================================
	BANCS.OUTPUT.successOrFailure = "S"
	lv_u = urhk_SetOrbOut("SuccessOrFailure|Y")
	lv_u = urhk_SetOrbOut("RESULT_MSG|"+ INTF.DATA.resultMsg)
	GOTO ENDOFSCRIPT
	SENDERROR:
		BANCS.OUTPUT.successOrFailure = "F"
		lv_u = urhk_SetOrbOut("SuccessOrFailure|N")
		lv_u = urhk_SetOrbOut("Error_1|Error ^"+INTF.DATA.errorMsg+"^dummy")
	ENDOFSCRIPT:
	EXITSCRIPT
END-->

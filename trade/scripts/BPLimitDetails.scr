IMPORT LibCommonB001
IMPORT LibCommonB002
IMPORT customFields
<--START
	# Script body goes here
	TRACE ON
	sub_createRepClassB("CUST","DATA")

	##sv_a = urhk_b2k_printRepos("BANCS")
	#sv_a = urhk_b2k_printRepos("ONS")

	CUST.DATA.slLimitId = ""
	CUST.DATA.chkTxnSeq = ""
	CUST.DATA.tsCnt = "0"
	CUST.DATA.errorFlg = "N"
	CUST.DATA.totEarMark  = "0"
	CUST.DATA.slLimitId = ""
	CUST.DATA.slAcctName = ""
	CUST.DATA.slAccBal = "0"
	CUST.DATA.slAccSts = ""
	BANCS.INPUT.holdAmount = "0"
	sv_a = func_getCallingMenuOptionB("CMMSG00004",BYREF CUST.DATA.menuId)
	PRINT(CUST.DATA.menuId)
	CUST.DATA.sysDate = func_getSysDateTimeWithFormatB("DD-MM-YYYY hh24:mi:ss")
	PRINT(CUST.DATA.sysDate)
	CUST.DATA.serviceName = BANCS.STDIN.serviceName
	IF((CUST.DATA.menuId == "OAACPS") OR (CUST.DATA.menuId == "OAACVPS")  OR (CUST.DATA.menuId == "OAACMPS") OR (CUST.DATA.menuId == "HOAACOD") OR (CUST.DATA.menuId == "HOAACMOD") OR (CUST.DATA.menuId == "HOAACVOD") OR (CUST.DATA.menuId == "HACM")) THEN
	#{
		sub_getFieldValuesfromONSB("1","CUST","DATA","FRWK_ACCT_LIMIT_FIELD_1","slLimitId","")	
		PRINT(CUST.DATA.slLimitId)
		IF((CUST.DATA.menuId == "OAACPS") OR (CUST.DATA.menuId == "OAACVPS")  OR (CUST.DATA.menuId == "OAACMPS")) THEN
		#{
			sub_getFieldValuesfromONSB("1","CUST","DATA","ACMPS_INT_TAX_DETAILS_FIELD_1","slAcctId","")
			PRINT(CUST.DATA.slAcctId)
			CUST.DATA.slLimitId     = TOUPPER(CUST.DATA.slLimitId)
			sub_getFieldValuesfromONSB("1","CUST","DATA","ACMPS_INT_TAX_DETAILS_FIELD_2","slAcctName","")
			PRINT(CUST.DATA.slAcctName)
			sub_getFieldValuesfromONSB("1","CUST","DATA","ACMPS_INT_TAX_DETAILS_FIELD_3","slAcctCcy","")
			PRINT(CUST.DATA.slAcctCcy)
			sub_getFieldValuesfromONSB("1","CUST","DATA","ACMPS_INT_TAX_DETAILS_FIELD_4","slAccBal","")
			PRINT(CUST.DATA.slAccBal)
			sub_getFieldValuesfromONSB("1","CUST","DATA","ACMPS_INT_TAX_DETAILS_FIELD_5","slAccSts","")
			PRINT(CUST.DATA.slAccSts)
			CUST.DATA.b2kIdType = "ACOPS"
		#}
		ENDIF
		IF((CUST.DATA.menuId == "HOAACOD") OR (CUST.DATA.menuId == "HOAACMOD")  OR (CUST.DATA.menuId == "HOAACVOD")) THEN
                #{
                        sub_getFieldValuesfromONSB("1","CUST","DATA","FRWK_GENERAL_DETAILS2_FIELD_1","slAcctId","")
                        PRINT(CUST.DATA.slAcctId)
                        CUST.DATA.slLimitId     = TOUPPER(CUST.DATA.slLimitId)
                        sub_getFieldValuesfromONSB("1","CUST","DATA","FRWK_GENERAL_DETAILS2_FIELD_2","slAcctName","")
                        PRINT(CUST.DATA.slAcctName)
                        sub_getFieldValuesfromONSB("1","CUST","DATA","FRWK_GENERAL_DETAILS2_FIELD_3","slAcctCcy","")
                        PRINT(CUST.DATA.slAcctCcy)
                        sub_getFieldValuesfromONSB("1","CUST","DATA","FRWK_GENERAL_DETAILS2_FIELD_4","slAccBal","")
                        PRINT(CUST.DATA.slAccBal)
                        sub_getFieldValuesfromONSB("1","CUST","DATA","FRWK_GENERAL_DETAILS2_FIELD_5","slAccSts","")
                        PRINT(CUST.DATA.slAccSts)
			CUST.DATA.b2kIdType = "ACOOD"
                #}
                ENDIF		
		sv_u = urhk_SRV_GetVal("acctCommonInfo.acctGeneralInfo.acctBasic.foracid")
		CUST.DATA.foracid = BANCS.OUTPARAM.srvValue
		sv_u = urhk_SRV_GetVal("acctCommonInfo.acctGeneralInfo.acctBasic.acctCrncyCode.crncyCode")
		CUST.DATA.crncy = BANCS.OUTPARAM.srvValue
		sv_u = urhk_SRV_GetVal("acctCommonInfo.acctLimits.sanctionLimit")
		CUST.DATA.b2kEventAmt = BANCS.OUTPARAM.srvValue
		CUST.DATA.b2kEventAmt = CDOUBLE(CUST.DATA.b2kEventAmt)
		PRINT(CUST.DATA.foracid)
		PRINT(CUST.DATA.crncy)
		print(CUST.DATA.b2kEventAmt)
		CUST.DATA.eventType = "I"
		

		BANCS.INPARAM.BINDVARS = CUST.DATA.foracid + "|" + BANCS.STDIN.contextBankId
		BANCS.INPARAM.BINDVARS = BANCS.INPARAM.BINDVARS  + "|" + CUST.DATA.foracid + "|" + BANCS.STDIN.contextBankId
		sv_a = "prevEntityAmt,prevEntityCcy,prevEarMark,limitId|SELECT ENTITY_AMOUNT,ENTITY_CCY,TOTAL_EARMARK,SL_LIMIT_ID"
		sv_a = sv_a + " FROM CUSTOM.C_TFCT_TBL WHERE B2K_ID = TRIM(?SVAR) AND BANK_ID = ?SVAR AND SRL_NUM IN ( "
		sv_a = sv_a + " SELECT MAX(SRL_NUM) FROM CUSTOM.C_TFCT_TBL WHERE B2K_ID = TRIM(?SVAR) AND BANK_ID = ?SVAR) AND ROWNUM = 1"
		PRINT(sv_a)
		sv_a = urhk_dbSelectWithBind(sv_a)
		sub_copyOutparamFieldB("prevEntityAmt","CUST","DATA","prevEntityAmt","0")
		sub_copyOutparamFieldB("prevEntityCcy","CUST","DATA","prevEntityCcy","")
		sub_copyOutparamFieldB("prevEarMark","CUST","DATA","prevEarMark","0")
		sub_copyOutparamFieldB("limitId","CUST","DATA","limitId","")
		PRINT(CUST.DATA.prevEarMark)
		print(CUST.DATA.prevEntityAmt)
		PRINT(CUST.DATA.limitId)
		
		IF(CUST.DATA.menuId == "HACM") THEN
		#{
			sub_getFieldValuesfromONSB("1","CUST","DATA","FRWK_ACMOITDET_FIELD_1","slAcctId","")
			PRINT(CUST.DATA.slAcctId)
			CUST.DATA.slLimitId     = TOUPPER(CUST.DATA.limitId)
			sub_getFieldValuesfromONSB("1","CUST","DATA","FRWK_ACMOITDET_FIELD_2","slAcctName","")
			PRINT(CUST.DATA.slAcctName)
			sub_getFieldValuesfromONSB("1","CUST","DATA","FRWK_ACMOITDET_FIELD_3","slAcctCcy","")
			PRINT(CUST.DATA.slAcctCcy)
			sub_getFieldValuesfromONSB("1","CUST","DATA","FRWK_ACMOITDET_FIELD_4","slAccBal","")
			PRINT(CUST.DATA.slAccBal)
			sub_getFieldValuesfromONSB("1","CUST","DATA","FRWK_ACMOITDET_FIELD_5","slAccSts","")
			PRINT(CUST.DATA.slAccSts)
			CUST.DATA.b2kIdType = "ACOOD"
			CUST.DATA.b2kEventAmt = CUST.DATA.prevEntityAmt
		#}
		ENDIF

		IF((CUST.DATA.menuId == "OAACPS") OR (CUST.DATA.menuId == "HOAACOD"))  THEN
		#{
			BANCS.INPUT.acfNum              = CUST.DATA.slLimitId
			BANCS.INPUT.holdAmount  = FORMAT$(CDOUBLE(CUST.DATA.b2kEventAmt),"%2.2f")	
			CUST.DATA.eventType = "O"
			BANCS.INPUT.earType = "A"
			IF(CUST.DATA.crncy!= "") THEN
			#{
				BANCS.INPUT.currency    = CUST.DATA.crncy
			#}
			ENDIF
		#}
		ENDIF

		IF(((CUST.DATA.menuId == "OAACVPS") AND (CUST.DATA.serviceName =="SRV_CancelPCAcct")) OR ((CUST.DATA.menuId == "HOAACVOD") AND (CUST.DATA.serviceName =="SRV_CancelODAcct"))) THEN
		#{
			BANCS.INPUT.acfNum              = CUST.DATA.limitId
			BANCS.INPUT.holdAmount  = FORMAT$(CDOUBLE(CUST.DATA.b2kEventAmt),"%2.2f")
			BANCS.INPUT.earType     = "R"
			CUST.DATA.eventType = "X"
			IF(CUST.DATA.crncy != "") THEN
			#{
				BANCS.INPUT.currency    = CUST.DATA.crncy
			#}
			ENDIF
		#}
		ENDIF	
	
		IF(((CUST.DATA.menuId == "OAACMPS") OR (CUST.DATA.menuId == "HOAACMOD")) AND (TRIM(CUST.DATA.slLimitId) != "")) THEN
		#{
			BANCS.INPUT.acfNum              = CUST.DATA.limitId
			BANCS.INPUT.earType = "R"
			BANCS.INPUT.holdAmount = CDOUBLE(CUST.DATA.prevEarMark)
			IF(CUST.DATA.crncy != "") THEN
			#{
				BANCS.INPUT.currency    = CUST.DATA.crncy
			#}
			ENDIF
			CUST.DATA.eventType = "M"
			IF(BANCS.INPUT.holdAmount != 0) THEN
			#{
				CALL("mngEarmark.scr")
				IF(FIELDEXISTS(INTF.DATA.orgCode))THEN
				#{
					IF(INTF.DATA.orgCode != "000")THEN
					#{
						CUST.DATA.errorMsg = INTF.DATA.orgCode+"-"+INTF.DATA.ErrorDesc
						CUST.DATA.errorFlg = "Y"
						GOTO ENDOFSCRIPT
					#}
					ENDIF
					CUST.DATA.totEarMark = CDOUBLE(CUST.DATA.prevEarMark) - CDOUBLE(BANCS.INPUT.holdAmount)
				#}
				ENDIF
			#}
			ENDIF
			BANCS.INPUT.earType = "A"
			BANCS.INPUT.holdAmount  = FORMAT$(CDOUBLE(CUST.DATA.b2kEventAmt),"%2.2f")
			pRINT(BANCS.INPUT.holdAmount)
			BANCS.INPUT.acfNum              = CUST.DATA.slLimitId	
			print(BANCS.INPUT.acfNum)
		#}
		ENDIF
		
		IF((TRIM(CUST.DATA.slLimitId) != "") AND (CDOUBLE(BANCS.INPUT.holdAmount) != 0) AND (CUST.DATA.serviceName != "SRV_VerifyPCAcct") AND (CUST.DATA.serviceName != "SRV_VerifyODAcct") ) THEN
		#{
			CALL("mngEarmark.scr")
			IF(FIELDEXISTS(INTF.DATA.orgCode))THEN
			#{
				IF(INTF.DATA.orgCode != "000")THEN
				#{
						CUST.DATA.errorMsg = INTF.DATA.orgCode+"-"+INTF.DATA.ErrorDesc
						CUST.DATA.errorFlg = "Y"
						GOTO ENDOFSCRIPT
				#}
				ENDIF
				
				IF(BANCS.INPUT.earType == "A")THEN
				#{
						CUST.DATA.totEarMark = CDOUBLE(CUST.DATA.totEarMark) + CDOUBLE(BANCS.INPUT.holdAmount)
				#}
				ENDIF
				
				IF(BANCS.INPUT.earType == "R")THEN
				#{
						CUST.DATA.totEarMark = CDOUBLE(CUST.DATA.totEarMark) - CDOUBLE(BANCS.INPUT.holdAmount)
				#}
				ENDIF
				
				PRINT(CUST.DATA.totEarMark)
			#}
			ENDIF
		#}
		ENDIF

		IF((CUST.DATA.serviceName !="SRV_CancelPCAcct") AND (CUST.DATA.serviceName !="SRV_VerifyPCAcct")AND (CUST.DATA.serviceName !="SRV_CancelODAcct") AND (CUST.DATA.serviceName !="SRV_VerifyODAcct") ) THEN
		#{ 

			### GET MAX OF RUNNING SRL NUM FOR ENTITY ID ###
			sv_a = func_selectFromCustTableB("srlNum","MAX(SRL_NUM)","CUSTOM.C_TFCT_TBL","B2K_ID|B2KID_TYPE|BANK_ID", CUST.DATA.foracid + "|" + CUST.DATA.b2kIdType + "|"+ BANCS.STDIN.contextBankId)
			PRINT(sv_a)
			sub_copyOutparamFieldB("srlNum","CUST","DATA","srlNum","0")
			PRINT(CUST.DATA.srlNum)
			CUST.DATA.newSrlNum = CINT(CUST.DATA.srlNum) + 1
			PRINT(CUST.DATA.newSrlNum)
			
			BANCS.INPARAM.BINDVARS = CUST.DATA.foracid  + "|" + CUST.DATA.b2kIdType + "|" + CUST.DATA.eventType + "|" + CUST.DATA.slLimitId
			BANCS.INPARAM.BINDVARS = BANCS.INPARAM.BINDVARS + "|" + BANCS.STDIN.contextBankId + "|" + BANCS.STDIN.userId + "|" + CUST.DATA.sysDate + "|" + BANCS.STDIN.userId 
			BANCS.INPARAM.BINDVARS = BANCS.INPARAM.BINDVARS + "|" + CUST.DATA.sysDate + "|"+ CUST.DATA.tsCnt + "|" + CUST.DATA.chkTxnSeq
			BANCS.INPARAM.BINDVARS = BANCS.INPARAM.BINDVARS + "|"  + CUST.DATA.b2kEventAmt + "|" + CUST.DATA.crncy + "|" + CUST.DATA.newSrlNum + "|" + "N"
			BANCS.INPARAM.BINDVARS = BANCS.INPARAM.BINDVARS + "|" + CUST.DATA.serviceName + "|" + CUST.DATA.menuId + "|" + CUST.DATA.totEarMark + "|" + CUST.DATA.slAcctId 
			BANCS.INPARAM.BINDVARS = BANCS.INPARAM.BINDVARS + "|" + CUST.DATA.slAcctName + "|" + CUST.DATA.slAccBal + "|" + CUST.DATA.slAccSts  + "|" + CUST.DATA.slAcctCcy
			PRINT(BANCS.INPARAM.BINDVARS)
			sv_q = "INSERT INTO CUSTOM.C_TFCT (B2K_ID,B2KID_TYPE,EVENT_TYPE,SL_LIMIT_ID,"
			sv_q = sv_q + " BANK_ID,LCHG_USER_ID,LCHG_TIME,RCRE_USER_ID,RCRE_TIME,TS_CNT,"
			sv_q = sv_q + "SEQ_TRAN_ID_SL,ENTITY_AMOUNT,ENTITY_CCY,SRL_NUM,ENTITY_CRE_FLG,SRV_NAME,MENU_ID,TOTAL_EARMARK,SL_ACCT_ID, "
			sv_q = sv_q + "ACCT_NAME,ACCT_BAL,ACCT_STATUS,ACCT_CCY) "
			sv_q = sv_q + " VALUES (?SVAR, ?SVAR, ?SVAR, ?SVAR, ?SVAR, ?SVAR, TO_DATE(?SVAR,'DD-MM-YYYY HH24:MI:SS'), ?SVAR,"
			 sv_q = sv_q + "TO_DATE(?SVAR,'DD-MM-YYYY HH24:MI:SS'),?SVAR,?SVAR,?SVAR,?SVAR,?SVAR,?SVAR,?SVAR,?SVAR,?SVAR,?SVAR, "
			sv_q = sv_q + " ?SVAR,?SVAR,?SVAR,?SVAR)"
			PRINT(sv_q)
			sv_a = urhk_dbSQLWithBind(sv_q)
			PRINT(sv_a)
			IF(sv_a != 0)THEN
			#{
				CUST.DATA.errorFlg = "Y"
				CUST.DATA.errorMsg = "INSERT INTO CUSTOM.C_TFCT TABLE FAILED"
				GOTO ENDOFSCRIPT
			#}
			ENDIF 
		#}
		ENDIF
	#}
	ENDIF

	IF(CUST.DATA.menuId == "HACLHM") THEN
	#{
		sub_getFieldValuesfromONSB("1","CUST","DATA","aclslres_FIELD_1","slLimitId","")
		PRINT(CUST.DATA.slLimitId)
		CUST.DATA.slLimitId     = TOUPPER(CUST.DATA.slLimitId)
		sv_u = urhk_SRV_GetVal("limitHdr.limitAcct.foracid")
		CUST.DATA.foracid = BANCS.OUTPARAM.srvValue
		sv_u = urhk_SRV_GetVal("limitHdr.limitAcct.crncyCode")
		CUST.DATA.crncy = BANCS.OUTPARAM.srvValue
		CUST.DATA.b2kIdType = "ACOBP"
		sv_u = urhk_SRV_GetVal("limitHdr.count")
		CUST.DATA.totRec = BANCS.OUTPARAM.srvValue
		PRINT(CUST.DATA.foracid)
		PRINT(CUST.DATA.crncy)
		PRINT(CUST.DATA.totRec)
		sv_u = urhk_SRV_GetVal("limitHdr.funcCode")
		CUST.DATA.funcCode = BANCS.OUTPARAM.srvValue
		PRINT(CUST.DATA.funcCode)
		
		BANCS.INPARAM.BINDVARS = CUST.DATA.foracid + "|" + BANCS.STDIN.contextBankId
		BANCS.INPARAM.BINDVARS = BANCS.INPARAM.BINDVARS  + "|" + CUST.DATA.foracid + "|" + BANCS.STDIN.contextBankId
		sv_a = "prevEntityAmt,prevEntityCcy,prevEarMark|SELECT ENTITY_AMOUNT,ENTITY_CCY,TOTAL_EARMARK"
		sv_a = sv_a + " FROM CUSTOM.C_TFCT_TBL WHERE B2K_ID = TRIM(?SVAR) AND BANK_ID = ?SVAR AND SRL_NUM IN ( "
		sv_a = sv_a + " SELECT MAX(SRL_NUM) FROM CUSTOM.C_TFCT_TBL WHERE B2K_ID = TRIM(?SVAR) AND BANK_ID = ?SVAR) AND ROWNUM = 1"
		PRINT(sv_a)
		sv_a = urhk_dbSelectWithBind(sv_a)
		sub_copyOutparamFieldB("prevEntityAmt","CUST","DATA","prevEntityAmt","0")
		sub_copyOutparamFieldB("prevEntityCcy","CUST","DATA","prevEntityCcy","")
		sub_copyOutparamFieldB("prevEarMark","CUST","DATA","prevEarMark","0")
		PRINT(CUST.DATA.prevEarMark)
		print(CUST.DATA.prevEntityAmt)

		sv_i = 0
		WHILE(sv_i <= CINT(CUST.DATA.totRec))	
		#{
			sv_u = urhk_SRV_GetVal("limitLL.<rec_"+FORMAT$(sv_i,"%d")+">.sanctLimit")
			CUST.DATA.b2kEventAmt = BANCS.OUTPARAM.srvValue
			CUST.DATA.b2kEventAmt = CDOUBLE(CUST.DATA.b2kEventAmt)
			PRINT(CUST.DATA.b2kEventAmt)	
			IF(CUST.DATA.serviceName == "SRV_CancelAcctSanctLimit") THEN
			#{
				BANCS.INPUT.acfNum = CUST.DATA.slLimitId
				BANCS.INPUT.holdAmount  = FORMAT$(CDOUBLE(CUST.DATA.prevEarMark),"%2.2f")
				BANCS.INPUT.earType     = "R"
				CUST.DATA.eventType = "X"
				IF(CUST.DATA.crncy != "") THEN
				#{
					BANCS.INPUT.currency    = CUST.DATA.crncy
				#}
				ENDIF
				IF(BANCS.INPUT.holdAmount <= 0) THEN
                                #{
                                        GOTO NEXTINS
                                #}
                                ENDIF
			#}
			ENDIF
			IF((CUST.DATA.serviceName == "SRV_AddAcctSanctLimit") AND (TRIM(CUST.DATA.slLimitId) != "")) THEN
			#{
				BANCS.INPUT.acfNum = CUST.DATA.slLimitId				
				CUST.DATA.eventType = "M"
				BANCS.INPUT.earType = "A"
				BANCS.INPUT.holdAmount = CDOUBLE(CUST.DATA.b2kEventAmt) - CDOUBLE(CUST.DATA.prevEntityAmt)
				IF(CUST.DATA.crncy != "") THEN
                                #{
                                        BANCS.INPUT.currency    = CUST.DATA.crncy
                                #}
                                ENDIF
				IF(BANCS.INPUT.holdAmount <= 0) THEN
				#{
					CUST.DATA.totEarMark = BANCS.INPUT.holdAmount
					GOTO NEXTINS	
				#}
				ENDIF 
			#}
			ENDIF
			
			IF((TRIM(CUST.DATA.slLimitId) != "") AND (CDOUBLE(BANCS.INPUT.holdAmount) != 0) AND (CUST.DATA.serviceName != "SRV_VerifyAcctSanctLimit") )THEN
			#{
				CALL("mngEarmark.scr")
				IF(FIELDEXISTS(INTF.DATA.orgCode))THEN
				#{
					IF(INTF.DATA.orgCode != "000")THEN
					#{
							CUST.DATA.errorMsg = INTF.DATA.orgCode+"-"+INTF.DATA.ErrorDesc
							CUST.DATA.errorFlg = "Y"
							GOTO ENDOFSCRIPT
					#}
					ENDIF
					
					IF(BANCS.INPUT.earType == "A")THEN
					#{
						PRINT(CDOUBLE(CUST.DATA.prevEarMark))
						PRINT(CDOUBLE(BANCS.INPUT.holdAmount))
							CUST.DATA.totEarMark = CDOUBLE(CUST.DATA.prevEarMark) + CDOUBLE(BANCS.INPUT.holdAmount)
					#}
					ENDIF
					
					PRINT(CUST.DATA.totEarMark)
				#}
				ENDIF
			#}
			ENDIF

			NEXTINS:

			IF((CUST.DATA.serviceName !="SRV_CancelAcctSanctLimit") AND (CUST.DATA.serviceName !="SRV_VerifyAcctSanctLimit") AND (TRIM(CUST.DATA.slLimitId) != ""))  THEN
			#{
				### GET MAX OF RUNNING SRL NUM FOR ENTITY ID ###
				sv_a = func_selectFromCustTableB("srlNum","MAX(SRL_NUM)","CUSTOM.C_TFCT_TBL","B2K_ID|B2KID_TYPE|BANK_ID", CUST.DATA.foracid + "|" + CUST.DATA.b2kIdType + "|"+ BANCS.STDIN.contextBankId)
				PRINT(sv_a)
				sub_copyOutparamFieldB("srlNum","CUST","DATA","srlNum","0")
				PRINT(CUST.DATA.srlNum)
				CUST.DATA.newSrlNum = CINT(CUST.DATA.srlNum) + 1
				PRINT(CUST.DATA.newSrlNum)
				
				BANCS.INPARAM.BINDVARS = CUST.DATA.foracid  + "|" + CUST.DATA.b2kIdType + "|" + CUST.DATA.eventType + "|" + CUST.DATA.slLimitId
				BANCS.INPARAM.BINDVARS = BANCS.INPARAM.BINDVARS + "|" + BANCS.STDIN.contextBankId + "|" + BANCS.STDIN.userId + "|" + CUST.DATA.sysDate + "|" + BANCS.STDIN.userId 
				BANCS.INPARAM.BINDVARS = BANCS.INPARAM.BINDVARS + "|" + CUST.DATA.sysDate + "|"+ CUST.DATA.tsCnt + "|" + CUST.DATA.chkTxnSeq
				BANCS.INPARAM.BINDVARS = BANCS.INPARAM.BINDVARS + "|"  + CUST.DATA.b2kEventAmt + "|" + CUST.DATA.crncy + "|" + CUST.DATA.newSrlNum + "|" + "N"
				BANCS.INPARAM.BINDVARS = BANCS.INPARAM.BINDVARS + "|" + CUST.DATA.serviceName + "|" + CUST.DATA.menuId + "|" + CUST.DATA.totEarMark 
				PRINT(BANCS.INPARAM.BINDVARS)
				sv_q = "INSERT INTO CUSTOM.C_TFCT (B2K_ID,B2KID_TYPE,EVENT_TYPE,SL_LIMIT_ID,"
				sv_q = sv_q + " BANK_ID,LCHG_USER_ID,LCHG_TIME,RCRE_USER_ID,RCRE_TIME,TS_CNT,"
				sv_q = sv_q + "SEQ_TRAN_ID_SL,ENTITY_AMOUNT,ENTITY_CCY,SRL_NUM,ENTITY_CRE_FLG,SRV_NAME,MENU_ID,TOTAL_EARMARK) "
				sv_q = sv_q + " VALUES (?SVAR, ?SVAR, ?SVAR, ?SVAR, ?SVAR, ?SVAR, TO_DATE(?SVAR,'DD-MM-YYYY HH24:MI:SS'), ?SVAR,"
				 sv_q = sv_q + "TO_DATE(?SVAR,'DD-MM-YYYY HH24:MI:SS'),?SVAR,?SVAR,?SVAR,?SVAR,?SVAR,?SVAR,?SVAR,?SVAR,?SVAR) "
				PRINT(sv_q)
				sv_a = urhk_dbSQLWithBind(sv_q)
				PRINT(sv_a)
				IF(sv_a != 0)THEN
				#{
					CUST.DATA.errorFlg = "Y"
					CUST.DATA.errorMsg = "INSERT INTO CUSTOM.C_TFCT TABLE FAILED"
					GOTO ENDOFSCRIPT
				#}
				ENDIF 
			#}
			ENDIF
			sv_i = sv_i + 1
		#}
		DO
	#}
	ENDIF

	IF(((CUST.DATA.serviceName =="SRV_VerifyPCAcct") OR (CUST.DATA.serviceName =="SRV_VerifyAcctSanctLimit") OR (CUST.DATA.serviceName =="SRV_VerifyODAcct")) AND (TRIM(CUST.DATA.slLimitId) != "")) THEN
	#{
		CUST.DATA.eventType = "V"
		### INSERT INTO C_TFCT_TBL ###
		BANCS.INPARAM.BINDVARS = CUST.DATA.eventType + "|" + BANCS.STDIN.userId + "|" + CUST.DATA.sysDate + "|" + CUST.DATA.serviceName + "|" + CUST.DATA.menuId
		BANCS.INPARAM.BINDVARS = BANCS.INPARAM.BINDVARS + "|" + CUST.DATA.foracid  + "|" + BANCS.STDIN.contextBankId
		BANCS.INPARAM.BINDVARS = BANCS.INPARAM.BINDVARS + "|" + CUST.DATA.foracid  + "|" + BANCS.STDIN.contextBankId
		PRINT(BANCS.INPARAM.BINDVARS)
		sv_a = "INSERT INTO CUSTOM.C_TFCT_TBL (SELECT B2K_ID,B2KID_TYPE,?SVAR,EVENT_SRL_NUM,TFCT_KEY_SRL_NUM,SL_ACCT_ID,ACCT_NAME,ACCT_STATUS, "
		sv_a = sv_a + " CHRG_EVENT_ID,CHRG_EVENT_TYPE,ACCT_BAL,SL_LIMIT_ID,BANK_ID,?SVAR,TO_DATE(?SVAR,'dd-mm-yyyy hh24:mi:ss'),RCRE_USER_ID,RCRE_TIME,TS_CNT, "
		sv_a = sv_a + " PURPOSE_OF_TXN,ACCT_CCY,SEQ_TRAN_ID_SL,ENTITY_AMOUNT,ENTITY_CCY,AMEND_IND,AMEND_AMT,SRL_NUM+1,'Y',?SVAR,?SVAR,0,SL_REMARKS "
		sv_a = sv_a + " FROM CUSTOM.C_TFCT_TBL WHERE B2K_ID = ?SVAR AND BANK_ID = ?SVAR "
		sv_a = sv_a + " AND SRL_NUM = (SELECT MAX(SRL_NUM) FROM CUSTOM.C_TFCT_TBL WHERE B2K_ID = ?SVAR AND BANK_ID = ?SVAR)) "
		PRINT(sv_a)
		sv_a = urhk_dbSQLWithBind(sv_a)
		PRINT(sv_a)
		IF(sv_a != 0)THEN
		#{
				CUST.DATA.errorFlg = "Y"
				CUST.DATA.errorMsg = "UPDATE OF ENTITY_CRE_FLG ON CUSTOM.C_TFCT TABLE FAILED"
				GOTO ENDOFSCRIPT
		#}
		ENDIF
	#}
	ENDIF

	IF(((CUST.DATA.serviceName == "SRV_CancelAcctSanctLimit") OR (CUST.DATA.serviceName == "SRV_CancelPCAcct") OR (CUST.DATA.serviceName == "SRV_CancelODAcct")) AND (TRIM(CUST.DATA.slLimitId) != "") )THEN
	#{
		BANCS.INPARAM.BINDVARS = CUST.DATA.foracid  + "|" + BANCS.STDIN.contextBankId
		BANCS.INPARAM.BINDVARS = BANCS.INPARAM.BINDVARS + "|" + CUST.DATA.foracid  + "|" + BANCS.STDIN.contextBankId
		PRINT(BANCS.INPARAM.BINDVARS)
		sv_a = "DELETE FROM CUSTOM.C_TFCT_TBL WHERE B2K_ID = ?SVAR AND BANK_ID = ?SVAR "
		sv_a = sv_a + "AND SRL_NUM = (SELECT MAX(SRL_NUM) FROM CUSTOM.C_TFCT_TBL WHERE B2K_ID = ?SVAR AND BANK_ID = ?SVAR) AND ENTITY_CRE_FLG = 'N'"
		PRINT(sv_a)
		sv_a = urhk_dbSQLWithBind(sv_a)
		PRINT(sv_a)
	#}
	ENDIF
	
ENDOFSCRIPT :
IF(CUST.DATA.errorFlg == "Y")THEN
#{
	PRINT(CUST.DATA.errorMsg)
	sv_a = urhk_SRV_SetErr(CUST.DATA.errorMsg)
	sv_u = urhk_setOrbOut("SuccessOrFailure|N")
	BANCS.OUTPUT.successOrFailure = "F"
#}
ENDIF
sub_deleteRepClassB("CUST","DATA")
TRACE OFF	 


END-->


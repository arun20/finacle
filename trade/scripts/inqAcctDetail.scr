#============================================================
# IMPORTANT: Auto Generated Header. DO NOT CHANGE MANUALLY.
# Product: Finacle Core
# Category: User Defined
# Script: inqAcctDetail.scr
# Type: NA|default
# Description: inqAcctDetail.scr
# Author: Sreedevi_Neelam
# Date: 5/21/18 9:26 AM
# Modification Log:
#============================================================
IMPORT LibCommonB001
IMPORT LibCommonB002
IMPORT common_business_XMLFunctions
IMPORT inqAcctDetailInput
<--START
TRACE ON

	##################Creating repository and classes###################

	#sv_r = urhk_b2k_printrepos("BANCS")
	sub_createRepClassB("INTF","DATA")
	sub_createRepClassB("CUST","TBL")
	
	PRINT(BANCS.STDIN.menuId)
	
	##################Initializing Variables###################

	INTF.DATA.outputString			= ""
	BANCS.OUTPUT.successOrFailure 	= "S"
	BANCS.OUTPUT.ErrorDesc 			= "SUCCESS"
	BANCS.INPARAM.srvReqId 			= "InqAcctDetail"
	BANCS.INPARAM.SERVICE_NAME 		= "FIJCA"
	BANCS.INPARAM.SEND_RECV_FLG 	= "R"
	BANCS.INPARAM.IsRespReqd 		= "Y"
	BANCS.INPARAM.rqAppId      		= "8001"
	BANCS.INPARAM.rqTxnCode  		= "ESB200001"
	BANCS.INPARAM.rqUserId 			= "98001FinCore"
	BANCS.INPARAM.rqToken  			= "98001FinCore"
	BANCS.INPARAM.rqTerminalTypeCode  	= "80"
	BANCS.INPARAM.rqLangPref  		= "en"
	
	#-------------------------------------------------------------
	#Getting and Forming the XML Header , Body and Footer Details
	#-------------------------------------------------------------
	sv_c = func_xmlHeaderDetails()
	BANCS.OUTPARAM.XMLHeader = sv_c
	
	sv_c = func_xmlBodyDetails()
	BANCS.OUTPARAM.XMLBody = sv_c
	
	sv_c = func_xmlFooterDetails()
	BANCS.OUTPARAM.XMLFooter = sv_c
	
	sv_s = BANCS.OUTPARAM.XMLHeader + BANCS.OUTPARAM.XMLBody + BANCS.OUTPARAM.XMLFooter
	PRINT(sv_s)

	#-----------------------------------------------------
	#Custom Table Insertion & variable definition
	#-----------------------------------------------------

	CUST.TBL.apiName	= "InqAcctDetail"
	CUST.TBL.menuName	= BANCS.STDIN.menuId
	CUST.TBL.invDate	= BANCS.STDIN.BODDate
	CUST.TBL.reqId		= "Req_"+BANCS.INPARAM.requestuuid
	CUST.TBL.soapReqId	= BANCS.INPARAM.rqUID
	CUST.TBL.reqXML		= sv_s
	CUST.TBL.userId		= BANCS.STDIN.userId

	CALLSCRIPTIFEXIST("insertInterfaceRecord.scr")	
	
	#-----------------------------------------------------
	#Sending the request xml to FI service provider
	#-----------------------------------------------------
	
	sv_a = func_ConnectToFIAndSendMsg("INTF","DATA",sv_s,BYREF INTF.DATA.responseXml,BYREF INTF.DATA.msgDescription,BYREF INTF.DATA.successFailure)
		
	#-----------------------------------------------------
	#When request is triggered successfully from Finacle
	#-----------------------------------------------------
	IF(INTF.DATA.successFailure == "Success") THEN
	#{
		print(INTF.DATA.responseXml)

		sv_e = func_xmlParseFunc(INTF.DATA.responseXml,"<Status>","</Status>",BYREF INTF.DATA.FIStatus)
		PRINT(sv_e)
		sv_e = func_xmlParseFunc(INTF.DATA.responseXml,"<rsCode>","</rsCode>",BYREF INTF.DATA.orgCode)
		PRINT(sv_e)

		#--------------------------------------------------------------------------------------------------------------------------------
		#Request triggered successfully and processed by host system successfully - Can be a valid account (or) invalid account response.
		#--------------------------------------------------------------------------------------------------------------------------------
		IF((INTF.DATA.FIStatus == "processed") OR (INTF.DATA.FIStatus == "SUCCESS")) THEN
		#{
			sv_e = func_xmlParseFunc(INTF.DATA.responseXml,"<rsCode>","</rsCode>",BYREF INTF.DATA.orgCode)
            PRINT(sv_e)	
			
			INTF.DATA.status = "S"
			#-----------------------------------------------------------------------
			#When response from host is positive i.e. the account is a valid account
			#-----------------------------------------------------------------------
			IF(INTF.DATA.orgCode == 000) THEN
			#{
				INTF.DATA.noOfFields = "21"
				INTF.DATA.status = "S"
				INTF.DATA.tagFields = "accNum|accName|accType|accTypeDesc|accStatus|accStatusDesc|accNickname|depositCurrency|ledgerBalance|avaiBalance|branchAcc|branchAccDesc|"
				INTF.DATA.tagFields = INTF.DATA.tagFields + "maturDate|insAmount|term|custTHName|custENName|taxId|custType|custTypeDesc|cifNum"
				
				sub_getFieldsFromRespXml(INTF.DATA.noOfFields,INTF.DATA.responseXml,INTF.DATA.tagFields,"")
				
				PRINT(BANCS.OUTPUT.accNum)
				PRINT(BANCS.OUTPUT.accName)
				PRINT(BANCS.OUTPUT.accType)
				PRINT(BANCS.OUTPUT.accTypeDesc)
				PRINT(BANCS.OUTPUT.accStatus)
				PRINT(BANCS.OUTPUT.accStatusDesc)
				PRINT(BANCS.OUTPUT.accNickname)
				PRINT(BANCS.OUTPUT.depositCurrency)
				PRINT(BANCS.OUTPUT.ledgerBalance)
				PRINT(BANCS.OUTPUT.avaiBalance)
				PRINT(BANCS.OUTPUT.branchAcc)
				PRINT(BANCS.OUTPUT.branchAccDesc)
				PRINT(BANCS.OUTPUT.maturDate)
				PRINT(BANCS.OUTPUT.insAmount)
				PRINT(BANCS.OUTPUT.term)
				PRINT(BANCS.OUTPUT.custTHName)
				PRINT(BANCS.OUTPUT.custENName)
				PRINT(BANCS.OUTPUT.taxId)
				PRINT(BANCS.OUTPUT.custType)
				PRINT(BANCS.OUTPUT.custTypeDesc)
				PRINT(BANCS.OUTPUT.cifNum)
				
				INTF.DATA.outputString = BANCS.OUTPUT.accName + "!" + BANCS.OUTPUT.depositCurrency + "!" + BANCS.OUTPUT.avaiBalance + "!" + BANCS.OUTPUT.accStatusDesc
				sv_u = urhk_setOrbOut("errorCode|"+INTF.DATA.orgCode)
				sv_u = urhk_setOrbOut("outputString|"+INTF.DATA.outputString)
				
				sv_s = func_selectFromCustTableB("matDate","TO_DATE('"+BANCS.OUTPUT.maturDate+"','YYYY-MM-DD')","DUAL","","")
				sub_copyOutparamFieldB("matDate","INTF","DATA","matDate","")
				
				INTF.DATA.insTable = "CUSTOM.C_AML_DET"
				INTF.DATA.bindVars = BANCS.OUTPUT.accNum + "|" + BANCS.STDIN.contextBankId
				INTF.DATA.keyFields = "ACCT_NUM|BANK_ID"
				INTF.DATA.keyValues = BANCS.OUTPUT.accNum + "|" + BANCS.STDIN.contextBankId
				sv_f = func_checkRecordCntB(INTF.DATA.insTable,INTF.DATA.keyFields,INTF.DATA.bindVars,BYREF INTF.DATA.count)
				PRINT(INTF.DATA.count)
				
				IF(CINT(INTF.DATA.count) > 0)THEN
				#{
					INTF.DATA.updateFields = "ACCT_NAME|ACCT_TYPE|ACCT_TYPE_DESC|ACCT_STATUS|ACCT_STATUS_DESC|ACCT_NICKNAME|"
					INTF.DATA.updateFields = INTF.DATA.updateFields +"DEPOSIT_CCY|LEDGER_BAL|AVAIL_BAL|BRANCH_ACCT|BRANCH_ACCT_DESC|"
					INTF.DATA.updateFields = INTF.DATA.updateFields +"MATURITY_DATE|INST_AMT|TERM|CUST_THNAME|CUST_ENNAME|TAX_ID|CUST_TYPE|"
					INTF.DATA.updateFields = INTF.DATA.updateFields +"CUST_TYPE_DESC|LCHG_TIME|LCHG_USER_ID|RCRE_USER_ID|RCRE_TIME "
					
					INTF.DATA.updateValues = BANCS.OUTPUT.accName   + "|" + BANCS.OUTPUT.accType
					INTF.DATA.updateValues = INTF.DATA.updateValues + "|" + BANCS.OUTPUT.accTypeDesc + "|" + BANCS.OUTPUT.accStatus
					INTF.DATA.updateValues = INTF.DATA.updateValues + "|" + BANCS.OUTPUT.accStatusDesc + "|" + BANCS.OUTPUT.accNickname
					INTF.DATA.updateValues = INTF.DATA.updateValues + "|" + BANCS.OUTPUT.depositCurrency + "|" + BANCS.OUTPUT.ledgerBalance
					INTF.DATA.updateValues = INTF.DATA.updateValues + "|" + BANCS.OUTPUT.avaiBalance + "|" + BANCS.OUTPUT.branchAcc
					INTF.DATA.updateValues = INTF.DATA.updateValues + "|" + BANCS.OUTPUT.branchAccDesc + "|" +INTF.DATA.matDate
					INTF.DATA.updateValues = INTF.DATA.updateValues + "|" + BANCS.OUTPUT.insAmount + "|" + BANCS.OUTPUT.term
					INTF.DATA.updateValues = INTF.DATA.updateValues + "|" + BANCS.OUTPUT.custTHName + "|" + BANCS.OUTPUT.custENName
					INTF.DATA.updateValues = INTF.DATA.updateValues + "|" + BANCS.OUTPUT.taxId + "|" + BANCS.OUTPUT.custType
					INTF.DATA.updateValues = INTF.DATA.updateValues	+ "|" + BANCS.OUTPUT.custTypeDesc + "|DT" + BANCS.STDIN.sysDate
					INTF.DATA.updateValues = INTF.DATA.updateValues + "|" + BANCS.STDIN.userId + "|" + BANCS.STDIN.userId
					INTF.DATA.updateValues = INTF.DATA.updateValues + "|DT" + BANCS.STDIN.sysDate
					
					sv_f = func_updateCustTableB(INTF.DATA.insTable, INTF.DATA.updateFields, INTF.DATA.updateValues, "ACCT_NUM|BANK_ID",INTF.DATA.keyValues)
					sv_d = urhk_dbSqlWithBind("COMMIT")
					
				#}
				ELSE
				#{
					INTF.DATA.insertFields = "ACCT_NUM,ACCT_NAME,ACCT_TYPE,ACCT_TYPE_DESC,ACCT_STATUS,ACCT_STATUS_DESC,ACCT_NICKNAME,"
					INTF.DATA.insertFields = INTF.DATA.insertFields +"DEPOSIT_CCY,LEDGER_BAL,AVAIL_BAL,BRANCH_ACCT,BRANCH_ACCT_DESC,"
					INTF.DATA.insertFields = INTF.DATA.insertFields +"MATURITY_DATE,INST_AMT,TERM,CUST_THNAME,CUST_ENNAME,TAX_ID,CUST_TYPE,"
					INTF.DATA.insertFields = INTF.DATA.insertFields +"CUST_TYPE_DESC,BANK_ID,LCHG_TIME,LCHG_USER_ID,RCRE_USER_ID,RCRE_TIME"
					
					INTF.DATA.insertValues = BANCS.OUTPUT.accNum + "|" + BANCS.OUTPUT.accName   + "|" + BANCS.OUTPUT.accType
					INTF.DATA.insertValues = INTF.DATA.insertValues + "|" + BANCS.OUTPUT.accTypeDesc + "|" + BANCS.OUTPUT.accStatus
					INTF.DATA.insertValues = INTF.DATA.insertValues + "|" + BANCS.OUTPUT.accStatusDesc + "|" + BANCS.OUTPUT.accNickname
					INTF.DATA.insertValues = INTF.DATA.insertValues + "|" + BANCS.OUTPUT.depositCurrency + "|" + BANCS.OUTPUT.ledgerBalance
					INTF.DATA.insertValues = INTF.DATA.insertValues + "|" + BANCS.OUTPUT.avaiBalance + "|" + BANCS.OUTPUT.branchAcc
					INTF.DATA.insertValues = INTF.DATA.insertValues + "|" + BANCS.OUTPUT.branchAccDesc + "|" +INTF.DATA.matDate
					INTF.DATA.insertValues = INTF.DATA.insertValues + "|" + BANCS.OUTPUT.insAmount + "|" + BANCS.OUTPUT.term
					INTF.DATA.insertValues = INTF.DATA.insertValues + "|" + BANCS.OUTPUT.custTHName + "|" + BANCS.OUTPUT.custENName
					INTF.DATA.insertValues = INTF.DATA.insertValues + "|" + BANCS.OUTPUT.taxId + "|" + BANCS.OUTPUT.custType
					INTF.DATA.insertValues = INTF.DATA.insertValues + "|" + BANCS.OUTPUT.custTypeDesc + "|" + BANCS.STDIN.contextBankId
					INTF.DATA.insertValues = INTF.DATA.insertValues + "|DT" + BANCS.STDIN.sysDate + "|" + BANCS.STDIN.userId + "|" + BANCS.STDIN.userId + "|DT" + BANCS.STDIN.sysDate
					
					sv_f = func_insertIntoCustTableB(INTF.DATA.insTable,INTF.DATA.insertFields,INTF.DATA.insertValues)
					sv_d = urhk_dbSqlWithBind("COMMIT")
				#}
				ENDIF
			#}
			#-----------------------------------------------------------------------------
			#In case of invalid account (or) any other negative response from host system
			#-----------------------------------------------------------------------------
			ELSE
			#{
				sv_e = func_xmlParseFunc(INTF.DATA.responseXml,"<orgDesc>","</orgDesc>",BYREF INTF.DATA.ErrorDesc)
				PRINT(sv_e)

				INTF.DATA.status = "F"
				BANCS.OUTPUT.successOrFailure = "F"
				
				sv_u = urhk_setOrbOut("errorCode|"+INTF.DATA.orgCode)
				sv_u = urhk_setOrbOut("outputString|"+INTF.DATA.ErrorDesc)
			#}
			ENDIF
		#}
		#---------------------------------------------------------
		# When request to host times out/when host system is down
		#---------------------------------------------------------
		ELSE
		#{
			sv_e = func_xmlParseFunc(INTF.DATA.responseXml,"<ErrorCode>","</ErrorCode>",BYREF INTF.DATA.orgCode)
			PRINT(sv_e)
            sv_e = func_xmlParseFunc(INTF.DATA.responseXml,"<ErrorDesc>","</ErrorDesc>",BYREF INTF.DATA.ErrorDesc)
			PRINT(sv_e)

			INTF.DATA.status = "F"
			BANCS.OUTPUT.successOrFailure = "F"
			
			sv_u = urhk_setOrbOut("errorCode|"+INTF.DATA.orgCode)
			sv_u = urhk_setOrbOut("outputString|"+INTF.DATA.ErrorDesc)
		#}
		ENDIF

		#-----------------------------------------------------------
		#Updating response XML and Status in interface custom table
		#-----------------------------------------------------------
		BANCS.INPARAM.BINDVARS = INTF.DATA.responseXml + "|" + INTF.DATA.status + "|" + CUST.TBL.reqId 

		sv_s = "UPDATE CUSTOM.C_ICIT "
		sv_s = sv_s + "SET RESPONSE_XML = ?SVAR, STATUS = ?SVAR "
		sv_s = sv_s + "WHERE REQUEST_ID = ?SVAR "
		print(sv_s)
		sv_a = urhk_dbSQLWithBind(sv_s)
		print(sv_a)

		sv_a = urhk_dbSqlWithBind("COMMIT")
		print(sv_a)
	#}
	#--------------------------------------------------------
	#When request is not triggered successfully from Finacle
	#--------------------------------------------------------
	ELSE
	#{
		BANCS.OUTPUT.successOrFailure = "F"
		BANCS.OUTPUT.ErrorDesc = INTF.DATA.msgDescription
		sv_u = urhk_setOrbOut("outputString|"+INTF.DATA.msgDescription)
	#}
	ENDIF

EXITSCRIPT
END-->

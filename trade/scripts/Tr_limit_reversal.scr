#########################################################################################################################
# Name of the file      : Tr_limit_reversal.scr
# Start Date            : 22-May-2018
# Description           : This script will unblock the limit of TR account.
# Design Id             : HTM
# Menu Option           : HTM
# Input parameters      : NA
# Output parameters     : NA
# Author                : Prudhvi
# Called Script         : NA
# Calling Script        : NA
# Bank                  : LH Bank
# Modification History:
# <Serial No.>         <Date>         <Author Name>              <Description>
#      0.1            22-May-2018     Prudhvi              Initial Draft
##############################################################################################################################
IMPORT LibCommonB001
IMPORT LibCommonB002
IMPORT common_business_XMLFunctions
IMPORT updAvailLimitInput
<--START
	# Script body goes here
	TRACE ON
	#----------------------------------------------
	#Create repository and class
	#----------------------------------------------
	sub_createRepClassB("CUST","DATA")
	#--------------------------------------------
	#Initialize variables
	#--------------------------------------------
	CUST.DATA.tranId = ""
	CUST.DATA.tranDate = ""
	CUST.DATA.prevEntityAmt = ""
	CUST.DATA.prevEntityCcy = ""
	CUST.DATA.prevEarMark = ""
	CUST.DATA.foracid = ""
	CUST.DATA.slLmtId = ""
	CUST.DATA.acid = ""
	CUST.DATA.tranId = ""
	sv_u = urhk_SRV_GetVal("tranHdr.tranIdentifier.tranId")
	IF(sv_u == 0) THEN
	#{
		CUST.DATA.tranId = BANCS.OUTPARAM.srvValue
		PRINT(CUST.DATA.tranId)
	#}
	ENDIF
	
	sv_u = urhk_SRV_GetVal("tranHdr.tranIdentifier.tranDate")
	IF(sv_u == 0) THEN
	#{
		CUST.DATA.tranDate = mid$(BANCS.OUTPARAM.srvValue, 0 ,10)
		PRINT(CUST.DATA.tranDate)
	#}
	ENDIF

	sv_q = "tranAmt,tranCcy,acid|select d.TRAN_AMT,d.TRAN_CRNCY_CODE,d.ACID from tbaadm.dtd d where trim(d.tran_id)=trim('"+ CUST.DATA.tranId +"')" 
	sv_q = sv_q + " and d.tran_date = to_date('"+ CUST.DATA.tranDate +"','DD-MM-YYYY') and d.BANK_ID = '"+ BANCS.STDIN.contextBankId +"'"
	sv_q = sv_q + " and d.del_flg = 'N' and d.PART_TRAN_TYPE='C' and d.acid in (select acid from tbaadm.gam g  where g.acid=d.acid and g.foracid like 'TR%')"
	PRINT(sv_q)
	sv_r = urhk_dbSelectWithBind(sv_q)
	PRINT(sv_r)	
	IF (sv_r == 0) THEN
	#{
		CUST.DATA.prevEntityAmt = BANCS.OUTPARAM.tranAmt
		CUST.DATA.prevEntityCcy = BANCS.OUTPARAM.tranCcy
		CUST.DATA.acid = BANCS.OUTPARAM.acid
	#}
	ELSE
	#{
		GOTO ENDOFSCRIPT
	#}
	ENDIF
	sv_q = "foracid|select foracid from tbaadm.gam where acid= '"+ CUST.DATA.acid +"' and BANK_ID = '"+ BANCS.STDIN.contextBankId +"'" 
	PRINT(sv_q)
	sv_r = urhk_dbSelectWithBind(sv_q)
	PRINT(sv_r)	
	IF (sv_r == 0) THEN
	#{
		CUST.DATA.foracid = BANCS.OUTPARAM.foracid
	#}
	ELSE
	#{
		GOTO ENDOFSCRIPT
	#}
	ENDIF
	sv_q = "slLmtId|select SL_LIMIT_ID from CUSTOM.C_TFCT_TBL WHERE B2K_ID = TRIM('"+ CUST.DATA.foracid +"') AND SRL_NUM = "
	sv_q = sv_q + " (SELECT MAX(SRL_NUM) FROM CUSTOM.C_TFCT_TBL WHERE B2K_ID = TRIM('"+ CUST.DATA.foracid +"') AND BANK_ID = '"+ BANCS.STDIN.contextBankId +"')" 
	sv_q = sv_q + " and SL_LIMIT_ID is not null AND ROWNUM=1"
	PRINT(sv_q)
	sv_r = urhk_dbSelectWithBind(sv_q)
	PRINT(sv_r)	
	IF (sv_r == 0) THEN
	#{
		CUST.DATA.slLmtId = BANCS.OUTPARAM.slLmtId
	#}
	ELSE
	#{
		GOTO ENDOFSCRIPT
	#}
	ENDIF
	
	CUST.DATA.prevEarMark = "0"
	
	
	### CALL UPDATE AVAIL LIMIT API ###
	BANCS.INPUT.holdAmount 	= FORMAT$(CDOUBLE(CUST.DATA.prevEarMark),"%2.2f")
	BANCS.INPUT.refType 	= "T"
	BANCS.INPUT.txnAmount  	= FORMAT$(CDOUBLE(CUST.DATA.prevEntityAmt),"%2.2f")
	BANCS.INPUT.refNum	   	= CUST.DATA.foracid
	BANCS.INPUT.acfNum	   	= CUST.DATA.slLmtId
	BANCS.INPUT.balance    	= FORMAT$(CDOUBLE(CUST.DATA.prevEntityAmt),"%2.2f") + "|" + CUST.DATA.prevEntityCcy 
	BANCS.INPUT.currency 	= CUST.DATA.prevEntityCcy
	PRINT(BANCS.INPUT.currency)
	IF(CDOUBLE(CUST.DATA.prevEarMark) == 0)THEN
	#{
		BANCS.INPUT.balance = -1 * CDOUBLE(CUST.DATA.prevEntityAmt)
		BANCS.INPUT.balance = FORMAT$(CDOUBLE(BANCS.INPUT.balance),"%2.2f") + "|" + CUST.DATA.prevEntityCcy 
		BANCS.INPUT.updTypeFlag	= "UO"
	#}
	ELSE
	#{
		BANCS.INPUT.updTypeFlag	= "RU"
	#}
	ENDIF
	
	IF((TRIM(CUST.DATA.slLmtId) != "") AND (CDOUBLE(CUST.DATA.prevEntityAmt) != 0)) THEN
        #{
		CALLSCRIPTIFEXIST("updAvalLimit.scr")

		IF(FIELDEXISTS(INTF.DATA.orgCode))THEN
		#{
			IF(INTF.DATA.orgCode != "000")THEN
			#{
				sv_a = urhk_SRV_SetErr(INTF.DATA.orgCode + " - " + INTF.DATA.ErrorDesc)
				sv_u = urhk_setOrbOut("SuccessOrFailure|N")
				BANCS.OUTPUT.successOrFailure = "F"
				EXITSCRIPT
			#}
			ENDIF
		#}
		ENDIF
	#}
	ENDIF
	ENDOFSCRIPT:
	TRACE OFF
	EXITSCRIPT
END-->

#============================================================
# IMPORTANT: Auto Generated Header. DO NOT CHANGE MANUALLY.
# Domain: Finacle Core
# Library Name: RetCustModAPI.scl
# Description: RetCustModAPI.scl
#============================================================

######################################################################################################
# FUNCTION TO ADD TAGS IN XML IF VALUE PRESENT
######################################################################################################
SUB addTagIfNotNull(fv_tagname,fv_repos,fv_class,fv_fieldName,fv_dateFlg,BYREF fv_entireTag)
#{
	fv_a = ""
	fv_inpTagname = fv_tagname
	fv_inpRepos = fv_repos
	fv_inpClass = fv_class
	fv_inpfieldName = fv_fieldName
	PRINT(fv_inpRepos)
	PRINT(fv_inpClass)
	PRINT(fv_inpfieldName)
	#IF ((fv_inpRepos).(fv_inpClass).(fv_inpfieldName) != "" ) THEN
	IF ( TRIM((fv_inpRepos).(fv_inpClass).(fv_inpfieldName))  != "" ) THEN
	#{
		fv_a = "<" + fv_inpTagname + ">" + (fv_inpRepos).(fv_inpClass).(fv_inpfieldName) + "</" + fv_inpTagname + ">"
		PRINT(fv_a)
	#}
	ENDIF
	fv_entireTag = fv_entireTag + fv_a
#}
ENDSUB addTagIfNotNull



######################################################################################################
# FUNCTION FOR XML HEADER
######################################################################################################
FUNCTION xmlHeaderDetailsFICORE()
#{
	#=====================================================================
	# Getting the sysdate and time
	#=====================================================================
	sv_q = "timeStamp,sysdate, systimestamp|Select to_char(systimestamp,'ddmmyyyyhh24mmssff'), "
	sv_q = sv_q + "to_char(systimestamp,'YYYY-MM-DD'), to_char(systimestamp,'HH24:MI:SS.ddd') from dual"
	PRINT(sv_q)
	
	sv_x = urhk_dbselectWithBind(sv_q)
	PRINT(sv_x)
	
	IF(sv_x == 0) THEN
	#{
		
		CUST.DATA.timeStamp = BANCS.OUTPARAM.timeStamp
		PRINT(CUST.DATA.timeStamp)
		
		CUST.DATA.sysdate = BANCS.OUTPARAM.sysdate
		PRINT(CUST.DATA.sysdate)
		
		CUST.DATA.systimestamp = BANCS.OUTPARAM.systimestamp
		PRINT(CUST.DATA.systimestamp)
		
		CUST.DATA.messageDateTime = CUST.DATA.sysdate + "T" + CUST.DATA.systimestamp
		PRINT(CUST.DATA.messageDateTime)
		
	#}
	ENDIF
	
	CUST.DATA.RequestUUID = "Req_" + CUST.DATA.timeStamp
	
	#------------------------------------------------------------------------------#
	#Getting the UserInfo details
	#------------------------------------------------------------------------------#
	
	BANCS.INPARAM.UserApplId    	= "FCORE"
	BANCS.INPARAM.UserChannelId 	= "FI"
	BANCS.INPARAM.CHANNELID    	= "CRM"
	CUST.DATA.srvReqId 		= "RetCustMod"
	CUST.DATA.channelId 		= "CRM"
	CUST.DATA.reqver    		= "10.2"
	
	
	PRINT(CUST.DATA.RequestUUID)
	PRINT(CUST.DATA.srvReqId)
	PRINT(CUST.DATA.reqver)
	PRINT(CUST.DATA.channelId)
	PRINT(BANCS.STDIN.contextBankId)
	PRINT(CUST.DATA.messageDateTime)
	
	CUST.DATA.xsdName = CUST.DATA.srvReqId + ".xsd"
	
	#===================================================================================================
	###########					     MESSAGE FORMATION   ###################
	#===================================================================================================
	lv_h = "<?xml version='1.0' encoding='UTF-8'?>"
	#lv_h = lv_h + "<FIXML xmlns:ns0='http://www.finacle.com/fixml'>"
	lv_h = lv_h +"<FIXML xsi:schemaLocation='http://www.finacle.com/fixml "+CUST.DATA.xsdName+"' xmlns='http://www.finacle.com/fixml' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'><Header>"
	lv_h = lv_h + "<RequestHeader>"
	lv_h = lv_h + "<MessageKey>"
	lv_h = lv_h + "<RequestUUID>" + CUST.DATA.RequestUUID + "</RequestUUID>"
	lv_h = lv_h + "<ServiceRequestId>" + CUST.DATA.srvReqId + "</ServiceRequestId>"
	lv_h = lv_h + "<ServiceRequestVersion>" + CUST.DATA.reqver + "</ServiceRequestVersion>"
	lv_h = lv_h + "<ChannelId>" + CUST.DATA.channelId + "</ChannelId>"
	lv_h = lv_h + "<LanguageId></LanguageId>"
	lv_h = lv_h + "</MessageKey>"
	lv_h = lv_h + "<RequestMessageInfo>"
	lv_h = lv_h + "<BankId>" + BANCS.STDIN.contextBankId + "</BankId>"
	lv_h = lv_h + "<TimeZone></TimeZone>"
	lv_h = lv_h + "<EntityId></EntityId>"
	lv_h = lv_h + "<EntityType></EntityType>"
	lv_h = lv_h + "<ArmCorrelationId></ArmCorrelationId>"
	lv_h = lv_h + "<MessageDateTime>" + CUST.DATA.messageDateTime + "</MessageDateTime>"
	lv_h = lv_h + "</RequestMessageInfo>"
	lv_h = lv_h + "<Security>"
	lv_h = lv_h + "<Token>"
	lv_h = lv_h + "<PasswordToken>"
	lv_h = lv_h + "<UserId></UserId>"
	lv_h = lv_h + "<Password></Password>"
	lv_h = lv_h + "</PasswordToken>"
	lv_h = lv_h + "</Token>"
	lv_h = lv_h + "<FICertToken></FICertToken>"
	lv_h = lv_h + "<RealUserLoginSessionId></RealUserLoginSessionId>"
	lv_h = lv_h + "<RealUser></RealUser>"
	lv_h = lv_h + "<RealUserPwd></RealUserPwd>"
	lv_h = lv_h + "<SSOTransferToken></SSOTransferToken>"
	lv_h = lv_h + "</Security>"
	lv_h = lv_h + "</RequestHeader>"
	lv_h = lv_h + "</Header>"
	
	PRINT(lv_h)
	
	RETURN lv_h
#}
ENDFUNCTION

######################################################################################################
# FUNCTION FOR XML BODY(sample)
######################################################################################################
FUNCTION xmlBodyDetailsFICORE()
#{
	BANCS.INPARAM.custId = "R000000003"
	sv_v = ""
	sv_v = sv_v + "<Body>"
	sv_v = sv_v + "<RetCustModRequest>"
	sv_v = sv_v + "<RetCustModRq>"
	sv_v = sv_v + "<RetCustModMainData>"
	sv_v = sv_v + "<CustModData>"
	sv_v = sv_v + "<CustId>"+BANCS.INPARAM.custId+"</CustId>"
	sv_v = sv_v + "</CustModData>"
	sv_v = sv_v + "</RetCustModMainData>"
	sv_v = sv_v + "</RetCustModRq>"
	sv_v = sv_v + "</RetCustModRequest>"
	sv_v = sv_v + "</Body>"
	sv_v = sv_v + "</FIXML>"
	PRINT(sv_v)
	
	RETURN sv_v
#}
ENDFUNCTION

)#####################################################################################################
# MODIFY  UPLOADED RETAIL CIF DETAILS VIA FI
######################################################################################################
FUNCTION modifyUplCIFRet(fv_repos,fv_class)
#{
	PRINT("IN modifyUplCIF ")
	
	sub_createRepClassB("CUST","DATA")
	
	PRINT(fv_repos)
	PRINT(fv_class)
	fv_errorCode = " "
	fv_errorMsg = " "
	
	fv_r = fv_repos
	fv_c = fv_class
	
	
	(fv_r).(fv_c).("errorFlg")  = "N"
	(fv_r).(fv_c).("errorMsg") = ""
	(fv_r).(fv_c).("errorCode") = ""
	
	
	
	#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	#	Address Details
	#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	
	
	### Mailing
	(fv_r).(fv_c).("AddrCategoryComu") ="Mailing"
	(fv_r).(fv_c).("AddrCategoryPerm") ="Home"
	(fv_r).(fv_c).("AddrCategoryEmp") = "Work"
	(fv_r).(fv_c).("AddrCategoryNRE") = "NRERelative"
	
	
	#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	#	Customer details
	#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	(fv_r).(fv_c).("CreatedBySystemId") = BANCS.STDIN.userId
	
	
	#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	#	DemographicData Details
	#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	PRINT((fv_r).(fv_c).("marital_status"))
	
	IF((fv_r).(fv_c).("cust_nre_flg") == "Y") THEN
	#{
		(fv_r).(fv_c).("NATIONALITY") = (fv_r).(fv_c).("nre_nationality")
		#}
	ELSE
		#{
		(fv_r).(fv_c).("NATIONALITY") = ""
	#}
	ENDIF
	(fv_r).(fv_c).("prefLang") = "INFENG"
	
	#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	#	Differentiating Address Types
	#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	
	#AddressType:
	#		1 = registered(home)
	#		2 = mailling
	#		3 = work
	#		4 = communication
	
	IF((CUST.DATA.addrType1 == "1") OR (CUST.DATA.addrType2 == "1") OR (CUST.DATA.addrType3 == "1") OR (CUST.DATA.addrType4 == "1") OR (CUST.DATA.addrType5 == "1"))THEN
	#{
		(fv_r).(fv_c).("AddrCategory") ="Home"
	#}
	ENDIF
	
	IF((CUST.DATA.addrType1 == "2") OR (CUST.DATA.addrType2 == "2") OR (CUST.DATA.addrType3 == "2") OR (CUST.DATA.addrType4 == "2") OR (CUST.DATA.addrType5 == "2"))THEN
	#{
		(fv_r).(fv_c).("AddrCategory") ="Mailing"
	#}
	ENDIF
	
	IF((CUST.DATA.addrType1 == "3") OR (CUST.DATA.addrType2 == "3") OR (CUST.DATA.addrType3 == "3") OR (CUST.DATA.addrType4 == "3") OR (CUST.DATA.addrType5 == "3"))THEN
	#{
		(fv_r).(fv_c).("AddrCategory") ="Work"
		
	#}
	ENDIF
	
	IF((CUST.DATA.addrType1 == "4") OR (CUST.DATA.addrType2 == "4") OR (CUST.DATA.addrType3 == "4") OR (CUST.DATA.addrType4 == "4") OR (CUST.DATA.addrType5 == "4"))THEN
	#{
		(fv_r).(fv_c).("AddrCategory") ="COMUNICATION"
	#}
	ENDIF
	
	
	
	#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	#	Setting hardcoded values
	#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	
	(fv_r).(fv_c).("date_of_birthFI") = ""
	(fv_r).(fv_c).("AdPrfIdIssueDtFI") = ""
	(fv_r).(fv_c).("IdPrfIdIssueDtFI") = ""
	(fv_r).(fv_c).("RelationshipOpeningDtFI") = ""
	(fv_r).(fv_c).("StartDtComuFI") = ""
	(fv_r).(fv_c).("StartDtPermFI") = ""
	(fv_r).(fv_c).("StartDtEmpFI") = ""
	(fv_r).(fv_c).("StartDtNREFI") = ""
	(fv_r).(fv_c).("CustStatusChngDateFI") = ""
	
	(fv_r).(fv_c).("errFlg") = ""
	(fv_r).(fv_c).("FiError") = "N"
	(fv_r).(fv_c).("FiErrorMesg") = ""
	
	
	#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	#Getting the Header and Footer Details
	#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	PRINT("CALLING XML HEADER DETAILS ")
	sv_c = func_xmlHeaderDetailsFICORE()
	BANCS.OUTPARAM.XMLHeader = sv_c
	PRINT(BANCS.OUTPARAM.XMLHeader)
	lv_h = BANCS.OUTPARAM.XMLHeader
	
	
	(fv_r).(fv_c).("xmlString") = BANCS.OUTPARAM.XMLHeader
	
	#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~XML BODY STARTS~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	
	##SAMPLE BODY WITH ONLY CIF ID
	#	sv_c = func_xmlBodyDetailsFICORE()
	#	BANCS.OUTPARAM.XMLBody = sv_c
	#	PRINT(BANCS.OUTPARAM.XMLBody)
	
	(fv_r).(fv_c).("xmlString") = "<Body>"
	(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<RetCustModRequest>"
	(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<RetCustModRq>"
	(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<RetCustModMainData>"
	(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<CustModData>"
	PRINT((fv_r).(fv_c).("cust_id"))
	
	(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<CustId>" + (fv_r).(fv_c).("cust_id") + "</CustId>"
	
	#------------------------- Address Details Starts   ---------------------------------
	#AddressType:
	#		1 = registered(home)
	#		2 = mailling
	#		3 = work
	#		4 = communication
	lv_n = 1
	PRINT((fv_r).(fv_c).("modAddrCount"))
	#=====================================================
	# RETAIL CIF MULTIREC ADDRESS REQUEST
	#=====================================================
	sv_a = 1
	WHILE(lv_n <= CINT((fv_r).(fv_c).("modAddrCount")))
	#{
		sv_r = func_selectFromCustTableB("ADDRESSID","ADDRESSID","crmuser.address","ADDRESSCATEGORY|orgkey|end_date",(fv_r).(fv_c).("AddrCategory") + "|" + (fv_r).(fv_c).("cust_id") + "|" + "DT31-12-2099")
		
		sub_copyOutparamFieldB("ADDRESSID",fv_r,fv_c,"ADDRESSID","NOTFOUND")
		PRINT((fv_r).(fv_c).("ADDRESSID"))
		
		(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<RetAddrModDtls>"
		
		IF ((fv_r).(fv_c).("ADDRESSID") != "NOTFOUND" ) THEN
		#{
			(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<addressID>" + (fv_r).(fv_c).("ADDRESSID") + "</addressID>"
		#}
		ENDIF
		
		
#		(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<AddrCategory>"+(fv_r).(fv_c).("addrTypeDesc"+FORMAT$(lv_n,"%d"))+"</AddrCategory>"
		
		IF(TRIM((fv_r).(fv_c).("addr"+FORMAT$(lv_n,"%d"))) != "")THEN
		#{
			IF((fv_r).(fv_c).("addrTypeDesc"+FORMAT$(lv_n,"%d")) == "Communication")THEN
			#{
				(fv_r).(fv_c).("addrTypeDesc"+FORMAT$(lv_n,"%d")) = "COMUNICATION"	
			#}
			ENDIF
			(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<AddrCategory>"+(fv_r).(fv_c).("addrTypeDesc"+FORMAT$(lv_n,"%d"))+"</AddrCategory>"
			CUST.DATA.AddrLine1 = MID$((fv_r).(fv_c).("addr"+FORMAT$(lv_n,"%d")),0,40)	
			CUST.DATA.AddrLine2 = MID$((fv_r).(fv_c).("addr"+FORMAT$(lv_n,"%d")),40,40)
			CUST.DATA.AddrLine3 = MID$((fv_r).(fv_c).("addr"+FORMAT$(lv_n,"%d")),80,40)
			(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<AddrLine1>"+CUST.DATA.AddrLine1+"</AddrLine1>"
			(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<AddrLine2>"+CUST.DATA.AddrLine2+"</AddrLine2>"
			(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<AddrLine3>"+CUST.DATA.AddrLine3+"</AddrLine3>"
		#}
		ENDIF
		
		IF(TRIM((fv_r).(fv_c).("state"+FORMAT$(lv_n,"%d"))) != "")THEN
		#{
			#sv_s = "FinState|"
			#sv_s = sv_s + "SELECT value"
			#sv_s = sv_s + " FROM crmuser.categories WHERE "
			#sv_s = sv_s + " categoryid in "
			#sv_s = sv_s + " (select categoryid from crmuser.category_lang where localetext=?SVAR"
			#sv_s = sv_s + " ) and categorytype = 'STATE'"

			#BANCS.INPARAM.BINDVARS = (fv_r).(fv_c).("state"+FORMAT$(lv_n,"%d"))
			#print(sv_s)
			#print(BANCS.INPARAM.BINDVARS)
			#sv_h = urhk_dbSelectWithBind(sv_s)
			#print(sv_h)

			#IF(sv_h == 0)THEN
			#{
				#(fv_r).(fv_c).("state"+FORMAT$(lv_n,"%d")) = BANCS.OUTPARAM.FinState
				#print((fv_r).(fv_c).("state"+FORMAT$(lv_n,"%d")))
			#}
			#ELSE
			#{
				#(fv_r).(fv_c).("state"+FORMAT$(lv_n,"%d")) = "010"
				#print((fv_r).(fv_c).("state"+FORMAT$(lv_n,"%d")))
			#}
			#ENDIF
			(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<City>"+(fv_r).(fv_c).("state"+FORMAT$(lv_n,"%d"))+"</City>"
			(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<State>"+(fv_r).(fv_c).("state"+FORMAT$(lv_n,"%d"))+"</State>"
		#}
		ENDIF
		
		IF(TRIM((fv_r).(fv_c).("cntry"+FORMAT$(lv_n,"%d"))) != "")THEN
		#{
			(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<Country>"+(fv_r).(fv_c).("cntry"+FORMAT$(lv_n,"%d"))+"</Country>"
		#}
		ENDIF
		
		IF(TRIM((fv_r).(fv_c).("zipCode"+FORMAT$(lv_n,"%d"))) != "")THEN
		#{
			(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<PostalCode>"+(fv_r).(fv_c).("zipCode"+FORMAT$(lv_n,"%d"))+"</PostalCode>"
		#}
		ENDIF
		
		#Fix for pref address issue
		#sv_r = func_selectFromCustTableB("ADDRESSCATEGORY","ADDRESSCATEGORY","crmuser.address","orgkey|PREFERREDADDRESS",(fv_r).(fv_c).("cust_id") + "|" + "Y")
		#sub_copyOutparamFieldB("ADDRESSCATEGORY",fv_r,fv_c,"ADDRESSCATEGORY","NOTFOUND")

		sv_s = "ADDRESSCATEGORY|"
		sv_s = sv_s + "SELECT ADDRESSCATEGORY"
		sv_s = sv_s + " FROM crmuser.address WHERE "
		sv_s = sv_s + " orgkey = ?SVAR AND "
		sv_s = sv_s + " PREFERREDADDRESS = 'Y' and "
		sv_s = sv_s + " addressid = (select max(addressid) from crmuser.address"
		sv_s = sv_s + " WHERE orgkey = ?SVAR AND PREFERREDADDRESS = 'Y')"

		BANCS.INPARAM.BINDVARS = (fv_r).(fv_c).("cust_id") + "|" + (fv_r).(fv_c).("cust_id")

		print(BANCS.INPARAM.BINDVARS)
		print(sv_s)

		sv_h = urhk_dbSelectWithBind(sv_s)
		print(sv_h)

		IF(sv_h == 0)THEN
		#{
			(fv_r).(fv_c).("ADDRESSCATEGORY") = BANCS.OUTPARAM.ADDRESSCATEGORY
		#}
		ELSE
		#{
			(fv_r).(fv_c).("ADDRESSCATEGORY") = "NOTFOUND"	
		#}
		ENDIF	

		PRINT((fv_r).(fv_c).("ADDRESSCATEGORY"))	
		PRINT((fv_r).(fv_c).("addrTypeDesc"+FORMAT$(lv_n,"%d")))

		IF((fv_r).(fv_c).("ADDRESSCATEGORY") == (fv_r).(fv_c).("addrTypeDesc"+FORMAT$(lv_n,"%d"))) THEN
		#{
			(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") +  "<PrefAddr>Y</PrefAddr>"
		#}
		ELSE
		#{
			(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") +  "<PrefAddr>N</PrefAddr>"
		#}
		ENDIF
		(fv_r).(fv_c).("prefFormat")    = "FREE_TEXT_FORMAT"
		(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<PrefFormat>"+(fv_r).(fv_c).("prefFormat")+"</PrefFormat>"
		(fv_r).(fv_c).("startDate")    = "1900-01-01T00:00:00.000"
		(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<StartDt>"+(fv_r).(fv_c).("startDate")+"</StartDt>"
		(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<HoldMailFlag>N</HoldMailFlag>"
		(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "</RetAddrModDtls>"
		lv_n = lv_n + 1
		sv_a = sv_a + 1
	#}
	DO
	#------------------------- Address Details Ends   -----------------------------------------------------
	
	
	lv_m = 1
	PRINT((fv_r).(fv_c).("phoneCount"))
	
	#==========================================================================================================
	# RETAIL CIF multirec PHONE request-coding as per the logic for RETAIL ADDITION
	#==========================================================================================================
	IF(TRIM((fv_r).(fv_c).("homePhn")) != "")THEN
	#{
		(fv_r).(fv_c).("phoneEmailType1") = "HOME"
	#}
	ENDIF
	
	IF(TRIM((fv_r).(fv_c).("officePhn")) != "")THEN
	#{
		(fv_r).(fv_c).("phoneEmailType2") = "OFFICE"
	#}
	ENDIF
	
	IF(TRIM((fv_r).(fv_c).("othrPhn")) != "")THEN
	#{
		(fv_r).(fv_c).("phoneEmailType3") = "OTHER"
	#}
	ENDIF
	
	#--crmuser.phoneemail.PHONENO = PHONENOCOUNTRYCODE + PHONENOLOCALCODE==>THIS CALCULATION IS DONE AUTO IN CRM CODE
	WHILE(lv_m <= CINT((fv_r).(fv_c).("phoneCount")))
	#{
		IF((((fv_r).(fv_c).("phoneEmailType"+FORMAT$(lv_m,"%d"))) != "") AND ((fv_r).(fv_c).("phoneNumber"+FORMAT$(lv_m,"%d")) != "") AND ((fv_r).(fv_c).("telCntryCode") != "")) THEN
		#{	
		(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString")+ "<PhoneEmailModData>"
		
		sv_r = func_selectFromCustTableB("PHONEEMAILID","PHONEEMAILID","crmuser.phoneemail","phoneemailtype|orgkey",(fv_r).(fv_c).("phoneEmailType"+FORMAT$(lv_m,"%d")) + "|" + (fv_r).(fv_c).("cust_id"))
		sub_copyOutparamFieldB("PHONEEMAILID",fv_r,fv_c,"PHONEEMAILID","NOTFOUND")
		PRINT((fv_r).(fv_c).("PHONEEMAILID"))
		
		IF (((fv_r).(fv_c).("PHONEEMAILID")) != "NOTFOUND" ) THEN
		#{
			(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<PhoneEmailID>" + (fv_r).(fv_c).("PHONEEMAILID") + "</PhoneEmailID>"
		#}
		ENDIF
		(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<PhoneOrEmail>PHONE</PhoneOrEmail>"
		(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<PhoneEmailtType>"+(fv_r).(fv_c).("phoneEmailType"+FORMAT$(lv_m,"%d"))+"</PhoneEmailtType>"
	#	(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<PhoneNum>"+(fv_r).(fv_c).("phoneNumber"+FORMAT$(lv_m,"%d"))+"</PhoneNum>
		#(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<PhoneNumLocalCode>"+(fv_r).(fv_c).("phoneNumber"+FORMAT$(lv_m,"%d"))+"</PhoneNumLocalCode>"
		(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<PhoneNumLocalCode>"+LTRIM((fv_r).(fv_c).("phoneNumber"+FORMAT$(lv_m,"%d")),'0')+"</PhoneNumLocalCode>"
		(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<PhoneNumCountryCode>"+(fv_r).(fv_c).("telCntryCode")+"</PhoneNumCountryCode>"
		
		
		
		(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "</PhoneEmailModData>"
		#lv_m = lv_m + 1
		 #}
		ENDIF
		lv_m = lv_m + 1
	#}
	DO
	
	
	#------------------------- Phone Email Details Ends   ---------------------------------
	
	IF(TRIM((fv_r).(fv_c).("cust_title_code")) != "")THEN
        #{	
		(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<Salutation>"+(fv_r).(fv_c).("cust_title_code")+"</Salutation>"
	#}
        ENDIF
	IF(TRIM((fv_r).(fv_c).("cust_short_name")) != "")THEN
        #{
		(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<ShortName>"+(fv_r).(fv_c).("cust_short_name")+"</ShortName>"
	#}
        ENDIF
	IF(TRIM((fv_r).(fv_c).("shortNmeNative")) != "")THEN
        #{	
		#(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<ShortNameNative>"+(fv_r).(fv_c).("shortNmeNative")+"</ShortNameNative>"
	#}
        ENDIF
	IF(TRIM((fv_r).(fv_c).("nickName")) != "")THEN
        #{
		(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<NickName>"+(fv_r).(fv_c).("nickName")+"</NickName>"
	#}
        ENDIF	
	IF(TRIM((fv_r).(fv_c).("TradeFinance")) != "")THEN
        #{
		(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<TradeFinFlag>"+(fv_r).(fv_c).("TradeFinance")+"</TradeFinFlag>"
	#}
        ENDIF	
	sub_addTagIfNotNull("DateOfBirth",fv_r,fv_c,"birthDate","Y",BYREF (fv_r).(fv_c).("xmlString"))
	#(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<DateOfBirth>"+(fv_r).(fv_c).("birthDate") +"</DateOfBirth>"
	IF(TRIM((fv_r).(fv_c).("FirstName")) != "")THEN
        #{	
		(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<FirstName>" + (fv_r).(fv_c).("FirstName")  + "</FirstName>"
	#}
        ENDIF
	IF(TRIM((fv_r).(fv_c).("MiddleName")) != "")THEN
        #{
		(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<MiddleName>" + (fv_r).(fv_c).("MiddleName") + "</MiddleName>"
	#}
        ENDIF
	IF(TRIM((fv_r).(fv_c).("LastName")) != "")THEN
        #{
		(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<LastName>" + (fv_r).(fv_c).("LastName") + "</LastName>"
	#}
        ENDIF
	IF(TRIM((fv_r).(fv_c).("cust_name")) != "")THEN
        #{
		(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<Name>" + (fv_r).(fv_c).("cust_name") + "</Name>"
	#}
        ENDIF	
	IF(TRIM((fv_r).(fv_c).("firstNameNativ")) != "")THEN
        #{
		#(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<FirstNameNative>" + (fv_r).(fv_c).("firstNameNativ")  + "</FirstNameNative>"
	#}
        ENDIF
	IF(TRIM((fv_r).(fv_c).("lastNameNativ")) != "")THEN
        #{	
		#(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<LastNameNative>" + (fv_r).(fv_c).("lastNameNativ")  + "</LastNameNative>"
	#}
        ENDIF
	IF(TRIM((fv_r).(fv_c).("titleNativ")) != "")THEN
        #{
		#(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<NativeLanguageTitle>" + (fv_r).(fv_c).("titleNativ")  + "</NativeLanguageTitle>"
	#}
        ENDIF
	
	
	#IsMinor not required for RetCustMod API
	#(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<IsMinor>"+(fv_r).(fv_c).("cust_minor_flg")+"</IsMinor>"
	
	#IsCustNRE needs to be exposed and is not part of RetCustMod
	(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<IsCustNRE>"+(fv_r).(fv_c).("cust_nre_flg")+"</IsCustNRE>"
	
	#(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<DefaultAddrType>"+(fv_r).(fv_c).("DefaultAddrType")+"</DefaultAddrType>"
	(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<DefaultAddrType>"+(fv_r).(fv_c).("defAddrType")+"</DefaultAddrType>"
	(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<Gender>"+(fv_r).(fv_c).("cust_gender")+"</Gender>"
	(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<Manager>"+(fv_r).(fv_c).("Manager")+"</Manager>"
	
	(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "</CustModData>"
	(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "</RetCustModMainData>"
	#------------------------- Cust Details Ends   ---------------------------------
	
	#------------------------- DemographicData Starts   ---------------------------------
	(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<RetailCustModRelatedData>"
	
	(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<DemographicModData>"
	
	
	IF(TRIM((fv_r).(fv_c).("homePhn")) != "")THEN
	#{
		(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<PhoneHome>"+(fv_r).(fv_c).("homePhn")+"</PhoneHome>"
	#}
	ENDIF
	
	
	IF(TRIM((fv_r).(fv_c).("officePhn")) != "")THEN
	#{
		(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<PhoneWork>"+(fv_r).(fv_c).("officePhn")+"</PhoneWork>"
	#}
	ENDIF
	
	IF(TRIM((fv_r).(fv_c).("othrPhn")) != "")THEN
	#{
		(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<PhoneOther>"+(fv_r).(fv_c).("othrPhn")+"</PhoneOther>"
	#}
	ENDIF
	
	
	
	IF(TRIM((fv_r).(fv_c).("marital_status")) != "")THEN
	#{
		(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<MaritalStatus>"+(fv_r).(fv_c).("marital_status")+"</MaritalStatus>"
	#}
	ENDIF
	
	
	IF(TRIM((fv_r).(fv_c).("NATIONALITY")) != "")THEN
	#{
		(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<Nationality>"+(fv_r).(fv_c).("NATIONALITY")+"</Nationality>"
	#}
	ENDIF
	
	IF(TRIM((fv_r).(fv_c).("demoHoldMailFlg")) != "")THEN
	#{
		(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<HoldMailFlag>"+(fv_r).(fv_c).("demoHoldMailFlg")+"</HoldMailFlag>"
	#}
	ENDIF
	
	
	(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "</DemographicModData>"
	#------------------------- DemographicData Ends   ---------------------------------
	
	#------------------------- Entity Document Starts   ---------------------------------
	
	#=====================================================
	# Retail CIF Entity Document (TF)
	#=====================================================
	lv_e = 1
	PRINT((fv_r).(fv_c).("entityDocCount"))
	CUST.DATA.existingDoc = "N"	
	WHILE(lv_e <= CINT((fv_r).(fv_c).("entityDocCount")))
	#{
		(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "<EntityDocModData>"
		
		IF(TRIM(CUST.DATA.entityDocumentId) == "")THEN
		#{
			sv_r = func_selectFromCustTableB("entityDocumentId,preferredUniqueId,referencenumber","entityDocumentId,preferredUniqueId,referencenumber","crmuser.entitydocument","doccode|orgkey",(fv_r).(fv_c).("idTypeCode") + "|" + (fv_r).(fv_c).("cust_id"))
			sub_copyOutparamFieldB("entityDocumentId",fv_r,fv_c,"entityDocumentId","NOTFOUND")
			sub_copyOutparamFieldB("preferredUniqueId",fv_r,fv_c,"preferredUniqueId","NOTFOUND")
			sub_copyOutparamFieldB("referencenumber",fv_r,fv_c,"referencenumber","NOTFOUND")
			PRINT((fv_r).(fv_c).("entityDocumentId"))
			PRINT((fv_r).(fv_c).("preferredUniqueId"))
			CUST.DATA.entityDocumentId = (fv_r).(fv_c).("entityDocumentId")
			CUST.DATA.existingDoc = "Y"
		#}
		ENDIF

		IF((fv_r).(fv_c).("entityDocumentId") != "NOTFOUND")THEN
		#{
			sub_addTagIfNotNull("EntityDocumentID",fv_r,fv_c,"entityDocumentId","N",BYREF (fv_r).(fv_c).("xmlString"))
		#}
		ENDIF

		CUST.DATA.docTypeCode1 = "RETAIL"
		sub_addTagIfNotNull("TypeCode",fv_r,fv_c,"docTypeCode1","N",BYREF (fv_r).(fv_c).("xmlString"))
		sub_addTagIfNotNull("DocCode",fv_r,fv_c,"docCode","N",BYREF (fv_r).(fv_c).("xmlString"))	
		#RetCustModRq.RetailCustModRelatedData.EntityDocModData[0].DocRemarks
		sub_addTagIfNotNull("DocRemarks",fv_r,fv_c,"idDesc","N",BYREF (fv_r).(fv_c).("xmlString"))
		
		#RetCustModRq.RetailCustModRelatedData.EntityDocModData[0].IssueDt
		sub_addTagIfNotNull("IssueDt",fv_r,fv_c,"issueDate","Y",BYREF (fv_r).(fv_c).("xmlString"))
		
		
		#RetCustModRq.RetailCustModRelatedData.EntityDocModData[0].CountryOfIssue
		sub_addTagIfNotNull("CountryOfIssue",fv_r,fv_c,"idIssueCntryCode","N",BYREF (fv_r).(fv_c).("xmlString"))

		#RetCustModRq.RetailCustModRelatedData.EntityDocModData[0].PlaceOfIssue
		CUST.DATA.PlaceOfIssue = "010"
		sub_addTagIfNotNull("PlaceOfIssue",fv_r,fv_c,"PlaceOfIssue","N",BYREF (fv_r).(fv_c).("xmlString"))
		
		#RetCustModRq.RetailCustModRelatedData.EntityDocModData[0].ExpDt
		print(CUST.DATA.docCode)
		IF(CUST.DATA.docCode == "PP")THEN
		#{
			sub_addTagIfNotNull("ExpDt",fv_r,fv_c,"expDate","Y",BYREF (fv_r).(fv_c).("xmlString"))
		#}
		ENDIF

		#RetCustModRq.RetailCustModRelatedData.EntityDocModData[0].ReferenceNum	
		IF(CUST.DATA.existingDoc == "Y")THEN
		#{
			sv_r = func_selectFromCustTableB("referencenumber","referencenumber","crmuser.entitydocument","doccode|orgkey",(fv_r).(fv_c).("idTypeCode") + "|" + (fv_r).(fv_c).("cust_id"))
			sub_copyOutparamFieldB("referencenumber",fv_r,fv_c,"referencenumber","NOTFOUND")
			print((fv_r).(fv_c).("referencenumber"))	

			IF((fv_r).(fv_c).("referencenumber") != "NOTFOUND")THEN	
			#{
				sub_addTagIfNotNull("ReferenceNum",fv_r,fv_c,"referencenumber","Y",BYREF (fv_r).(fv_c).("xmlString"))	
			#}
			ENDIF
		#}	
		ENDIF
		(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "</EntityDocModData>"
		lv_e = lv_e + 1
	#}
	DO
	
	#------------------------- Entity Document Ends   ---------------------------------
	#
	
	
	
	(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "</RetailCustModRelatedData>"
	(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "</RetCustModRq>"
	
	
	(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "</RetCustModRequest>"
	(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "</Body>"
	(fv_r).(fv_c).("xmlString") = (fv_r).(fv_c).("xmlString") + "</FIXML>"
	
	BANCS.OUTPARAM.XMLBody = (fv_r).(fv_c).("xmlString")
	
	PRINT(BANCS.OUTPARAM.XMLBody)
	PRINT(lv_h)
	BANCS.OUTPARAM.XMLHeader = lv_h
	#------------------------------------------------
	#Appending the Header, Body and Footer tags
	#------------------------------------------------
	sv_s = BANCS.OUTPARAM.XMLHeader + BANCS.OUTPARAM.XMLBody
	PRINT(sv_s)
	
	BANCS.INPARAM.SERVICE_NAME = "FIJCA"
	BANCS.INPARAM.SEND_RECV_FLG = "R"
	
	(fv_r).(fv_c).("fiOutFlg") = urhk_ConnectToFIAndSendMsg(sv_s)
	PRINT((fv_r).(fv_c).("fiOutFlg"))
	
	IF(FIELDEXISTS(BANCS.OUTPARAM.RespMesg))THEN
	#{
		PRINT(BANCS.OUTPARAM.RespMesg)
		PRINT(BANCS.OUTPARAM.ErrMsg)
		(fv_r).(fv_c).("responseXml") = BANCS.OUTPARAM.RespMesg
	#}
	ENDIF
	PRINT((fv_r).(fv_c).("responseXml"))
	
	
	#xmlParseFunc1 defined above
	sv_e = func_xmlParseFunc1((fv_r).(fv_c).("responseXml"),"<Status>","</Status>",BYREF (fv_r).(fv_c).("FIStatus"))
	PRINT((fv_r).(fv_c).("FIStatus"))
	
	IF(((fv_r).(fv_c).("FIStatus")) != "SUCCESS") THEN
	#{
		sv_e = func_xmlParseFunc1((fv_r).(fv_c).("responseXml"),"<ErrorDesc>","</ErrorDesc>",BYREF (fv_r).(fv_c).("errorMsg"))
		PRINT( (fv_r).(fv_c).("errorMsg"))
		(fv_r).(fv_c).("errorMsg") = "RetCustMod Failed: " + (fv_r).(fv_c).("errorMsg")
		PRINT( (fv_r).(fv_c).("errorMsg"))
		(fv_r).(fv_c).("errorFlg")  = "Y"
		RETURN 1
	#}
	ENDIF
	
	#CODE TAKEN FROM ccifcr_submit.scr(Liabialites-jyothi)
	#====================================================================
	# If tradeFinCustFlag = "N", Then CIF creation should be verified
	#====================================================================
	#IF(((fv_r).(fv_c).("TFflg")) == "N") THEN
	#{
		INTF.DATA.srvReqId = "verifyCustomerDetails"
		INTF.DATA.crmCifId = (fv_r).(fv_c).("cust_id")
		INTF.DATA.custType = "RETAIL"
		PRINT(INTF.DATA.crmCifId)
		
		#This is defined in CIFCommonFunctions.scl
		sub_createCIFVerify("INTF","DATA")
		PRINT(BANCS.OUTPARAM.RespMesg)
		(fv_r).(fv_c).("responseXml") = BANCS.OUTPARAM.RespMesg
		
		sv_e = func_xmlParseFunc1(CUST.DATA.responseXml,"<Status>","</Status>",BYREF CUST.DATA.FIStatus)
		PRINT(CUST.DATA.FIStatus)
		
		IF((TOUPPER((fv_r).(fv_c).("FIStatus"))) != "SUCCESS") THEN
		#{
			sv_e = func_xmlParseFunc1((fv_r).(fv_c).("responseXml"),"<ErrorDesc>","</ErrorDesc>",BYREF (fv_r).(fv_c).("errorMsg"))
			PRINT( (fv_r).(fv_c).("errorMsg"))
			(fv_r).(fv_c).("errorMsg") = "Verification Failed: " + (fv_r).(fv_c).("errorMsg")
			PRINT((fv_r).(fv_c).("errorMsg"))
			(fv_r).(fv_c).("errorFlg")  = "Y"
			RETURN 1
		#}
		ENDIF
		
	#}
	#ENDIF
	
	
	RETURN 0
	
#}
ENDFUNCTION

<--START
END-->

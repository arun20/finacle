#============================================================
# IMPORTANT: Auto Generated Header. DO NOT CHANGE MANUALLY.
# Product: Finacle Core
# Category: User Defined
# Script: SLAcct_inqTransferStatus.scr
# Type: NA|default
# Description: SLAcct_inqTransferStatus.scr
# Author: Saisomasekhar_N
# Date: 7/25/18 4:42 PM
# Modification Log:
#============================================================
IMPORT LibslTranSeq
IMPORT LibCommonB001
IMPORT LibCommonB002
<--START
	# Script body goes here
	TRACE ON
	
	PRINT(CUST.DATA.errorFlg)
	PRINT(CUST.DATA.errorMsg)
	
	### 1.GET SL TRAN SEQUENCE ###
	CUST.DATA.txnSeq = ""
	sv_a = func_getslTranSeq(BYREF CUST.DATA.txnSeq)
	PRINT(sv_a)
	IF(sv_a != 0)THEN
	#{
		CUST.DATA.errorFlg = "Y"
		CUST.DATA.errorMsg = "Generation of Transaction Sequence Failed."
		GOTO ENDOFSCRIPT
	#}
	ENDIF
	PRINT(CUST.DATA.txnSeq)
	
	CUST.DATA.chkTxnSeq = ""
	sv_a = func_getslTranSeq(BYREF CUST.DATA.chkTxnSeq)
	PRINT(sv_a)
	IF(sv_a != 0)THEN
	#{
		CUST.DATA.errorFlg = "Y"
		CUST.DATA.errorMsg = "Generation of Transaction Sequence Failed."
		GOTO ENDOFSCRIPT
	#}
	ENDIF
	PRINT(CUST.DATA.chkTxnSeq)
	
	### 2.INPUTS FOR INQUIRE TRANSFER STATUS API ###
	sub_copyOptionalFieldB("inpDate","CUST","DATA","inpDate",BANCS.STDIN.BODDate)
	BANCS.INPARAM.BINDVARS = LEFT$(BANCS.STDIN.BODDate,10)
	sv_a = "inpDate|SELECT TO_CHAR(TO_DATE(?SVAR,'DD-MM-YYYY'),'YYYY-MM-DD') FROM DUAL"
	sv_a = urhk_dbSelectWithBind(sv_a)
	sub_copyOutparamFieldB("inpDate","CUST","DATA","inpDate","inpDate")
	PRINT(CUST.DATA.inpDate)
	
	BANCS.INPUT.tellerId 	= BANCS.STDIN.userId
	BANCS.INPUT.txnSeq 		= CUST.DATA.txnSeq
	BANCS.INPUT.chkTxnDate 	= CUST.DATA.inpDate
	BANCS.INPUT.chkTxnSeq 	= CUST.DATA.chkTxnSeq
	
	### 3. CALL INQUIRE TRANSFER STATUS API ###
	CALLSCRIPTIFEXIST("InqTransferStatus.scr")
	IF(FIELDEXISTS(INTF.DATA.orgCode))THEN
	#{
		IF(INTF.DATA.orgCode != "000")THEN
		#{
			CUST.DATA.errorMsg = INTF.DATA.orgCode+"-"+INTF.DATA.ErrorDesc
			CUST.DATA.errorFlg = "Y"
			GOTO ENDOFSCRIPT
			#}
		ELSE
			#{
			### 4.CALL TRANSFER FUND API IF INQUIRE TRANSFER STATUS IS SUCCESS ###
			CALLSCRIPTIFEXIST("SLAcct_inqTransferFund.scr")
			IF(CUST.DATA.errorFlg == "Y")THEN
			#{
				CUST.DATA.isTranAPIFail = "Y"
				EXITSCRIPT
				#}
			ELSE
				#{
				### 5. PERFORM DB OPERATIONS ###
				PRINT(CUST.DATA.funcCode)
				PRINT(CUST.DATA.b2kRefNo)
				PRINT(CUST.DATA.entityB2kId)
				PRINT(CUST.DATA.b2kIdType)
				PRINT(CUST.DATA.eventSrlNum)
				PRINT(CUST.DATA.b2kEventAmt)
				PRINT(CUST.DATA.b2kCcy)
				PRINT(CUST.DATA.amendInd)
				PRINT(CUST.DATA.amendAmt)
				
				### 6. FETCH PURPOSE_CODE,SL_REMARKS FROM C_TFCT_TBL ###
				BANCS.INPARAM.BINDVARS = CUST.DATA.entityB2kId + "|" + CUST.DATA.b2kIdType + "|" + BANCS.STDIN.contextBankId
				BANCS.INPARAM.BINDVARS = BANCS.INPARAM.BINDVARS + "|" + CUST.DATA.entityB2kId + "|" + CUST.DATA.b2kIdType + "|" + BANCS.STDIN.contextBankId
				PRINT(BANCS.INPARAM.BINDVARS)
				sv_a = "purposeOfTxn,slRmks|SELECT PURPOSE_OF_TXN,SL_REMARKS FROM CUSTOM.C_TFCT_TBL WHERE B2K_ID = ?SVAR AND B2KID_TYPE = ?SVAR AND BANK_ID = ?SVAR "
				sv_a = sv_a + "AND SRL_NUM = (SELECT MAX(SRL_NUM) FROM CUSTOM.C_TFCT_TBL WHERE B2K_ID = ?SVAR AND B2KID_TYPE = ?SVAR AND BANK_ID = ?SVAR) AND ROWNUM=1"
				sv_a = urhk_dbSelectWithBind(sv_a)
				PRINT(sv_a)
				sub_copyOutparamFieldB("purposeOfTxn","CUST","DATA","purposeOfTxn","")
				sub_copyOutparamFieldB("slRmks","CUST","DATA","slRmks","")
				PRINT(CUST.DATA.purposeOfTxn)
				PRINT(CUST.DATA.slRmks)
				
				### FETCH CHARGE TRAN DETAILS FROM SRV STRUCT ###
				IF(CUST.DATA.menuId == "OGM")THEN
				#{
					sub_getFieldValuesfromSRVStructB("3","CUST","DATA","bgChargeDtl.chrgTranId|bgChargeDtl.chrgStartDate|bgChargeDtl.entityId.entityType","chrgTranId|chrgStartDate|entityB2kType")
				#}
				ENDIF
				IF(CUST.DATA.menuId == "ODCM")THEN
				#{
					sub_getFieldValuesfromSRVStructB("3","CUST","DATA","dcChargeDtl.chrgTranId|dcChargeDtl.chrgStartDate|dcChargeDtl.entityId.entityType","chrgTranId|chrgStartDate|entityB2kType")
				#}
				ENDIF
				IF(CUST.DATA.menuId == "IGM")THEN
				#{
					sub_getFieldValuesfromSRVStructB("3","CUST","DATA","bgInMsg.bgChargeDtl.chrgTranId|bgInMsg.bgChargeDtl.chrgStartDate|bgInMsg.bgChargeDtl.entityId.entityType","chrgTranId|chrgStartDate|entityB2kType")
				#}
				ENDIF
				IF(CUST.DATA.menuId == "IDCM")THEN
				#{
					sub_getFieldValuesfromSRVStructB("3","CUST","DATA","dcInMsgDtl.dcChargeDtl.chrgTranId|dcInMsgDtl.dcChargeDtl.chrgStartDate|dcInMsgDtl.dcChargeDtl.entityId.entityType","chrgTranId|chrgStartDate|entityB2kType")
				#}
				ENDIF
				PRINT(CUST.DATA.chrgTranId)
				PRINT(CUST.DATA.chrgStartDate)
				PRINT(CUST.DATA.entityB2kType)
				CUST.DATA.chrgStartDate = LEFT$(CUST.DATA.chrgStartDate,10)
				
				### SKIP IF NO CHARGE TRANSACTION ###
				IF(TRIM(CUST.DATA.chrgTranId) == "")THEN
				#{
					CUST.DATA.chkTxnSeq = ""
				#}
				ENDIF
				
				### INSERT FROM TBAADM.DTD TO CUSTOM.C_DTD_P_EXT ###
				sv_a = func_selectFromCustTableB("count","count(*)","TBAADM.DTD","TRIM(TRAN_ID)|TO_CHAR(TRAN_DATE,'DD-MM-YYYY')", TRIM(CUST.DATA.chrgTranId) + "|" + CUST.DATA.chrgStartDate)
				PRINT(sv_a)
				sub_copyOutparamFieldB("count","CUST","DATA","count","0")
				PRINT(CUST.DATA.count)
				IF(CINT(CUST.DATA.count) != 0)THEN
				#{
					BANCS.INPARAM.BINDVARS = CUST.DATA.purposeOfTxn + "|" + BANCS.STDIN.userId + "|" + BANCS.STDIN.userId + "|"+ CUST.DATA.chkTxnSeq + "|" + CUST.DATA.slRmks
					BANCS.INPARAM.BINDVARS = BANCS.INPARAM.BINDVARS + "|"+ BANCS.STDIN.contextBankId + "|" + CUST.DATA.chrgTranId + "|" + CUST.DATA.chrgStartDate
					PRINT(BANCS.INPARAM.BINDVARS)
					sv_a = "INSERT INTO CUSTOM.C_DTD_P_EXT( "
					sv_a = sv_a + "SELECT ACID,TRAN_ID,TRAN_DATE,TRAN_AMT,PART_TRAN_SRL_NUM,PART_TRAN_TYPE,PSTD_FLG,?SVAR,"
					sv_a = sv_a + "'','','','','','Y','N',SYSDATE,?SVAR,?SVAR,SYSDATE,BANK_ID,'','',?SVAR,?SVAR "
					sv_a = sv_a + " FROM TBAADM.DTD WHERE BANK_ID = ?SVAR AND TRIM(TRAN_ID) = TRIM(?SVAR) AND TO_CHAR(TRAN_DATE,'DD-MM-YYYY') = ?SVAR) "
					PRINT(sv_a)
					sv_a = urhk_dbSQLWithBind(sv_a)
					PRINT(sv_a)
					IF(sv_a != 0)THEN
					#{
						CUST.DATA.errorFlg = "Y"
						CUST.DATA.errorMsg = "INSERT INTO CUSTOM.C_DTD_P_EXT TABLE FAILED"
						GOTO ENDOFSCRIPT
					#}
					ENDIF
				#}
				ENDIF
				
				### INSERT INTO C_TFCT_TBL ###
				BANCS.INPARAM.BINDVARS = CUST.DATA.funcCode + "|" + BANCS.STDIN.userId + "|" + CUST.DATA.sysDate + "|" + CUST.DATA.chkTxnSeq + "|" + CUST.DATA.serviceName + "|" + CUST.DATA.menuId
				BANCS.INPARAM.BINDVARS = BANCS.INPARAM.BINDVARS + "|" + CUST.DATA.entityB2kId + "|" + CUST.DATA.b2kIdType + "|" + BANCS.STDIN.contextBankId
				BANCS.INPARAM.BINDVARS = BANCS.INPARAM.BINDVARS + "|" + CUST.DATA.entityB2kId + "|" + CUST.DATA.b2kIdType + "|" + BANCS.STDIN.contextBankId
				PRINT(BANCS.INPARAM.BINDVARS)
				sv_a = "INSERT INTO CUSTOM.C_TFCT_TBL (SELECT B2K_ID,B2KID_TYPE,?SVAR,EVENT_SRL_NUM,TFCT_KEY_SRL_NUM,SL_ACCT_ID,ACCT_NAME,ACCT_STATUS, "
				sv_a = sv_a + " CHRG_EVENT_ID,CHRG_EVENT_TYPE,ACCT_BAL,SL_LIMIT_ID,BANK_ID,?SVAR,TO_DATE(?SVAR,'dd-mm-yyyy hh24:mi:ss'),RCRE_USER_ID,RCRE_TIME,TS_CNT, "
				sv_a = sv_a + " PURPOSE_OF_TXN,ACCT_CCY,?SVAR,ENTITY_AMOUNT,ENTITY_CCY,AMEND_IND,AMEND_AMT,SRL_NUM+1,'Y',?SVAR,?SVAR,0,SL_REMARKS "
				sv_a = sv_a + " FROM CUSTOM.C_TFCT_TBL WHERE B2K_ID = ?SVAR AND B2KID_TYPE = ?SVAR AND BANK_ID = ?SVAR "
				sv_a = sv_a + " AND SRL_NUM = (SELECT MAX(SRL_NUM) FROM CUSTOM.C_TFCT_TBL WHERE B2K_ID = ?SVAR AND B2KID_TYPE = ?SVAR AND BANK_ID = ?SVAR)) "
				PRINT(sv_a)
				sv_a = urhk_dbSQLWithBind(sv_a)
				PRINT(sv_a)
				IF(sv_a != 0)THEN
				#{
					CUST.DATA.errorFlg = "Y"
					CUST.DATA.errorMsg = "UPDATE OF ENTITY_CRE_FLG ON CUSTOM.C_TFCT TABLE FAILED"
					GOTO ENDOFSCRIPT
				#}
				ENDIF
			#}
			ENDIF
		#}
		ENDIF
		
	#}
	ENDIF
	ENDOFSCRIPT :
		IF(CUST.DATA.errorFlg == "Y")THEN
		#{
			CUST.DATA.isTranAPIFail = "Y"
			PRINT(CUST.DATA.errorMsg)
			sv_a = urhk_SRV_SetErr(CUST.DATA.errorMsg)
			sv_u = urhk_setOrbOut("SuccessOrFailure|N")
			BANCS.OUTPUT.successOrFailure = "F"
		#}
		ENDIF
END-->

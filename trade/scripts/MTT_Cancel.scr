<--start
trace on

LIBNAME SWIFT2018SO
PRINT(ONS.CUSTOM.custDataIn)
sv_a = urhk_ParseONSCustData(ONS.CUSTOM.custDataIn)
PRINT(sv_a)


BANCS.OUTPUT.mesg_filename = ""

BANCS.OUTPUT.text = ""
PRINT(BANCS.OUTPUT.text)


 IF(FIELDEXISTS(BANCS.INPUT.mtt_details_FIELD_2))THEN
        #{
                BANCS.OUTPUT.CTEXT  = TOUPPER(BANCS.INPUT.mtt_details_FIELD_2)
				PRINT(BANCS.OUTPUT.CTEXT)
        #}
 ENDIF
 
 PRINT(BANCS.OUTPUT.CTEXT)

# Called from SRV_CancelTxtDtls_post_process_data.scr. So the function code will be X
BANCS.OUTPUT.func_code = "X"

sv_a = urhk_SRV_GetVal("moduleId")
PRINT(sv_a)
IF(sv_a ==0)THEN
        #{
                BANCS.OUTPUT.module_id = BANCS.OUTPARAM.srvValue
                PRINT(BANCS.OUTPUT.module_id)
        #}
        ENDIF

PRINT(BANCS.OUTPUT.module_id)

sv_b = urhk_SRV_GetVal("textId")
PRINT(sv_b)
IF(sv_b ==0)THEN
        #{
                BANCS.OUTPUT.text_id = BANCS.OUTPARAM.srvValue
                PRINT(BANCS.OUTPUT.text_id)
        #}
        ENDIF
PRINT(BANCS.OUTPUT.text_id)

sv_c = urhk_SRV_GetVal("textType")
PRINT(sv_c)
IF(sv_c ==0)THEN
        #{
                BANCS.OUTPUT.text_type = BANCS.OUTPARAM.srvValue
                PRINT(BANCS.OUTPUT.text_type)
        #}
        ENDIF
PRINT(BANCS.OUTPUT.text_type)

BANCS.OUTPUT.buffer = ""
BANCS.OUTPUT.buffer = BANCS.OUTPUT.buffer + BANCS.OUTPUT.module_id + "|"
BANCS.OUTPUT.buffer = BANCS.OUTPUT.buffer + BANCS.OUTPUT.text_id + "|"
BANCS.OUTPUT.buffer = BANCS.OUTPUT.buffer + BANCS.OUTPUT.text_type + "|"
BANCS.OUTPUT.buffer = BANCS.OUTPUT.buffer + BANCS.OUTPUT.func_code + "|"
BANCS.OUTPUT.buffer = BANCS.OUTPUT.buffer + BANCS.STDIN.contextBankId
PRINT(BANCS.OUTPUT.buffer)

sv_r = urtn_procTFtextTempl(BANCS.OUTPUT.buffer)
print(sv_r)
print(BANCS.OUTPUT.error_message)
print(BANCS.OUTPUT.text)




if (BANCS.OUTPUT.error_message == "") THEN
        ONS.CUSTOM.custDataOut = "~mtt_details|" + BANCS.OUTPUT.text + "|" + BANCS.OUTPUT.text
     
ENDIF

IF (BANCS.OUTPUT.error_message != "") THEN
	sv_a = urhk_SRV_SetErr(CUST.ODCM.errMsg)
ENDIF


trace off
end-->

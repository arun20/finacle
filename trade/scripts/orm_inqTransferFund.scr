############################################################################################
# Name				: orm_inqTransefrFund.scr
# Description			: Call for Transfer Fund API
# Author			: Surya Sneha P
# Date   			: 22/06/18
# Version			: 0.10
############################################################################################
IMPORT LibslTranSeq
IMPORT LibCommonB001
IMPORT LibCommonB002
<--START
 TRACE ON
IF (FIELDEXISTS(ONS.CUSTOM.custDataIn) == 0) THEN
#{
	GOTO ENDOFSCRIPT
#}
ENDIF

IF (TRIM(ONS.CUSTOM.custDataIn) == "") THEN
#{
	GOTO ENDOFSCRIPT
#}
ENDIF

#sv_a = urhk_B2k_printRepos("ONS")
sv_a = ONS.CUSTOM.custDataIn
print(sv_a)
sv_u = urhk_ParseONSCustData(sv_a)

HIRM.CUSTOM.pageName = "ormtrandet"
HIRM.CUSTOM.totalDebits = "0"
HIRM.CUSTOM.totalCredits = "0"
HIRM.CUSTOM.drCrFlg = ""
HIRM.CUSTOM.tranId = ""
HIRM.CUSTOM.tranDate =""
HIRM.CUSTOM.noOfRecords = "0" 
HIRM.CUSTOM.delFlg = ""
HIRM.CUSTOM.slAcctId = ""
HIRM.CUSTOM.succOrFail = "S"
HIRM.CUSTOM.errMsg = ""
###########################~ormtrandet|intFlag|2|5|
#--------------------------------------------------------------------------------------------------#
#  FIELD DESCRIPTION                                                                               #
#--------------------------------------------------------------------------------------------------#
#  ~ormtrandet-                                                                                     #
#     FIELD_1 - intFlag                                                                            #
#     FIELD_2 - No.of multirecs                                                                    #
#     FIELD_3 - No.of fields in one record                                                         #
#--------------------------------------------------------------------------------------------------#

sub_getFieldValuesfromSRVStructB("1","HIRM","CUSTOM","remCritDtls.remitId","billId")
sub_getFieldValuesfromSRVStructB("1","HIRM","CUSTOM","remTranDtls.tranId.tranId","tranId")
sub_getFieldValuesfromSRVStructB("1","HIRM","CUSTOM","remTranDtls.tranDate","tranDate")
sub_getFieldValuesfromSRVStructB("1","HIRM","CUSTOM","remCritDtls.solId.solId","solId")


PRINT(HIRM.CUSTOM.tranId)
PRINT(HIRM.CUSTOM.tranDate)
PRINT(HIRM.CUSTOM.solId)


IF(FIELDEXISTS(("BANCS").("INPUT").(HIRM.CUSTOM.pageName+"_FIELD_2"))) THEN
#{
	HIRM.CUSTOM.noOfRecords = ("BANCS").("INPUT").(HIRM.CUSTOM.pageName+"_FIELD_2")
#}
ENDIF
print(HIRM.CUSTOM.noOfRecords)

sv_c = HIRM.CUSTOM.noOfRecords
IF (sv_c > 0) THEN
#{
	sv_d = 3
	sv_n = 0
#--------------------------------------------------------------------------------------------------#
#  Getting multirec inputs
#--------------------------------------------------------------------------------------------------#
	WHILE (sv_n < sv_c)
	#{		
		sv_z = sv_n
		sv_g = FORMAT$(sv_z,"%d")
		##################################
		sv_d = sv_d + 1
		sv_f = FORMAT$(sv_d,"%d")
		IF (("BANCS").("INPUT").(HIRM.CUSTOM.pageName+"_FIELD_"+sv_f) == "NULL") THEN
		#{
			("BANCS").("INPUT").(HIRM.CUSTOM.pageName+"_FIELD_"+sv_f) = ""
		#}
		ENDIF
		PRINT(sv_f)
		HIRM.CUSTOM.slAcctId = ("BANCS").("INPUT").(HIRM.CUSTOM.pageName+"_FIELD_"+sv_f)
		PRINT(HIRM.CUSTOM.slAcctId)	
		##################################
		#Number of Fields Skipped 
		sv_d = sv_d + 6
		IF(HIRM.CUSTOM.slAcctId == "") THEN
		#{
			GOTO SKIPREC
		#}
		ENDIF
		##################################
		sub_getFieldValuesfromSRVStructB("1","HIRM","CUSTOM","remTranDtls.tranDetails.tranLL.<rec_"+FORMAT$(sv_n,"%d")+">.delFlg","delFlg")
		print(HIRM.CUSTOM.delFlg)

		##################################
		sub_getFieldValuesfromSRVStructB("1","HIRM","CUSTOM","remTranDtls.tranDetails.tranLL.<rec_"+FORMAT$(sv_n,"%d")+">.drCrFlg","drCrFlg")
		print(HIRM.CUSTOM.drCrFlg)
		
		##################################
		sub_getFieldValuesfromSRVStructB("1","HIRM","CUSTOM","remTranDtls.tranDetails.tranLL.<rec_"+FORMAT$(sv_n,"%d")+">.tranAmt","tranAmtCrncy")
		print(HIRM.CUSTOM.tranAmtCrncy)
		
		HIRM.CUSTOM.tranAmtFul = func_getNthFieldFromStringB(HIRM.CUSTOM.tranAmtCrncy,"|",1)
		HIRM.CUSTOM.getP = GETPOSITION(HIRM.CUSTOM.tranAmtFul,".")
		PRINT(HIRM.CUSTOM.getP)
		HIRM.CUSTOM.tranAmt = MID$((HIRM.CUSTOM.tranAmtFul),0,(CINT(HIRM.CUSTOM.getP) +2))
		PRINT(HIRM.CUSTOM.tranAmt)
		##################################
				
		#Storing values in custom repos
		IF((HIRM.CUSTOM.delFlg !="Y") AND (HIRM.CUSTOM.drCrFlg == "D") AND (HIRM.CUSTOM.slAcctId != ""))THEN
		#{
			sv_y = CINT(HIRM.CUSTOM.totalDebits)
			("HIRM").("CUSTOM").("dbAcctId_"+FORMAT$(sv_y,"%d")) =  HIRM.CUSTOM.slAcctId
			("HIRM").("CUSTOM").("dbtranAmt_"+FORMAT$(sv_y,"%d")) =  HIRM.CUSTOM.tranAmt
			HIRM.CUSTOM.totalDebits = CINT(HIRM.CUSTOM.totalDebits) + CINT("1")
		#}
		ENDIF
		print(HIRM.CUSTOM.totalDebits)
		IF((HIRM.CUSTOM.delFlg !="Y") AND (HIRM.CUSTOM.drCrFlg == "C") AND (HIRM.CUSTOM.slAcctId != ""))THEN
		#{
			sv_y = CINT(HIRM.CUSTOM.totalCredits)
			("HIRM").("CUSTOM").("crAcctId_"+FORMAT$(sv_y,"%d")) =  HIRM.CUSTOM.slAcctId
			("HIRM").("CUSTOM").("crtranAmt_"+FORMAT$(sv_y,"%d")) =  HIRM.CUSTOM.tranAmt
			HIRM.CUSTOM.totalCredits = CINT(HIRM.CUSTOM.totalCredits) + CINT("1")
		#}
		ENDIF
		SKIPREC:
		print(HIRM.CUSTOM.totalCredits)
		sv_n = sv_n + 1
	#}
	DO
#}
ENDIF




#Credit Accounts api call
sv_i = 0
sv_j = 1

HIRM.CUSTOM.count = HIRM.CUSTOM.totalCredits
PRINT(HIRM.CUSTOM.count)
WHILE(HIRM.CUSTOM.count > 0)
#{

	sv_j = 1
	WHILE(sv_i < 5)
	#{
		IF(FIELDEXISTS(("HIRM").("CUSTOM").("crAcctId_"+FORMAT$(sv_i,"%d"))))THEN
		#{
			("BANCS").("INPUT").("accNum"+FORMAT$(sv_j,"%d")) = ("HIRM").("CUSTOM").("crAcctId_"+FORMAT$(sv_i,"%d"))
			PRINT(("BANCS").("INPUT").("accNum"+FORMAT$(sv_j,"%d")))
			("BANCS").("INPUT").("txnAmount"+FORMAT$(sv_j,"%d")) = ("HIRM").("CUSTOM").("crtranAmt_"+FORMAT$(sv_i,"%d"))
			sv_j =sv_j +1
		#}
		ENDIF
		sv_i = sv_i +1
	#}
	DO
	#C - From GL Account (Incase funds are getting CREDITED to customers SL A/c ID)
	BANCS.INPUT.direction = "D"
	BANCS.INPUT.reversalFlag = ""
	BANCS.INPUT.reversalTxnSeq = "0"
	CALLSCRIPTIFEXIST("transferFund.scr")
	IF(INTF.DATA.orgCode == "000")THEN
	#{	
		HIRM.CUSTOM.count = CINT(HIRM.CUSTOM.count) - sv_j 
		HIRM.CUSTOM.succOrFail ="S"
	#}
	ELSE
	#{
		HIRM.CUSTOM.errMsg = INTF.DATA.orgCode+"-"+INTF.DATA.ErrorDesc
		HIRM.CUSTOM.succOrFail = "F"
		GOTO ENDOFSCRIPT
	#}
	ENDIF

#}
DO

#Debit   Accounts api call
sv_i = 0
sv_j = 1

HIRM.CUSTOM.count = HIRM.CUSTOM.totalDebits

WHILE(HIRM.CUSTOM.count > 0)
#{

	#Inquire transfer status call for Debit 
	sv_t = func_getslTranSeq(BYREF sv_a)
	PRINT(sv_t)
	PRINT(sv_a)
	IF(sv_t != 0)THEN
	#{
		HIRM.CUSTOM.errMsg = "Generation of Transaction Sequence Failed."
		HIRM.CUSTOM.succOrFail = "F"
		EXITSCRIPT
	#}
	ENDIF

	#In case of Success 
	BANCS.INPUT.tellerId = BANCS.STDIN.userId
	BANCS.INPUT.txnSeq = sv_a
	PRINT(BANCS.INPUT.txnSeq)
	#BANCS.INPUT.chkTxnDate = BANCS.STDIN.BODDate
	sv_s = "boddt|SELECT TO_CHAR(TO_DATE(?SVAR,'DD-MM-YYYY HH24:MI:SS'),'YYYY-MM-DD') FROM DUAL"
	PRINT(sv_s)
	BANCS.INPARAM.BINDVARS = BANCS.STDIN.BODDate
	PRINT(BANCS.INPARAM.BINDVARS)
	sv_d = urhk_dbSelectWithBind(sv_s)
	PRINT(sv_d)

	IF (sv_d != 0) THEN
	#{
		PRINT("DB Error")
		EXITSCRIPT
	#}
	ENDIF
	sub_copyOutparamFieldB("boddt","HIRM","CUSTOM","boddt","")
	BANCS.INPUT.chkTxnDate = HIRM.CUSTOM.boddt
	PRINT(BANCS.INPUT.chkTxnDate)
	
	sv_t = func_getslTranSeq(BYREF sv_a)
	PRINT(sv_t)
	PRINT(sv_a)
	IF(sv_t != 0)THEN
	#{
		HIRM.CUSTOM.errMsg = "Generation of Transaction Sequence Failed."
		HIRM.CUSTOM.succOrFail = "F"
		EXITSCRIPT
	#}
	ENDIF
	BANCS.INPUT.chkTxnSeq = sv_a
	PRINT(BANCS.INPUT.chkTxnSeq)
	HIRM.CUSTOM.txnSeq = BANCS.INPUT.chkTxnSeq
	CALLSCRIPTIFEXIST("InqTransferStatus.scr")
	PRINT(INTF.DATA.orgCode)
	IF(INTF.DATA.orgCode == "000")THEN
	#{
		#Checking For Error Description
		HIRM.CUSTOM.errDesc = func_getNthFieldFromStringB(INTF.DATA.outputString,"!",5) 
		PRINT(HIRM.CUSTOM.errDesc)
		IF(HIRM.CUSTOM.errDesc != "")THEN
		#{
			# Call API for Fund Transfer
			BANCS.INPUT.txnSeq = HIRM.CUSTOM.txnSeq
			PRINT(BANCS.INPUT.txnSeq)
		#}
		ELSE
		#{
			PRINT("API Transfer fund Not Required.")
			HIRM.CUSTOM.succOrFail = "S"
			HIRM.CUSTOM.errMsg = ""
			EXITSCRIPT
		#}
		ENDIF

	#}
	ELSE
	#{
		#Error 
		HIRM.CUSTOM.errMsg = INTF.DATA.orgCode +"-"+INTF.DATA.ErrorDesc
		HIRM.CUSTOM.succOrFail = "F"
		EXITSCRIPT
	#}
	ENDIF


	sv_j = 1
	WHILE(sv_i < 5)
	#{
		IF(FIELDEXISTS(("HIRM").("CUSTOM").("dbAcctId_"+FORMAT$(sv_i,"%d"))))THEN
		#{
			("BANCS").("INPUT").("accNum"+FORMAT$(sv_j,"%d")) = ("HIRM").("CUSTOM").("dbAcctId_"+FORMAT$(sv_i,"%d"))
			("BANCS").("INPUT").("txnAmount"+FORMAT$(sv_j,"%d")) = ("HIRM").("CUSTOM").("dbtranAmt_"+FORMAT$(sv_i,"%d"))
			sv_j =sv_j +1
		#}
		ENDIF
		sv_i = sv_i +1


	#}
	DO
	#D - To GL Account (Incase funds are getting DEBITED to customers SL A/c ID)
	BANCS.INPUT.direction = "C"
	BANCS.INPUT.reversalFlag = ""
	BANCS.INPUT.reversalTxnSeq = "0"
	CALLSCRIPTIFEXIST("transferFund.scr")	

	IF(INTF.DATA.orgCode == "000")THEN
	#{	
		HIRM.CUSTOM.count = CINT(HIRM.CUSTOM.count) - sv_j 
		HIRM.CUSTOM.succOrFail ="S"
	#}
	ELSE
	#{
		HIRM.CUSTOM.errMsg = INTF.DATA.orgCode+"-"+INTF.DATA.ErrorDesc
		HIRM.CUSTOM.succOrFail = "F"
		GOTO ENDOFSCRIPT
	#}
	ENDIF


#}
DO

ENDOFSCRIPT:
EXITSCRIPT

END-->

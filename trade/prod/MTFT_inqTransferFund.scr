#============================================================
# IMPORTANT: Auto Generated Header. DO NOT CHANGE MANUALLY.
# Product: Finacle Core
# Category: User Defined
# Script: MTFT_inqTransferFund.scr
# Type: NA|default
# Description: MTFT_inqTransferFund.scr
# Author: Kanti Kalyan Desu
# Date: 7/22/18 11:19 AM
# Modification Log:
#============================================================
<--START
	# Script body goes here
	TRACE ON
	
	IF(FIELDEXISTS(ONS.CUSTOM.custDataIn) == 0)THEN
	#{
		EXITSCRIPT
	#}
	ENDIF
	IF(TRIM(ONS.CUSTOM.custDataIn) == "")THEN
	#{
		EXITSCRIPT
	#}
	ENDIF
	sv_a = urhk_ParseONSCustData(ONS.CUSTOM.custDataIn)
	PRINT(sv_a)
	
	### 1.INITIALIZE VARIABLES ###
	CUST.DATA.drCount = "0"
	CUST.DATA.crCount = "0"
	sub_copyOptionalFieldB("errorFlg","CUST","DATA","errorFlg","N")
	sub_copyOptionalFieldB("errorMsg","CUST","DATA","errorMsg","")
	
	
	### 2.ONS REPOS IS APPENDED WITH intFlag|noOfRecs|noOfFldsPerRec BEFORE THE MULTI-REC CUSTOM DATA ###
	### FIND NO OF RECORDS AND NO OF FIELDS PER REC FROM ONS ###
	sub_getFieldValuesfromONSB("2","CUST","DATA","tfc_charge_details_FIELD_2|tfc_charge_details_FIELD_3","noOfRecs|noOfFldsPerRec","0")
	PRINT(CUST.DATA.noOfRecs)
	PRINT(CUST.DATA.noOfFldsPerRec)

	IF(CUST.DATA.menuId == "MTFT")THEN
	#{
		CUST.DATA.srvFieldNames = "pcCritDtl.pcFuncCode|pcOtherDtl.pcEffFuncCode|pcCritDtl.pcDisbId|pcChargeDtl.b2kId|pcChargeDtl.entityId.entityType"
		CUST.DATA.srvFieldNames = CUST.DATA.srvFieldNames + "|" + "pcChargeDtl.eventSrlNum|pcChargeDtl.eventAmt|pcCritDtl.pcPreShipAcct.crncyCode"
	#}
	ENDIF

	CUST.DATA.srvFieldValues = "funcCode|effFuncCode|b2kRefNo|entityB2kId|b2kIdType|eventSrlNum|b2kEventAmt|b2kCcy"
	sub_getFieldValuesfromSRVStructB("8","CUST","DATA",CUST.DATA.srvFieldNames,CUST.DATA.srvFieldValues)
	PRINT(CUST.DATA.funcCode)
	PRINT(CUST.DATA.effFuncCode)
	PRINT(CUST.DATA.b2kRefNo)
	PRINT(CUST.DATA.entityB2kId)
	PRINT(CUST.DATA.b2kIdType)
	PRINT(CUST.DATA.eventSrlNum)
	CUST.DATA.b2kEventAmt = CDOUBLE(CUST.DATA.b2kEventAmt)
	PRINT(CUST.DATA.b2kEventAmt)
	PRINT(CUST.DATA.b2kCcy)

	## 3.FETCH PREVIOUS OPERATION VALUES ON THIS ENTITY ###
	BANCS.INPARAM.BINDVARS = CUST.DATA.b2kRefNo + "|" + CUST.DATA.b2kIdType + "|" + BANCS.STDIN.contextBankId
	BANCS.INPARAM.BINDVARS = BANCS.INPARAM.BINDVARS + "|" + CUST.DATA.b2kRefNo + "|" + CUST.DATA.b2kIdType + "|" + BANCS.STDIN.contextBankId
	PRINT(BANCS.INPARAM.BINDVARS)
	sv_a = "slLmtId,prevEntityAmt,prevEntityCcy|SELECT SL_LIMIT_ID,ENTITY_AMOUNT,ENTITY_CCY"
	sv_a = sv_a + " FROM CUSTOM.C_TFCT_TBL WHERE B2K_ID = TRIM(?SVAR) AND B2KID_TYPE = ?SVAR AND BANK_ID = ?SVAR AND SRL_NUM = "
	sv_a = sv_a + " (SELECT MAX(SRL_NUM) FROM CUSTOM.C_TFCT_TBL WHERE B2K_ID = TRIM(?SVAR) AND B2KID_TYPE = ?SVAR AND BANK_ID = ?SVAR) AND ROWNUM=1"
	PRINT(sv_a)
	sv_a = urhk_dbSelectWithBind(sv_a)
	PRINT(sv_a)
	sub_copyOutparamFieldB("slLmtId","CUST","DATA","slLmtId","")
	sub_copyOutparamFieldB("prevEntityAmt","CUST","DATA","prevEntityAmt","0")
	sub_copyOutparamFieldB("prevEntityCcy","CUST","DATA","prevEntityCcy","")

	IF(sv_a != 0)THEN
	#{
		IF(CUST.DATA.effFuncCode == "D")THEN
		#{
			sub_getFieldValuesfromONSB("1","CUST","DATA","FRWK_MPTDISBDET_FIELD_8","slLmtId","")
		#}
		ENDIF
		IF(CUST.DATA.effFuncCode == "R")THEN
		#{
			sub_getFieldValuesfromONSB("1","CUST","DATA","FRWK_MPTRLOVRDET_FIELD_8","slLmtId","")
		#}
		ENDIF

		CUST.DATA.slLmtId	= TOUPPER(CUST.DATA.slLmtId)
		CUST.DATA.isNewEntity = "Y"
	#}
	ENDIF
	PRINT(CUST.DATA.slLmtId)
	PRINT(CUST.DATA.prevEntityAmt)
	PRINT(CUST.DATA.prevEntityCcy)

	### GET MULTI-REC CHARGE DETAILS TAB FIELD VALUES ###
	sub_getFieldValuesfromSRVStructB("1","CUST","DATA","pcChargeDtl.entityChargeLL.<rec_0>.key.serial_num","chrgSrlNum")
	PRINT(CUST.DATA.chrgSrlNum)
	CUST.DATA.counter 	= "0"
	CUST.DATA.counter1  = "1"
	CUST.DATA.drCount 	= "0"
	CUST.DATA.crCount 	= "0"
	
	WHILE(CINT(CUST.DATA.chrgSrlNum) != 0)
	#{
		### CHARGE EVENT ID/TYPE AND TFCT SRL NUM ###
		CUST.DATA.srvFieldNames  = "pcChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.crDrInd|pcChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.currChrgCollAmt"
		CUST.DATA.srvFieldValues = "drCrInd|tranAmt"
		sub_getFieldValuesfromSRVStructB("2","CUST","DATA",CUST.DATA.srvFieldNames,CUST.DATA.srvFieldValues)
		PRINT(CUST.DATA.drCrInd)
		PRINT(CUST.DATA.tranAmt)
		
		### GET CUSTOM FIELD VALUES FOR EACH RECORD FROM ONS BEGIN ###
		CUST.DATA.slAcctIdPos = (CINT(CUST.DATA.noOfFldsPerRec) * CINT(CUST.DATA.chrgSrlNum)) - 2
		CUST.DATA.ONSFields   = "tfc_charge_details_FIELD_" + CUST.DATA.slAcctIdPos
		PRINT(CUST.DATA.ONSFields)
		CUST.DATA.outputFields = "slAcctId"
		sub_getFieldValuesfromONSB("1","CUST","DATA", CUST.DATA.ONSFields, CUST.DATA.outputFields,"0")
		PRINT(CUST.DATA.slAcctId)
		
		IF((CUST.DATA.slAcctId != "NULL") AND (TRIM(CUST.DATA.slAcctId) != "") AND (CUST.DATA.drCrInd == "C") AND (CDOUBLE(CUST.DATA.tranAmt) != 0))THEN
		#{
			CUST.DATA.crCount = CINT(CUST.DATA.crCount) + 1
			("BANCS").("INPUT").("accNum"+FORMAT$(CINT(CUST.DATA.counter1),"%d")) = CUST.DATA.slAcctId
			("BANCS").("INPUT").("txnAmount"+FORMAT$(CINT(CUST.DATA.counter1),"%d")) = FORMAT$(CDOUBLE(CUST.DATA.tranAmt),"%2.2f")
			PRINT(("BANCS").("INPUT").("txnAmount"+FORMAT$(CINT(CUST.DATA.counter1),"%d")))
			
			#}
		ELSE
			#{
			("BANCS").("INPUT").("accNum"+FORMAT$(CINT(CUST.DATA.counter1),"%d")) = ""
			("BANCS").("INPUT").("txnAmount"+FORMAT$(CINT(CUST.DATA.counter1),"%d")) = ""
		#}
		ENDIF
		
		### INCREMENT COUNTER ###
		CUST.DATA.counter = CINT(CUST.DATA.counter) + 1
		sub_getFieldValuesfromSRVStructB("1","CUST","DATA","pcChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.key.serial_num","chrgSrlNum")
		PRINT(CUST.DATA.chrgSrlNum)
		IF(TRIM(CUST.DATA.chrgSrlNum) == "")THEN
		#{
			CUST.DATA.chrgSrlNum = 0
		#}
		ENDIF
	#}
	DO
	CUST.DATA.disbAmt = "0"
	IF(CUST.DATA.effFuncCode == "O") THEN
	#{
		sub_getFieldValuesfromONSB("1","CUST","DATA","FRWK_MPTOFFSETDET_FIELD_4","slAcctId","")
		PRINT(CUST.DATA.slAcctId)
		IF((TRIM(CUST.DATA.slAcctId) != "") AND (TRIM(CUST.DATA.slAcctId) != "NULL")) THEN
		#{
			CUST.DATA.srvFieldNames = "pcOffsetDtl.offsetGenDtl.offsetAmt|pcOffsetDtl.offsetLL.<rec_0>.pcOfstIntCollDtl.intAmt"
			CUST.DATA.srvFieldNames = CUST.DATA.srvFieldNames + "|pcOffsetDtl.offsetGenDtl.offsetAmtCrncy.crncyCode"
			CUST.DATA.srvFieldNames = CUST.DATA.srvFieldNames + "|pcOffsetDtl.offsetGenDtl.offsetOperAcctDtl.operRate"
			CUST.DATA.srvFieldNames = CUST.DATA.srvFieldNames + "|pcOffsetDtl.offsetGenDtl.offsetOperAcctDtl.operRateCode.refCode"
			CUST.DATA.srvFieldValues = "offAmt|intAmt|ofCrncyCode|opRate|opRateCode"
			
			sub_getFieldValuesfromSRVStructB("5","CUST","DATA",CUST.DATA.srvFieldNames,CUST.DATA.srvFieldValues)
			PRINT(CUST.DATA.offAmt)
			PRINT(CUST.DATA.intAmt)
			PRINT(CUST.DATA.ofCrncyCode)
			PRINT(CUST.DATA.opRate)
			PRINT(CUST.DATA.opRateCode)
			IF(CUST.DATA.ofCrncyCode != "THB") THEN
			#{
				BANCS.INPARAM.InputAmount  =  CDOUBLE(CUST.DATA.offAmt)
				BANCS.INPARAM.FromCurrency = CUST.DATA.ofCrncyCode 
				BANCS.INPARAM.ToCurrency   =  "THB"
				BANCS.INPARAM.Rate         =  CUST.DATA.opRate
				BANCS.INPARAM.RateCode     =  CUST.DATA.opRateCode
				sv_u = urhk_B2k_ConvertAmount("")
				IF (sv_u == 0 ) THEN
				#{
					CUST.DATA.offAmt = CDOUBLE(BANCS.OUTPARAM.OutputAmount)
					print(CUST.DATA.offAmt)
				#}
				ENDIF
				BANCS.INPARAM.InputAmount  =  CDOUBLE(CUST.DATA.intAmt)
                                BANCS.INPARAM.FromCurrency = CUST.DATA.ofCrncyCode
                                BANCS.INPARAM.ToCurrency   =  "THB"
                                BANCS.INPARAM.Rate         =  CUST.DATA.opRate
                                BANCS.INPARAM.RateCode     =  CUST.DATA.opRateCode
                                sv_u = urhk_B2k_ConvertAmount("")
                                IF (sv_u == 0 ) THEN
                                #{
                                        CUST.DATA.intAmt = CDOUBLE(BANCS.OUTPARAM.OutputAmount)
                                        print(CUST.DATA.intAmt)
                                #}
                                ENDIF
			#}
			ENDIF
			
			PRINT(FORMAT$(CDOUBLE(CUST.DATA.offAmt),"%2.2f"))
			CUST.DATA.crCount = CINT(CUST.DATA.crCount) + 1
			("BANCS").("INPUT").("accNum"+FORMAT$(CINT(CUST.DATA.crCount),"%d")) = CUST.DATA.slAcctId
			("BANCS").("INPUT").("txnAmount"+FORMAT$(CINT(CUST.DATA.crCount),"%d")) = FORMAT$(CDOUBLE(CUST.DATA.offAmt) ,"%2.2f")
			CUST.DATA.crCount = CINT(CUST.DATA.crCount) + 1
                        ("BANCS").("INPUT").("accNum"+FORMAT$(CINT(CUST.DATA.crCount),"%d")) = CUST.DATA.slAcctId
                        ("BANCS").("INPUT").("txnAmount"+FORMAT$(CINT(CUST.DATA.crCount),"%d")) = FORMAT$(CDOUBLE(CUST.DATA.intAmt) ,"%2.2f")
		#}
		ENDIF
	#}
	ENDIF
	PRINT(CUST.DATA.crCount)
	IF(CINT(CUST.DATA.crCount) > 5)THEN
	#{
		CUST.DATA.errorFlg = "Y"
		CUST.DATA.errorMsg = "No of Cr. Legs cannot be more than 5"
		GOTO ENDOFSCRIPT
	#}
	ENDIF
	IF(CINT(CUST.DATA.crCount) != 0)THEN
	#{
		BANCS.INPUT.direction 		= "C"
		BANCS.INPUT.reversalFlag 	= ""
		BANCS.INPUT.reversalTxnSeq 	= "0"
		CALLSCRIPTIFEXIST("transferFund.scr")
		IF(INTF.DATA.orgCode != "000")THEN
		#{
			CUST.DATA.errorMsg = INTF.DATA.orgCode+"-"+INTF.DATA.ErrorDesc
			CUST.DATA.errorFlg = "Y"
			GOTO ENDOFSCRIPT
		#}
		ENDIF
	#}
	ENDIF

	### GET MULTI-REC CHARGE DETAILS TAB FIELD VALUES ###
	sub_getFieldValuesfromSRVStructB("1","CUST","DATA","pcChargeDtl.entityChargeLL.<rec_0>.key.serial_num","chrgSrlNum")
	PRINT(CUST.DATA.chrgSrlNum)
	CUST.DATA.counter 	= "0"
	CUST.DATA.drCount 	= "0"
	CUST.DATA.crCount 	= "0"

	WHILE(CINT(CUST.DATA.chrgSrlNum) != 0)
	#{
		### CHARGE EVENT ID/TYPE AND TFCT SRL NUM ###
		CUST.DATA.srvFieldNames  = "pcChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.crDrInd|pcChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.currChrgCollAmt"
		CUST.DATA.srvFieldValues = "drCrInd|tranAmt"
		sub_getFieldValuesfromSRVStructB("2","CUST","DATA",CUST.DATA.srvFieldNames,CUST.DATA.srvFieldValues)
		PRINT(CUST.DATA.drCrInd)
		PRINT(CUST.DATA.tranAmt)
		
		### GET CUSTOM FIELD VALUES FOR EACH RECORD FROM ONS BEGIN ###
		CUST.DATA.slAcctIdPos = (CINT(CUST.DATA.noOfFldsPerRec) * CINT(CUST.DATA.chrgSrlNum)) - 2
		CUST.DATA.ONSFields   = "tfc_charge_details_FIELD_" + CUST.DATA.slAcctIdPos
		PRINT(CUST.DATA.ONSFields)
		CUST.DATA.outputFields = "slAcctId"
		sub_getFieldValuesfromONSB("1","CUST","DATA", CUST.DATA.ONSFields, CUST.DATA.outputFields,"0")
		PRINT(CUST.DATA.slAcctId)
		
		IF((CUST.DATA.slAcctId != "NULL") AND (TRIM(CUST.DATA.slAcctId) != "") AND (CUST.DATA.drCrInd == "D") AND (CDOUBLE(CUST.DATA.tranAmt) != 0))THEN
		#{
			CUST.DATA.drCount = CINT(CUST.DATA.drCount) + 1
			("BANCS").("INPUT").("accNum"+FORMAT$(CINT(CUST.DATA.counter1),"%d")) = CUST.DATA.slAcctId
			("BANCS").("INPUT").("txnAmount"+FORMAT$(CINT(CUST.DATA.counter1),"%d")) = FORMAT$(CDOUBLE(CUST.DATA.tranAmt),"%2.2f")
			#}
		ELSE
			#{
			("BANCS").("INPUT").("accNum"+FORMAT$(CINT(CUST.DATA.counter1),"%d")) = ""
			("BANCS").("INPUT").("txnAmount"+FORMAT$(CINT(CUST.DATA.counter1),"%d")) = ""
		#}
		ENDIF
		
		### INCREMENT COUNTER ###
		CUST.DATA.counter = CINT(CUST.DATA.counter) + 1
		sub_getFieldValuesfromSRVStructB("1","CUST","DATA","pcChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.key.serial_num","chrgSrlNum")
		PRINT(CUST.DATA.chrgSrlNum)
		IF(TRIM(CUST.DATA.chrgSrlNum) == "")THEN
		#{
			CUST.DATA.chrgSrlNum = 0
		#}
		ENDIF
	#}
	DO
	IF(CUST.DATA.effFuncCode == "D") THEN
	#{
		sub_getFieldValuesfromONSB("1","CUST","DATA","FRWK_MPTDISBDET_FIELD_1","slAcctId","")
		PRINT(CUST.DATA.slAcctId)
		IF((TRIM(CUST.DATA.slAcctId) != "") AND (TRIM(CUST.DATA.slAcctId) != "NULL")) THEN
		#{
			CUST.DATA.srvFieldNames = "pcDisbDtl.disbDtl.disbAmt|pcDisbDtl.disbDtl.disbAmtCrncy.crncyCode"
			CUST.DATA.srvFieldNames = CUST.DATA.srvFieldNames + "|pcDisbDtl.disbOperAcctDtl.operRate|"
			CUST.DATA.srvFieldNames = CUST.DATA.srvFieldNames + "pcDisbDtl.disbOperAcctDtl.operRateCode.refCode"
			CUST.DATA.srvFieldValues = "disbAmt|disbCrncy|opRate|opRateCode"
			sub_getFieldValuesfromSRVStructB("4","CUST","DATA",CUST.DATA.srvFieldNames,CUST.DATA.srvFieldValues)
			PRINT(CUST.DATA.disbAmt)
			PRINT(CUST.DATA.disbCrncy)
			PRINT(CUST.DATA.opRate)
			PRINT(CUST.DATA.opRateCode)
			IF(CUST.DATA.disbCrncy != "THB") THEN
                        #{
                                BANCS.INPARAM.InputAmount  =  CDOUBLE(CUST.DATA.disbAmt)
                                BANCS.INPARAM.FromCurrency = CUST.DATA.disbCrncy
                                BANCS.INPARAM.ToCurrency   =  "THB"
                                BANCS.INPARAM.Rate         =  CUST.DATA.opRate
                                BANCS.INPARAM.RateCode     =  CUST.DATA.opRateCode
                                sv_u = urhk_B2k_ConvertAmount("")
                                IF (sv_u == 0 ) THEN
                                #{
                                        CUST.DATA.disbAmt = CDOUBLE(BANCS.OUTPARAM.OutputAmount)
                                        print(CUST.DATA.disbAmt)
                                #}
                                ENDIF
                        #}
                        ENDIF
			CUST.DATA.drCount = CINT(CUST.DATA.drCount) + 1
			("BANCS").("INPUT").("accNum"+FORMAT$(CINT(CUST.DATA.drCount),"%d")) = CUST.DATA.slAcctId
			("BANCS").("INPUT").("txnAmount"+FORMAT$(CINT(CUST.DATA.drCount),"%d")) = FORMAT$(CDOUBLE(CUST.DATA.disbAmt),"%2.2f")
		#}
		ENDIF
	#}
	ENDIF
	PRINT(CUST.DATA.drCount)
	IF(CINT(CUST.DATA.drCount) > 5)THEN
	#{
		CUST.DATA.errorFlg = "Y"
		CUST.DATA.errorMsg = "No of Dr. Legs cannot be more than 5"
		GOTO ENDOFSCRIPT
	#}
	ENDIF
	IF(CINT(CUST.DATA.drCount) !=0)THEN
	#{
		BANCS.INPUT.direction 		= "D"
		BANCS.INPUT.reversalFlag 	= ""
		BANCS.INPUT.reversalTxnSeq 	= "0"
		CALLSCRIPTIFEXIST("transferFund.scr")
		IF(INTF.DATA.orgCode != "000")THEN
		#{
			CUST.DATA.errorMsg = INTF.DATA.orgCode+"-"+INTF.DATA.ErrorDesc
			CUST.DATA.errorFlg = "Y"
			GOTO ENDOFSCRIPT
		#}
		ENDIF
	#}
	ENDIF
	#sv_a = urhk_B2k_PrintRepos("BANCS")
	ENDOFSCRIPT :
		#sv_a = urhk_B2k_PrintRepos("BANCS")
		IF(CUST.DATA.errorFlg == "Y")THEN
		#{
			PRINT(CUST.DATA.errorMsg)
			sv_a = urhk_SRV_SetErr(CUST.DATA.errorMsg)
			sv_u = urhk_setOrbOut("SuccessOrFailure|N")
			BANCS.OUTPUT.successOrFailure = "F"
		#}
		ENDIF
END-->

#============================================================
# IMPORTANT: Auto Generated Header. DO NOT CHANGE MANUALLY.
# Product: Finacle Core
# Category: User Defined
# Script: accBalMonitorMTFT.scr
# Type: NA|default
# Description: Customer Level Account Balance Monitoring for MTFT
# Author: Lijo_Thomas
# Date: 6/14/18 6:26 PM
# Modification Log:
#============================================================
IMPORT LibAcctBalMonitor
<--START
CHECKSUM="b0031a198fbe3d373535814b5a0b3c2936d07f6d1efe5a8045dd678cb7d9e483"
	# Script body goes here
	
	sv_m = BANCS.STDIN.menuId
	PRINT(sv_m)
	
	IF (sv_m != "MTFT") THEN
	#{
		EXITSCRIPT
	#}
	ENDIF
	
	#-----------------------------------------------------#
	#   CREATION OF REPOSITORY AND CLASS
	#-----------------------------------------------------#
	sub_createRepClassB("CUST", "DATA")
	
	#-----------------------------------------------------#
	# Variable Initialization
	#-----------------------------------------------------#
	
	CUST.DATA.BODDate = MID$(BANCS.STDIN.BODDate,0,10)
	CUST.DATA.totalClearBal = ""
	CUST.DATA.currTranAmt = 0
	CUST.DATA.otherCurrTran = ""
	CUST.DATA.debitTranAmt = ""
	CUST.DATA.maxLimit = ""
	CUST.DATA.currCodeOut = ""
	CUST.DATA.custBalLimit  = ""
	CUST.DATA.exceptionCode = ""
	CUST.DATA.totDebitBal   = 0
	CUST.DATA.totalClearCreditBal = 0
	CUST.DATA.custId = ""
	CUST.DATA.drAmount = 0
	CUST.DATA.crAmount = 0
	
	
	
	#-----------------------------------------------------#
	# Fetching Values
	#-----------------------------------------------------#
	
	
	sv_s = func_getCPARAMValueB("BE_CUSTBAL_LIM", "CASA" , BANCS.STDIN.contextBankId , BYREF CUST.DATA.maxLimit)
	IF (sv_s != 0) THEN
	#{
		GOTO ENDOFSCRIPT
	#}
	ENDIF
	
	sv_s = func_getCPARAMValueB("BE_WAR_ACCT_LIM", "CASA" , BANCS.STDIN.contextBankId , BYREF CUST.DATA.exceptionCode)
	IF (sv_s != 0) THEN
	#{
		GOTO ENDOFSCRIPT
	#}
	ENDIF
	
	sub_getFieldValuesfromSRVStructB("1","CUST","DATA","pcCritDtl.pcDisbId","disbId")
	PRINT(CUST.DATA.disbId)
	
	sv_s = "disbFunc|SELECT DISB_FUNC "
	sv_s = sv_s + " FROM TBAADM.DISBH WHERE TRIM(DISB_ID) = ?SVAR "
	sv_s = sv_s + " AND ENTITY_CRE_FLG != 'Y' AND DEL_FLG != 'Y' AND BANK_ID = ?SVAR AND ROLLOVER_IND !='R'"
	BANCS.INPARAM.BINDVARS = TRIM(CUST.DATA.disbId) + "|" + BANCS.STDIN.contextBankId
	sv_d = urhk_dbSelectWithBind(sv_s)
	PRINT(sv_d)
	PRINT(sv_s)
	IF(sv_d == 0)THEN
	#{
		CUST.DATA.disbFunc = BANCS.OUTPARAM.disbFunc
		#}
	ELSE
		#{
		GOTO ENDOFSCRIPT
	#}
	ENDIF
	PRINT(CUST.DATA.disbFunc)
	
	IF(CUST.DATA.disbFunc == "D")THEN
	#{
		CUST.DATA.foracidField  = "pcDisbDtl.disbOperAcctDtl.operAcct.foracid"
		CUST.DATA.disbAmtField  = "pcDisbDtl.disbDtl.disbAmt"
		#}
	ELSE
		#{
		IF(CUST.DATA.disbFunc == "R")THEN
		#{
			CUST.DATA.foracidField  = "pcRlovrDtl.rlovrOperAcctDtl.operAcct.foracid"
			CUST.DATA.disbAmtField  = "pcRlovrDtl.rlovrAmt"
			#}
		ELSE
			#{
			GOTO ENDOFSCRIPT
		#}
		ENDIF
	#}
	ENDIF
	
	
	
	CUST.DATA.srvFields             = CUST.DATA.foracidField + "|" + CUST.DATA.disbAmtField
	CUST.DATA.reposFields   = "foracid|amount"
	
	sub_getFieldValuesfromSRVStructB("2","CUST","DATA",CUST.DATA.srvFields,CUST.DATA.reposFields)
	
	PRINT(CUST.DATA.foracid)
	PRINT(CUST.DATA.amount)
	
	CUST.DATA.getP = GETPOSITION((CUST.DATA.amount),"|")
	PRINT(CUST.DATA.getP)
	CUST.DATA.tempAmt = MID$(CUST.DATA.amount,0,CINT(CUST.DATA.getP))
	CUST.DATA.tempCurr = MID$(CUST.DATA.amount,CINT(CUST.DATA.getP),STRLEN(CUST.DATA.amount))
	
	sv_s = "cifId,custId,schmType|SELECT CIF_ID, CUST_ID,SCHM_TYPE "
	sv_s = sv_s + " FROM TBAADM.GAM WHERE FORACID = ?SVAR "
	sv_s = sv_s + " AND BANK_ID = ?SVAR AND SCHM_TYPE IN ('SBA','CAA') "
	sv_s = sv_s + " AND ACCT_CLS_FLG != 'Y' AND DEL_FLG = 'N' "
	sv_s = sv_s + " AND ENTITY_CRE_FLG = 'Y' AND CIF_ID IS NOT NULL "
	BANCS.INPARAM.BINDVARS = CUST.DATA.foracid + "|" + BANCS.STDIN.contextBankId
	sv_d = urhk_dbSelectWithBind(sv_s)
	
	IF(sv_d == 0)THEN
	#{
		CUST.DATA.cifId = BANCS.OUTPARAM.cifId
		CUST.DATA.custId = BANCS.OUTPARAM.custId
		CUST.DATA.schmType = BANCS.OUTPARAM.schmType
		#}
	ELSE
		#{
		GOTO ENDOFSCRIPT
	#}
	ENDIF
	
	IF( (CUST.DATA.schmType != "CAA") AND (CUST.DATA.schmType != "SBA") )THEN
	#{
		GOTO ENDOFSCRIPT
	#}
	ENDIF
	
	IF (CUST.DATA.tempCurr != "USD") THEN
	#{
		sv_f = func_getRevalRateCode(CUST.DATA.tempCurr, "USD", BYREF CUST.DATA.revalRateCode)
		PRINT(CUST.DATA.revalRateCode)
		
		# Amount conversion as per HCYCM setup.
		BANCS.INPARAM.InputAmount  =  CDOUBLE(CUST.DATA.tempAmt)
		BANCS.INPARAM.FromCurrency =  CUST.DATA.tempCurr
		BANCS.INPARAM.ToCurrency   =  "USD"
		BANCS.INPARAM.Rate         =  ""
		BANCS.INPARAM.RateCode     =  CUST.DATA.revalRateCode
		PRINT(BANCS.INPARAM.InputAmount)
		PRINT(BANCS.INPARAM.FromCurrency)
		PRINT(BANCS.INPARAM.ToCurrency)
		PRINT(BANCS.INPARAM.RateCode)
		sv_u = urhk_B2k_ConvertAmount("")
		PRINT(sv_u)
		IF (sv_u == 0 ) THEN
		#{
			lv_t = CDOUBLE(BANCS.OUTPARAM.OutputAmount)
			PRINT(lv_t)
		#}
		ENDIF
		#}
	ELSE
		#{
		lv_t = CDOUBLE(CUST.DATA.tempAmt)
	#}
	ENDIF
	
	sv_s = func_getTotalClearBal(CUST.DATA.foracid, CUST.DATA.custId, BYREF CUST.DATA.totalClearBal)
	
	CUST.DATA.totalClearCreditBal = lv_t + CDOUBLE(CUST.DATA.totalClearBal)
	PRINT(CDOUBLE(CUST.DATA.totalClearCreditBal))
	
	IF(CDOUBLE(CUST.DATA.totalClearCreditBal) > CDOUBLE(CUST.DATA.maxLimit))THEN
	#{
		sv_l = urhk_B2k_PutUserException(CUST.DATA.exceptionCode)
	#}
	ENDIF
	
	ENDOFSCRIPT:
		EXITSCRIPT
		
		TRACE OFF
		
END-->

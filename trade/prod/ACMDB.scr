<--start
trace on
sv_r = REPEXISTS("BANCS")
if (sv_r == 0) then
CREATEREP("BANCS")
endif 

sv_r = CLASSEXISTS("BANCS", "OABACS")
if (sv_r == 0) then
CREATECLASS("BANCS", "OABACS", 5)
endif 

BANCS.OABACS.MainCursor1 = -1 
sv_s = "act_num, sol_id |SELECT ACT_NUM,SOL_ID FROM tbaadm.ACM_UPL"
sv_s = sv_s + " WHERE UPLOAD_STATUS < 98 "
print(sv_s)
sv_r = urhk_dbCursorOpenWithBind(sv_s)
print(sv_r)
if (sv_r != 0) then
  sv_r=urhk_TBAF_DispMesg("Could not open cursor")
  exitscript
endif

BANCS.OABACS.MainCursor1 = BANCS.OUTPARAM.DB_CURSOR_NUMBER 

sv_r = urhk_dbCursorFetch(BANCS.OABACS.MainCursor1)

print(sv_r)
if (sv_r != 0) then
  sv_r = urhk_TBAF_DispMesg("No records to upload")
  BANCS.OABACS.MainCursor1 = -1 
  exitscript
endif
while (sv_r == 0) 
#{
  BANCS.OABACS.act_num = BANCS.OUTPARAM.act_num
	BANCS.OABACS.sol_id =  BANCS.OUTPARAM.sol_id
#	call("changesol.scr")
sv_s = "count_1|select count(*) from tbaadm.gam where " 
  sv_s = sv_s + " foracid = '"+BANCS.OABACS.act_num+"'"
  print(sv_s)
  sv_r = urhk_dbSelectWithBind(sv_s)


  if (BANCS.OUTPARAM.count_1 != 0) then
    GOTO RELOOP 
  endif
  
  sv_s = "schm_code, gl_sub_head_code, acct_name, "
  sv_s = sv_s + " crncy_code, bacid, sys_only_acct_flg, "
  sv_s = sv_s + " anw_non_cust_alwd_flg, inter_sol_access_flg, "
  sv_s = sv_s + " partitioned_flg, partitioned_type,upload_status|"
  sv_s = sv_s + " select schm_code, gl_sub_head_code, acct_name, "
  sv_s = sv_s + " crncy_code, bacid, sys_only_acct_flg, "
  sv_s = sv_s + " ANW_NON_CUST_ALWD_FLG, INTER_SOL_ACCESS_FLG, "
  sv_s = sv_s + " PARTITIONED_FLG, PARTITIONED_TYPE ,UPLOAD_STATUS "
  sv_s = sv_s + " from tbaadm.acm_upl where "
  sv_s = sv_s + " act_num = '"+BANCS.OABACS.act_num+"'" 

  print(sv_s)
  sv_r = urhk_dbSelectWithBind(sv_s)

  if (sv_r !=0 ) then  
    GOTO RELOOP
  endif
  BANCS.OABACS.schm_code = BANCS.OUTPARAM.schm_code
  BANCS.OABACS.crncy_code = BANCS.OUTPARAM.crncy_code
  BANCS.OABACS.gl_sub_head_code = BANCS.OUTPARAM.gl_sub_head_code
  BANCS.OABACS.acct_name = BANCS.OUTPARAM.acct_name
  BANCS.OABACS.partitioned_flg = BANCS.OUTPARAM.partitioned_flg
  BANCS.OABACS.inter_sol_access_flg = BANCS.OUTPARAM.inter_sol_access_flg
  BANCS.OABACS.bacid = BANCS.OUTPARAM.bacid
  BANCS.OABACS.sys_only_acct_flg = BANCS.OUTPARAM.sys_only_acct_flg
  BANCS.OABACS.anw_non_cust_alwd_flg = BANCS.OUTPARAM.anw_non_cust_alwd_flg
  BANCS.OABACS.upload_status = BANCS.OUTPARAM.upload_status

sv_a = urhk_SetUrhkInp("officeAcctDtls.acctBasic.foracid|"+BANCS.OABACS.act_num)
sv_a = urhk_SetUrhkInp("officeAcctDtls.acctBasic.permAcct|"+BANCS.OABACS.act_num)
sv_a = urhk_SetUrhkInp("officeAcctDtls.acctBasic.glSubHeadCode.crncyCode|"+BANCS.OABACS.crncy_code)
sv_a = urhk_SetUrhkInp("officeAcctDtls.acctBasic.glSubHeadCode.glSubHeadCode|"+BANCS.OABACS.gl_sub_head_code)
sv_a = urhk_SetUrhkInp("officeAcctDtls.acctBasic.schmCode.schmCode|"+BANCS.OABACS.schm_code)
sv_a = urhk_SetUrhkInp("officeAcctDtls.acctBasic.acctCrncyCode.crncyCode|"+BANCS.OABACS.crncy_code)
sv_a = urhk_SetUrhkInp("officeAcctDtls.acctBasic.acctName|"+BANCS.OABACS.acct_name)
sv_a = urhk_SetUrhkInp("officeAcctDtls.acctPlaceHolder.id|"+BANCS.OABACS.bacid)
sv_a = urhk_SetUrhkInp("officeAcctDtls.acctBasic.interSolAccessFlg|"+BANCS.OABACS.inter_sol_access_flg)
sv_a = urhk_SetUrhkInp("officeAcctDtls.sysOnlyAcctFlg|"+BANCS.OABACS.sys_only_acct_flg)
sv_a = urhk_SetUrhkInp("officeAcctDtls.partitionedFlg|"+BANCS.OABACS.partitioned_flg)
sv_a = urhk_SetUrhkInp("officeAcctDtls.acctBasic.acctRptCode|DUMMY")
sv_a = urhk_SetUrhkInp("officeAcctDtls.anywhereTranAllwd|N")
if (BANCS.OABACS.partitioned_flg == "Y") then
	sv_a = urhk_SetUrhkInp("officeAcctDtls.partitionedType|ACCNT")
endif
sv_a = urhk_ExecSrv("SRV_AddOfficeAcctAndVerify|same_user_verify = Y|retain_all_output = Y")
print(sv_a)
IF(sv_a != "0") THEN
#{
 print("Error")
 sv_c = BANCS.OUTPARAM.Error_num
 print(sv_c)

	IF (sv_c > 0) THEN
	#{
		sv_d = 1
		while (sv_d <= sv_c)
		#{
			sv_f = FORMAT$(sv_d,"%d")
			sv_e = ("BANCS").("OUTPARAM").("ErrorMesg_"+sv_f)
			print(sv_e)
			BANCS.OABACS.errorMesg = sv_e 	
			BANCS.OABACS.messageField = sv_e
			print(BANCS.OABACS.messageField)
			sv_e = ("BANCS").("OUTPARAM").("ErrorCode_"+sv_f)
			print(sv_e)
			sv_e = ("BANCS").("OUTPARAM").("Tag_"+sv_f)
			print(sv_e)
			sv_d = sv_d + 1
		#}
		do
		sv_c = BANCS.OUTPARAM.Error_num
		IF (sv_c > 0) THEN
		#{
			BANCS.OABACS.errorMesg = BANCS.OABACS.errorMesg + " Cant Issuse CC" 
			sv_m    =   "Message|"+BANCS.OABACS.errorMesg
			sv_z    =   urhk_SetOrbOut(sv_m)
			print("Cust details cannot be fetched for Modification!")
			#GOTO ENDOFSCRIPT
			#BANCS.OUTPUT.successOrFailure = "F"
		#}
		ENDIF
	#}
	ENDIF
#}
ENDIF

print("nonsense")

    if (sv_a == 0) then 
      sv_s = "update tbaadm.acm_upl set upload_status=99 where act_num = '"
      sv_s = sv_s + BANCS.OABACS.act_num + "'"
      sv_u = urhk_dbSQLWithBind(sv_s) 
      sv_u = urhk_dbSQLWithBind("commit") 
    endif

RELOOP:
  sv_r = urhk_dbCursorFetch(BANCS.OABACS.MainCursor1)
#}
do 
sv_c = urhk_dbCursorClose(BANCS.OABACS.MainCursor1)
ENDOFSCRIPT:
    EXITSCRIPT
END-->

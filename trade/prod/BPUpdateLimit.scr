IMPORT LibCommonB001
IMPORT LibCommonB002
IMPORT LibCommonB001
IMPORT LibCommonB002
IMPORT common_business_XMLFunctions
IMPORT updAvailLimitInput
<--START
        # Script body goes here
        TRACE ON
        sub_createRepClassB("CUST","DATA")

        ##sv_a = urhk_b2k_printRepos("BANCS")
        #sv_a = urhk_b2k_printRepos("ONS")

	CUST.DATA.slLimitId = ""
	CUST.DATA.errorFlg = "N"
	CUST.DATA.foracid = ""
	sv_a = func_getCallingMenuOptionB("CMMSG00004",BYREF CUST.DATA.menuId)
	PRINT(CUST.DATA.menuId)
	IF((CUST.DATA.menuId == "OAACVPS") OR (CUST.DATA.menuId == "OAACPS")  OR (CUST.DATA.menuId == "OAACMPS") OR (CUST.DATA.menuId == "HOAACOD") OR (CUST.DATA.menuId == "HOAACMOD") OR (CUST.DATA.menuId == "HOAACVOD")) THEN
	#{	
		sv_u = urhk_SRV_GetVal("acctCommonInfo.acctGeneralInfo.acctBasic.foracid")
		CUST.DATA.foracid = BANCS.OUTPARAM.srvValue
	#}
	ENDIF
	IF(CUST.DATA.menuId == "HACLHM") THEN
	#{
		sv_u = urhk_SRV_GetVal("limitHdr.limitAcct.foracid")
		CUST.DATA.foracid = BANCS.OUTPARAM.srvValue
	#}
	ENDIF
	PRINT(CUST.DATA.foracid)
	IF(CUST.DATA.foracid == "") THEN
	#{
		EXITSCRIPT
	#}
	ENDIF
	CUST.DATA.b2kIdType = "ACOBP"
	### 3.FETCH PREVIOUS OPERATION VALUES ON THIS ENTITY ###
	BANCS.INPARAM.BINDVARS = CUST.DATA.foracid + "|" + BANCS.STDIN.contextBankId
        BANCS.INPARAM.BINDVARS = BANCS.INPARAM.BINDVARS  + "|" + CUST.DATA.foracid + "|" + BANCS.STDIN.contextBankId
	PRINT(BANCS.INPARAM.BINDVARS)
	sv_a = "slLmtId,prevEntityAmt,prevEntityCcy,prevEarMark|SELECT SL_LIMIT_ID,ENTITY_AMOUNT,ENTITY_CCY,TOTAL_EARMARK"
	sv_a = sv_a + " FROM CUSTOM.C_TFCT_TBL WHERE B2K_ID = TRIM(?SVAR) AND BANK_ID = ?SVAR AND SRL_NUM IN ( "
        sv_a = sv_a + " SELECT MAX(SRL_NUM) FROM CUSTOM.C_TFCT_TBL WHERE B2K_ID = TRIM(?SVAR) AND BANK_ID = ?SVAR) AND ROWNUM = 1"
	PRINT(sv_a)
	sv_a = urhk_dbSelectWithBind(sv_a)
	PRINT(sv_a)
	sub_copyOutparamFieldB("slLmtId","CUST","DATA","slLmtId","")
	sub_copyOutparamFieldB("prevEntityAmt","CUST","DATA","prevEntityAmt","0")
	sub_copyOutparamFieldB("prevEntityCcy","CUST","DATA","prevEntityCcy","")
	sub_copyOutparamFieldB("prevEarMark","CUST","DATA","prevEarMark","0")
	IF(sv_a != 0)THEN
	#{
			sub_getFieldValuesfromONSB("1","CUST","DATA","FRWK_ACCT_LIMIT_FIELD_1","slLmtId","")
			CUST.DATA.slLmtId       = TOUPPER(CUST.DATA.slLmtId)
			CUST.DATA.isNewEntity = "Y"
	#}
	ENDIF
	PRINT(CUST.DATA.slLmtId)
	PRINT(CUST.DATA.prevEntityAmt)
	PRINT(CUST.DATA.prevEntityCcy)
	PRINT(CUST.DATA.prevEarMark)
	PRINT(CDOUBLE(CUST.DATA.prevEarMark))
	BANCS.INPUT.holdAmount  = FORMAT$(CDOUBLE(CUST.DATA.prevEarMark),"%2.2f")
	BANCS.INPUT.refType     = "T"
	BANCS.INPUT.txnAmount   = FORMAT$(CDOUBLE(CUST.DATA.prevEntityAmt),"%2.2f")
	BANCS.INPUT.refNum              = CUST.DATA.foracid
	BANCS.INPUT.acfNum              = CUST.DATA.slLmtId
	BANCS.INPUT.balance     = FORMAT$(CDOUBLE(CUST.DATA.prevEntityAmt),"%2.2f") + "|" + CUST.DATA.prevEntityCcy
	BANCS.INPUT.currency    = CUST.DATA.prevEntityCcy
	IF((CUST.DATA.menuId == "HACLHM") AND (CUST.DATA.prevEarMark <0)) then
	#{
		BANCS.INPUT.txnAmount = FORMAT$(CDOUBLE(CUST.DATA.prevEarMark),"%2.2f")
		#BANCS.INPUT.balance = -1 * CDOUBLE(CUST.DATA.prevEarMark)
		BANCS.INPUT.balance = CDOUBLE(CUST.DATA.prevEarMark)
		BANCS.INPUT.balance = FORMAT$(CDOUBLE(BANCS.INPUT.balance),"%2.2f") + "|" +  CUST.DATA.prevEntityCcy
		BANCS.INPUT.updTypeFlag = "UO"
	#}
	ELSE
	#{
		IF(CUST.DATA.menuId == "HACLHM") THEN
		#{
			BANCS.INPUT.txnAmount = FORMAT$(CDOUBLE(CUST.DATA.prevEarMark),"%2.2f")
			BANCS.INPUT.balance     = FORMAT$(CDOUBLE(CUST.DATA.prevEarMark),"%2.2f") + "|" + CUST.DATA.prevEntityCcy
		#}
		ENDIF
		BANCS.INPUT.updTypeFlag = "RU"
	#}
	ENDIF

	IF((TRIM(CUST.DATA.slLmtId) != "") AND (CDOUBLE(CUST.DATA.prevEarMark) != 0)) THEN
	#{
		CALL("updAvalLimit.scr")

		IF(FIELDEXISTS(INTF.DATA.orgCode))THEN
		#{
			IF(INTF.DATA.orgCode != "000")THEN
			#{
				sv_a = urhk_SRV_SetErr(INTF.DATA.orgCode + " - " + INTF.DATA.ErrorDesc)
				sv_u = urhk_setOrbOut("SuccessOrFailure|N")
				BANCS.OUTPUT.successOrFailure = "F"
				EXITSCRIPT
			#}
			ENDIF
		#}
		ENDIF
	#}
	ENDIF
	
sub_deleteRepClassB("CUST","DATA")
TRACE OFF	 


END-->


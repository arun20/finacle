<--start
#trace on
##
## This script is used only for MT759 and in add mode only.
#########################################################
if(BANCS.STDIN.menuId != "HSMG") then 
	exitscript
endif
#########################################################
sv_a=urhk_SRV_GetVal("genSwiftDtl.funcCode")
sv_a=BANCS.OUTPARAM.srvValue
if( sv_a != "A" ) then
	exitscript
endif

sv_b=urhk_SRV_GetVal("genSwiftDtl.mtNum.refCode")
sv_b=BANCS.OUTPARAM.srvValue
if( sv_b != "759" ) then
	exitscript
endif

if (repexists("MESG") == 0) then
#{
   exitscript
#}
endif

if(classexists("MESG", "DETAILS") == 0) then
#{
   exitscript
#}
endif

sv_u=MESG.DETAILS.msgId
#print(sv_u)
if (sv_u != "759")  then
	exitscript
endif
BANCS.INPUT.msgId=sv_u

sv_p=MESG.DETAILS.funcCode
#print(sv_p)
BANCS.INPUT.funcCode=sv_p
if(sv_p != "A") then
	exitscript
endif

if(MESG.DETAILS.tag272 < 2 ) then
	exitscript
endif

##
## Generating and inserting into SMH 
##
BANCS.INPUT.tag271=MESG.DETAILS.tag271
BANCS.INPUT.tag272=MESG.DETAILS.tag272
BANCS.INPUT.tag201=MESG.DETAILS.tag201
BANCS.INPUT.tag211=MESG.DETAILS.tag211
BANCS.INPUT.tag22d1=MESG.DETAILS.tag22d1
BANCS.INPUT.tag231=MESG.DETAILS.tag231
BANCS.INPUT.tag52a1=MESG.DETAILS.tag52a1
BANCS.INPUT.tag52a2=MESG.DETAILS.tag52a2
BANCS.INPUT.tag52d1=MESG.DETAILS.tag52d1
BANCS.INPUT.tag52d2=MESG.DETAILS.tag52d2
BANCS.INPUT.tag52d3=MESG.DETAILS.tag52d3
BANCS.INPUT.tag52d4=MESG.DETAILS.tag52d4
BANCS.INPUT.tag52d5=MESG.DETAILS.tag52d5
BANCS.INPUT.tag23h1=MESG.DETAILS.tag23h1

# Value present in first message for 23x should not be repeated.
# in other messages. This is a requirement. Hence making it blank.
#BANCS.INPUT.tag23x1=MESG.DETAILS.tag23x1
#BANCS.INPUT.tag23x2=MESG.DETAILS.tag23x2
BANCS.INPUT.tag23x1=""
BANCS.INPUT.tag23x2=""

###########################################
# Creating message 
###########################################


BANCS.INPARAM.paymentMessage=""
BANCS.INPARAM.SwiftMessage=""

sv_x = 2
sv_y = MESG.DETAILS.tag272

##########################################
while ( sv_x <= sv_y  )
#{
	if( (sv_x == "2") ) then 
		sv_u=MESG.DETAILS.secondmsg
		if( MESG.DETAILS.secondmsg != "" ) then 
			BANCS.INPARAM.paymentMessage=sv_u
			BANCS.INPARAM.SwiftMessage=sv_u
		else
			exitscript
		endif
	endif
	if( sv_x == "3" ) then 
		sv_u=MESG.DETAILS.thirdmsg
		if (MESG.DETAILS.thirdmsg != "" ) then 
			BANCS.INPARAM.paymentMessage=sv_u
			BANCS.INPARAM.SwiftMessage=sv_u
		else
			exitscript
		endif
	endif
	if( sv_x == "4" ) then 
		sv_u=MESG.DETAILS.fourthmsg
		if (MESG.DETAILS.fourthmsg != "" ) then 
			BANCS.INPARAM.paymentMessage=sv_u
			BANCS.INPARAM.SwiftMessage=sv_u
		else
			exitscript
		endif
	endif
	if( sv_x == "5" ) then 
		sv_u=MESG.DETAILS.fifthmsg
		if (MESG.DETAILS.fifthmsg != "" ) then 
			BANCS.INPARAM.paymentMessage=sv_u
			BANCS.INPARAM.SwiftMessage=sv_u
		else
			exitscript
		endif
	endif
	if( sv_x == "6" ) then 
		sv_u=MESG.DETAILS.sixthmsg
		if (MESG.DETAILS.sixthmsg != "" ) then 
			BANCS.INPARAM.paymentMessage=sv_u
			BANCS.INPARAM.SwiftMessage=sv_u
		else
			exitscript
		endif
	endif
	if( sv_x == "7" ) then 
		sv_u=MESG.DETAILS.seventhmsg
		if (MESG.DETAILS.seventhmsg != "" ) then 
			BANCS.INPARAM.paymentMessage=sv_u
			BANCS.INPARAM.SwiftMessage=sv_u
		else
			exitscript
		endif
	endif
	if( sv_x == "8" ) then 
		sv_u=MESG.DETAILS.eighthmsg
		if (MESG.DETAILS.eighthmsg != "" ) then 
			BANCS.INPARAM.paymentMessage=sv_u
			BANCS.INPARAM.SwiftMessage=sv_u
		else
			exitscript
		endif
	endif

##########################################################

sv_a=urhk_SRV_GetVal("genPaymentMsgStruct.<rec_0>.paysysId.refCode")
sv_a=BANCS.OUTPARAM.srvValue
sv_b=urhk_SRV_GetVal("genPaymentMsgStruct.<rec_0>.solId.solId")
sv_b=BANCS.OUTPARAM.srvValue
sv_c=urhk_SRV_GetVal("genPaymentMsgStruct.<rec_0>.entityCreFlg")
sv_c=BANCS.OUTPARAM.srvValue
sv_d=urhk_SRV_GetVal("genPaymentMsgStruct.<rec_0>.entity.entityType")
sv_d=BANCS.OUTPARAM.srvValue
sv_e=urhk_SRV_GetVal("genPaymentMsgStruct.<rec_0>.executionDate")
sv_e=BANCS.OUTPARAM.srvValue
sv_f=urhk_SRV_GetVal("genPaymentMsgStruct.<rec_0>.status")
sv_f=BANCS.OUTPARAM.srvValue
sv_g=urhk_SRV_GetVal("genPaymentMsgStruct.<rec_0>.tranAmt")
sv_g=CDOUBLE(BANCS.OUTPARAM.srvValue)
#print(sv_g)
sv_h=urhk_SRV_GetVal("genPaymentMsgStruct.<rec_0>.manualOrSystemFlg")
sv_h=BANCS.OUTPARAM.srvValue
sv_i=urhk_SRV_GetVal("genPaymentMsgStruct.<rec_0>.messageKind")
sv_i=BANCS.OUTPARAM.srvValue
sv_j=urhk_SRV_GetVal("genPaymentMsgStruct.<rec_0>.messageType")
sv_j=BANCS.OUTPARAM.srvValue
sv_k=urhk_SRV_GetVal("genPaymentMsgStruct.<rec_0>.inOutInd")
sv_k=BANCS.OUTPARAM.srvValue
sv_l=urhk_SRV_GetVal("genPaymentMsgStruct.<rec_0>.stpIndicator")
sv_l=BANCS.OUTPARAM.srvValue
sv_m=urhk_SRV_GetVal("genPaymentMsgStruct.<rec_0>.senderBic")
sv_m=BANCS.OUTPARAM.srvValue
sv_n=urhk_SRV_GetVal("genPaymentMsgStruct.<rec_0>.receiverBic")
sv_n=BANCS.OUTPARAM.srvValue
sv_o=urhk_SRV_GetVal("genPaymentMsgStruct.<rec_0>.pdeFlag")
sv_o=BANCS.OUTPARAM.srvValue
sv_p=urhk_SRV_GetVal("genPaymentMsgStruct.<rec_0>.valueDate")
sv_p=BANCS.OUTPARAM.srvValue
sv_q=urhk_SRV_GetVal("genPaymentMsgStruct.<rec_0>.underInvestigationFlag")
sv_q=BANCS.OUTPARAM.srvValue
sv_r=urhk_SRV_GetVal("genPaymentMsgStruct.<rec_0>.entity.entityDispId")
sv_r=BANCS.OUTPARAM.srvValue
sv_s=urhk_SRV_GetVal("genPaymentMsgStruct.<rec_0>.crncyCode")
sv_s=BANCS.OUTPARAM.srvValue
#print(sv_s)
sv_t=urhk_SRV_GetVal("genPaymentMsgStruct.<rec_0>.departmentCode.refCode")
sv_t=BANCS.OUTPARAM.srvValue

########################################################

# Extracting tranamt.
sv_z=0
sv_z= sv_z + sv_g

#To overcome validation error for crncy during insert.
if (sv_s == "") then
	sv_s = BANCS.STDIN.homeCrncyCode
endif

########################################################

BANCS.INPARAM.EventId			=sv_r
BANCS.INPARAM.EventType			=sv_d
BANCS.INPARAM.SolId				=sv_b
BANCS.INPARAM.MtNum				="759"
BANCS.INPARAM.ReceiverSwiftCode	=""
BANCS.INPARAM.Status			=sv_f
BANCS.INPARAM.BillFunc			=""
BANCS.INPARAM.EventNum			=""
BANCS.INPARAM.Remarks			=""
BANCS.INPARAM.TranId			=""
BANCS.INPARAM.TranAmt			=sv_z
BANCS.INPARAM.PtranSrlNum		=""
BANCS.INPARAM.TranDate			=""
BANCS.INPARAM.Currency			=sv_s
BANCS.INPARAM.SysOrManual		=sv_h
BANCS.INPARAM.LastTransmittedBy	=""
BANCS.INPARAM.LastTransmittedOn	=""
BANCS.INPARAM.TypeOfMessage		=sv_j
BANCS.INPARAM.EntityCreFlag		=sv_c
BANCS.INPARAM.InOutInd			=sv_k
BANCS.INPARAM.ExecutionDate		=sv_e
BANCS.INPARAM.MessageKind		=sv_i
BANCS.INPARAM.PaysysId			=sv_a
BANCS.INPARAM.RelatedMtNum		=""
BANCS.INPARAM.RelatedSwSrlNum	=""
BANCS.INPARAM.PDEFlag			=sv_o
BANCS.INPARAM.STPFlag			=sv_l
BANCS.INPARAM.ReceiverBIC		=sv_n
BANCS.INPARAM.SenderBIC			=sv_m
BANCS.INPARAM.ValueDate			=sv_p
BANCS.INPARAM.SenderRefNum		=""
BANCS.INPARAM.ReasonforFailure	=""
BANCS.INPARAM.InstructedAmt		=""
BANCS.INPARAM.InstructedCrncy	=""
BANCS.INPARAM.SenderCorrBankcode=""
BANCS.INPARAM.SenderCorrBrcode	=""
BANCS.INPARAM.ReceiverCorrBankcode=""
BANCS.INPARAM.ReceiverCorrBrcode=""
BANCS.INPARAM.RoutingRefNum		=""
BANCS.INPARAM.FollowupStatus	=""
BANCS.INPARAM.DeptCode			=sv_t
BANCS.INPARAM.PlusInd			=""
BANCS.INPARAM.UnderInvestigation=sv_q


BANCS.OUTPARAM.routedPaysysRefNum=""
BANCS.OUTPARAM.sw_srl_num=""
BANCS.OUTPARAM.ErrMsg=""
BANCS.OUTPUT.successOrFailure=""
BANCS.OUTPUT.errorDesc=""

BANCS.INPUT.calling="GEN"
BANCS.INPUT.stpFlag=MESG.DETAILS.stfFlag

########################################################
##sv_r = urhk_B2k_PrintRepos("BANCS")

# to insert into SMH an user hook insertIntoSMH is called.	
sv_a= urhk_createSMHRecord("")
#print(sv_a)

########################################################
##sv_r = urhk_B2k_PrintRepos("BANCS")
if(sv_a	!= 0) then
#{Failure
#	print(BANCS.OUTPARAM.errorMesg)
#	BANCS.OUTPUT.successOrFailure=	"F"
	BANCS.OUTPUT.errorDesc		=	BANCS.OUTPARAM.ErrMsg
#}
else
#{
#	BANCS.OUTPUT.successOrFailure=   "S"
	BANCS.OUTPUT.errorDesc       =   ""
#}
endif


sv_x = sv_x + 1

#} end of while loop.
do 

##sv_r = urhk_B2k_PrintRepos("BANCS")
#trace off
end-->

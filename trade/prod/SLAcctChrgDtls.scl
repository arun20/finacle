#============================================================
# IMPORTANT: Auto Generated Header. DO NOT CHANGE MANUALLY.
# Domain: Finacle Core
# Library Name: SLAcctChrgDtls.scl
# Description: This library will contain common functions used to maintain custom fields added in Charge Details Tab in OGM,ODCM,IGM,IDCM
#============================================================

SUB getSlLimitId()
#{
	### FETCH SL LIMIT ID FROM ONS REPOS ###
	sub_getFieldValuesfromONSB("1","CUST","DATA","tfc_limit_details_FIELD_1","slLimitId","")
	CUST.DATA.slLimitId	= TOUPPER(CUST.DATA.slLimitId)
	PRINT(CUST.DATA.slLimitId)
	
	CUST.DATA.prevEarMark 	= "0.00"
	CUST.DATA.prevEntityAmt = "0.00"
	CUST.DATA.prevSrvName 	= ""
	
	### FETCH SL LIMIT ID FROM C_TFCT_TBL ###
	BANCS.INPARAM.BINDVARS = CUST.DATA.entityB2kId + "|" + CUST.DATA.b2kIdType + "|" + BANCS.STDIN.contextBankId
	BANCS.INPARAM.BINDVARS = BANCS.INPARAM.BINDVARS + "|" + CUST.DATA.entityB2kId + "|" + CUST.DATA.b2kIdType + "|" + BANCS.STDIN.contextBankId
	PRINT(BANCS.INPARAM.BINDVARS)
	sv_a = "slLimitId,prevEarMark,prevSrvName,prevEntityAmt|SELECT SL_LIMIT_ID,TOTAL_EARMARK,SRV_NAME,ENTITY_AMOUNT FROM CUSTOM.C_TFCT_TBL WHERE B2K_ID = ?SVAR AND B2KID_TYPE = ?SVAR AND BANK_ID = ?SVAR AND SRL_NUM = "
	sv_a = sv_a + " (SELECT MAX(SRL_NUM) FROM CUSTOM.C_TFCT_TBL WHERE B2K_ID = ?SVAR AND B2KID_TYPE = ?SVAR AND BANK_ID = ?SVAR) AND ROWNUM = 1"
	sv_a = urhk_dbSelectWithBind(sv_a)
	PRINT(sv_a)
	sub_copyOutparamFieldB("slLimitId","CUST","DATA","slLimitId","")
	sub_copyOutparamFieldB("prevEarMark","CUST","DATA","prevEarMark","0")
	sub_copyOutparamFieldB("prevSrvName","CUST","DATA","prevSrvName","")
	sub_copyOutparamFieldB("prevEntityAmt","CUST","DATA","prevEntityAmt","0")
	PRINT(CUST.DATA.slLimitId)
	PRINT(CUST.DATA.prevEarMark)
	PRINT(CUST.DATA.prevSrvName)
	PRINT(CUST.DATA.prevEntityAmt)
	IF(sv_a != 0)THEN
	#{
		sub_getFieldValuesfromONSB("1","CUST","DATA","tfc_limit_details_FIELD_1","slLimitId","")
		CUST.DATA.slLimitId	= TOUPPER(CUST.DATA.slLimitId)
		PRINT(CUST.DATA.slLimitId)
	#}
	ENDIF
#}
ENDSUB

FUNCTION callMngEarMarkAPI(BYREF fv_errorFlg)
#{
	PRINT(BANCS.INPUT.acfNum)
	PRINT(BANCS.INPUT.holdAmount)
	PRINT(BANCS.INPUT.earType)
	PRINT(BANCS.INPUT.currency)
	fv_errorFlg = "N"
	IF((BANCS.INPUT.acfNum != "")AND(CDOUBLE(BANCS.INPUT.holdAmount) != 0))THEN
	#{
		CALL("mngEarmark.scr")
		IF(FIELDEXISTS(INTF.DATA.orgCode))THEN
		#{
			IF(INTF.DATA.orgCode != "000")THEN
			#{
				CUST.DATA.errorMsg = INTF.DATA.orgCode + "-" + INTF.DATA.ErrorDesc
				CUST.DATA.errorFlg = "Y"
				fv_errorFlg = "Y"
			#}
			ENDIF
		#}
		ENDIF
	#}
	ENDIF
	
	RETURN 0
#}
ENDFUNCTION

FUNCTION dbOps(BYREF fv_errorFlg)
#{
	fv_errorFlg = "N"
	
	CUST.DATA.insertFields = "B2K_ID,B2KID_TYPE,EVENT_TYPE,EVENT_SRL_NUM,TFCT_KEY_SRL_NUM,SL_ACCT_ID,ACCT_NAME,ACCT_STATUS,CHRG_EVENT_ID,CHRG_EVENT_TYPE,"
	CUST.DATA.insertFields = CUST.DATA.insertFields + "ACCT_BAL,SL_LIMIT_ID,BANK_ID,LCHG_USER_ID,LCHG_TIME,RCRE_USER_ID,RCRE_TIME,TS_CNT,PURPOSE_OF_TXN,ACCT_CCY,"
	CUST.DATA.insertFields = CUST.DATA.insertFields + "SEQ_TRAN_ID_SL,ENTITY_AMOUNT,ENTITY_CCY,AMEND_IND,AMEND_AMT,SRL_NUM,ENTITY_CRE_FLG,SRV_NAME,MENU_ID,TOTAL_EARMARK,SL_REMARKS"
	PRINT(CUST.DATA.insertFields)
	
	### CUSTOM FIELDS FROM CHARGES TAB ###
	sub_getFieldValuesfromONSB("2","CUST","DATA","tfc_charge_details_FIELD_2|tfc_charge_details_FIELD_3","noOfRecs|noOfFldsPerRec","0")
	PRINT(CUST.DATA.noOfRecs)
	PRINT(CUST.DATA.noOfFldsPerRec)
	
	IF(CUST.DATA.menuId == "OGM")THEN
	#{
		sub_getFieldValuesfromSRVStructB("1","CUST","DATA","bgChargeDtl.entityChargeLL.<rec_0>.key.serial_num","chrgSrlNum")
	#}
	ENDIF
	IF(CUST.DATA.menuId == "ODCM")THEN
	#{
		sub_getFieldValuesfromSRVStructB("1","CUST","DATA","dcChargeDtl.entityChargeLL.<rec_0>.key.serial_num","chrgSrlNum")
	#}
	ENDIF
	IF(CUST.DATA.menuId == "IGM")THEN
	#{
		sub_getFieldValuesfromSRVStructB("1","CUST","DATA","bgInMsg.bgChargeDtl.entityChargeLL.<rec_0>.key.serial_num","chrgSrlNum")
	#}
	ENDIF
	IF(CUST.DATA.menuId == "IDCM")THEN
	#{
		sub_getFieldValuesfromSRVStructB("1","CUST","DATA","dcInMsgDtl.dcChargeDtl.entityChargeLL.<rec_0>.key.serial_num","chrgSrlNum")
	#}
	ENDIF
	PRINT(CUST.DATA.chrgSrlNum)
	
	### CHECK MAX OF RUNNING SRL NUM FOR ENTITY ID ###
	sv_a = func_selectFromCustTableB("srlNum","MAX(SRL_NUM)","CUSTOM.C_TFCT_TBL","B2K_ID|B2KID_TYPE|BANK_ID", CUST.DATA.entityB2kId + "|" + CUST.DATA.b2kIdType + "|"+ BANCS.STDIN.contextBankId)
	sub_copyOutparamFieldB("srlNum","CUST","DATA","srlNum","0")
	PRINT(CUST.DATA.srlNum)
	CUST.DATA.newSrlNum = CINT(CUST.DATA.srlNum) + 1
	PRINT(CUST.DATA.newSrlNum)
	
	### INSERT ONLY ONE RECORD WITH NULL VALUES IF NO CHARGES ARE PRESENT ###
	IF(TRIM(CUST.DATA.chrgSrlNum) == "")THEN
	#{
		CUST.DATA.chrgSrlNum = 0
	#}
	ENDIF
	IF(CINT(CUST.DATA.chrgSrlNum) == 0)THEN
	#{
		### INSERT INTO CUSTOM.C_TFCT ###
		CUST.DATA.insertValues = CUST.DATA.entityB2kId  + "|" + CUST.DATA.b2kIdType + "|" + CUST.DATA.funcCode + "|" + CUST.DATA.eventSrlNum
		CUST.DATA.insertValues = CUST.DATA.insertValues + "|" + "" + "|" + "" + "|" + ""
		CUST.DATA.insertValues = CUST.DATA.insertValues + "|" + "" + "|" + "" + "|" + ""
		CUST.DATA.insertValues = CUST.DATA.insertValues + "|" + "" + "|" + CUST.DATA.slLimitId + "|" + BANCS.STDIN.contextBankId
		CUST.DATA.insertValues = CUST.DATA.insertValues + "|" + BANCS.STDIN.userId + "|DT" + CUST.DATA.sysDate + "|" + BANCS.STDIN.userId + "|DT" + CUST.DATA.sysDate + "|"+ CUST.DATA.tsCnt
		CUST.DATA.insertValues = CUST.DATA.insertValues + "|" + "" + "|" + "" + "|"
		CUST.DATA.insertValues = CUST.DATA.insertValues + "|" + CUST.DATA.b2kEventAmt + "|" + CUST.DATA.b2kCcy
		CUST.DATA.insertValues = CUST.DATA.insertValues + "|" + CUST.DATA.amendInd + "|" + CUST.DATA.amendAmt + "|" + CUST.DATA.newSrlNum + "|N"
		CUST.DATA.insertValues = CUST.DATA.insertValues + "|" + CUST.DATA.serviceName + "|" + CUST.DATA.menuId + "|" + FORMAT$(CDOUBLE(CUST.DATA.totalEarMark),"%2.2f") + "|" + ""
		sv_a = func_insertIntoCustTableB("CUSTOM.C_TFCT_TBL", CUST.DATA.insertFields, CUST.DATA.insertValues)
		PRINT(sv_a)
		IF(sv_a != 0)THEN
		#{
			CUST.DATA.errorFlg = "Y"
			CUST.DATA.errorMsg = "INSERT INTO C_TFCT_TBL FAILED"
			fv_errorFlg = "Y"
			RETURN 1
		#}
		ENDIF
	#}
	ENDIF
	CUST.DATA.counter = "0"
	WHILE(CINT(CUST.DATA.chrgSrlNum) != 0)
	#{
		IF(CUST.DATA.menuId == "OGM")THEN
		#{
			CUST.DATA.srvFieldNames = "bgChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.chrgEventId.eventId|bgChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.chrgEventId.eventType|bgChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.tfctSrlNum|bgChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.chrgDesc"
		#}
		ENDIF
		IF(CUST.DATA.menuId == "ODCM")THEN
		#{
			CUST.DATA.srvFieldNames = "dcChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.chrgEventId.eventId|dcChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.chrgEventId.eventType|dcChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.tfctSrlNum|dcChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.chrgDesc"
		#}
		ENDIF
		IF(CUST.DATA.menuId == "IGM")THEN
		#{
			CUST.DATA.srvFieldNames = "bgInMsg.bgChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.chrgEventId.eventId|bgInMsg.bgChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.chrgEventId.eventType|bgInMsg.bgChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.tfctSrlNum|bgInMsg.bgChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.chrgDesc"
		#}
		ENDIF
		IF(CUST.DATA.menuId == "IDCM")THEN
		#{
			CUST.DATA.srvFieldNames = "dcInMsgDtl.dcChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.chrgEventId.eventId|dcInMsgDtl.dcChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.chrgEventId.eventType|dcInMsgDtl.dcChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.tfctSrlNum|dcInMsgDtl.dcChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.chrgDesc"
		#}
		ENDIF
		CUST.DATA.srvFieldValues = "chrgEventId|chrgEventType|tfctSrlNum|chrgDesc"
		sub_getFieldValuesfromSRVStructB("4","CUST","DATA",CUST.DATA.srvFieldNames,CUST.DATA.srvFieldValues)
		PRINT(CUST.DATA.chrgEventId)
		PRINT(CUST.DATA.chrgEventType)
		PRINT(CUST.DATA.tfctSrlNum)
		PRINT(CUST.DATA.chrgDesc)
		
		### GET CUSTOM FIELD VALUES FOR EACH RECORD FROM ONS REPOS ###
		CUST.DATA.slAcctIdPos 		= (CINT(CUST.DATA.noOfFldsPerRec) * CINT(CUST.DATA.chrgSrlNum)) - 3
		CUST.DATA.slAcctNamePos 	= CINT(CUST.DATA.slAcctIdPos) 	+ 1
		CUST.DATA.slAcctCcyPos 		= CINT(CUST.DATA.slAcctNamePos)	+ 1
		CUST.DATA.slAcctBalPos 		= CINT(CUST.DATA.slAcctCcyPos)  + 1
		CUST.DATA.slAcctStatusPos 	= CINT(CUST.DATA.slAcctBalPos) 	+ 1
		CUST.DATA.purposeOfTxnPos 	= CINT(CUST.DATA.slAcctStatusPos)+ 1
		CUST.DATA.slTranRmksPos 	= CINT(CUST.DATA.purposeOfTxnPos) + 1
		
		CUST.DATA.ONSFields = "tfc_charge_details_FIELD_" + CUST.DATA.slAcctIdPos + "|" + "tfc_charge_details_FIELD_" + CUST.DATA.slAcctNamePos + "|" + "tfc_charge_details_FIELD_" + CUST.DATA.slAcctCcyPos + "|" + "tfc_charge_details_FIELD_" + CUST.DATA.slAcctBalPos
		CUST.DATA.ONSFields = CUST.DATA.ONSFields + "|" + "tfc_charge_details_FIELD_" + CUST.DATA.slAcctStatusPos + "|" + "tfc_charge_details_FIELD_" + CUST.DATA.purposeOfTxnPos  + "|" + "tfc_charge_details_FIELD_" + CUST.DATA.slTranRmksPos
		CUST.DATA.outputFields = "slAcctId|slAcctName|slAcctCcy|slAcctBal|slAcctStatus|slPurposeTxn|slTranRmks"
		sub_getFieldValuesfromONSB("7","CUST","DATA", CUST.DATA.ONSFields, CUST.DATA.outputFields,"")
		
		PRINT(CUST.DATA.slAcctId)
		PRINT(CUST.DATA.slAcctName)
		PRINT(CUST.DATA.slAcctCcy)
		PRINT(CUST.DATA.slAcctBal)
		PRINT(CUST.DATA.slAcctStatus)
		PRINT(CUST.DATA.slPurposeTxn)
		PRINT(CUST.DATA.slTranRmks)
		IF(CUST.DATA.slAcctBal == "NULL")THEN
		#{
			CUST.DATA.slAcctBal = "0"
		#}
		ENDIF
		
		### INSERT INTO CUSTOM.C_TFCT ###
		CUST.DATA.insertValues = CUST.DATA.entityB2kId  + "|" + CUST.DATA.b2kIdType + "|" + CUST.DATA.funcCode + "|" + CUST.DATA.eventSrlNum
		CUST.DATA.insertValues = CUST.DATA.insertValues + "|" + CUST.DATA.tfctSrlNum + "|" + CUST.DATA.slAcctId + "|" + CUST.DATA.slAcctName
		CUST.DATA.insertValues = CUST.DATA.insertValues + "|" + CUST.DATA.slAcctStatus + "|" + CUST.DATA.chrgEventId + "|" + CUST.DATA.chrgEventType
		CUST.DATA.insertValues = CUST.DATA.insertValues + "|" + CUST.DATA.slAcctBal + "|" + CUST.DATA.slLimitId + "|" + BANCS.STDIN.contextBankId
		CUST.DATA.insertValues = CUST.DATA.insertValues + "|" + BANCS.STDIN.userId + "|DT" + CUST.DATA.sysDate + "|" + BANCS.STDIN.userId + "|DT" + CUST.DATA.sysDate + "|"+ CUST.DATA.tsCnt
		CUST.DATA.insertValues = CUST.DATA.insertValues + "|" + CUST.DATA.slPurposeTxn + "|" + CUST.DATA.slAcctCcy + "|" + CUST.DATA.chkTxnSeq
		CUST.DATA.insertValues = CUST.DATA.insertValues + "|" + CUST.DATA.b2kEventAmt + "|" + CUST.DATA.b2kCcy
		CUST.DATA.insertValues = CUST.DATA.insertValues + "|" + CUST.DATA.amendInd + "|" + CUST.DATA.amendAmt + "|" + CUST.DATA.newSrlNum + "|N"
		CUST.DATA.insertValues = CUST.DATA.insertValues + "|" + CUST.DATA.serviceName + "|" + CUST.DATA.menuId + "|" + FORMAT$(CDOUBLE(CUST.DATA.totalEarMark),"%2.2f") + "|" + CUST.DATA.slTranRmks
		sv_a = func_insertIntoCustTableB("CUSTOM.C_TFCT_TBL", CUST.DATA.insertFields, CUST.DATA.insertValues)
		PRINT(sv_a)
		IF(sv_a != 0)THEN
		#{
			CUST.DATA.errorFlg = "Y"
			CUST.DATA.errorMsg = "INSERT INTO C_TFCT_TBL FAILED"
			fv_errorFlg = "Y"
			RETURN 1
		#}
		ENDIF
		
		### INCREMENT COUNTER ###
		CUST.DATA.counter = CINT(CUST.DATA.counter) + 1
		IF(CUST.DATA.menuId == "OGM")THEN
		#{
			CUST.DATA.srvFieldNames = "bgChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.key.serial_num"
		#}
		ENDIF
		IF(CUST.DATA.menuId == "ODCM")THEN
		#{
			CUST.DATA.srvFieldNames = "dcChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.key.serial_num"
		#}
		ENDIF
		IF(CUST.DATA.menuId == "IGM")THEN
		#{
			CUST.DATA.srvFieldNames = "bgInMsg.bgChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.key.serial_num"
		#}
		ENDIF
		IF(CUST.DATA.menuId == "IDCM")THEN
		#{
			CUST.DATA.srvFieldNames = "dcInMsgDtl.dcChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.key.serial_num"
		#}
		ENDIF
		sub_getFieldValuesfromSRVStructB("1","CUST","DATA",CUST.DATA.srvFieldNames,"chrgSrlNum")
		PRINT(CUST.DATA.chrgSrlNum)
		IF(TRIM(CUST.DATA.chrgSrlNum) == "")THEN
		#{
			CUST.DATA.chrgSrlNum = 0
		#}
		ENDIF
	#}
	DO
	PRINT(CUST.DATA.counter)
	IF(CINT(CUST.DATA.counter) >5)THEN
	#{
		CUST.DATA.errorFlg = "Y"
		CUST.DATA.errorMsg = "MAXIMUM OF 5 PART TRANS Dr/Cr IS ALLOWED"
		fv_errorFlg = "Y"
		RETURN 1
	#}
	ENDIF
	RETURN 0
#}
ENDFUNCTION

FUNCTION deleteCTFCT(BYREF fv_errorFlg)
#{
	fv_errorFlg = "N"
	
	BANCS.INPARAM.BINDVARS = CUST.DATA.entityB2kId + "|" + CUST.DATA.b2kIdType + "|" + BANCS.STDIN.contextBankId
	BANCS.INPARAM.BINDVARS = BANCS.INPARAM.BINDVARS + "|" + CUST.DATA.entityB2kId + "|" + CUST.DATA.b2kIdType + "|" + BANCS.STDIN.contextBankId
	PRINT(BANCS.INPARAM.BINDVARS)
	sv_a = "DELETE FROM CUSTOM.C_TFCT_TBL WHERE B2K_ID = ?SVAR AND B2KID_TYPE = ?SVAR AND BANK_ID = ?SVAR "
	sv_a = sv_a + "AND SRL_NUM = (SELECT MAX(SRL_NUM) FROM CUSTOM.C_TFCT_TBL WHERE B2K_ID = ?SVAR AND B2KID_TYPE = ?SVAR AND BANK_ID = ?SVAR) AND ENTITY_CRE_FLG = 'N'"
	PRINT(sv_a)
	sv_a = urhk_dbSQLWithBind(sv_a)
	PRINT(sv_a)
	IF(sv_a != 0)THEN
	#{
		CUST.DATA.errorMsg = "DELETE FROM CUSTOM.C_TFCT TABLE FAILED"
		CUST.DATA.errorFlg = "Y"
		fv_errorFlg = "Y"
		RETURN 1
	#}
	ENDIF
	RETURN 0
#}
ENDFUNCTION

FUNCTION callUpdAvailLimitAPI(BYREF fv_errorFlg)
#{
	fv_errorFlg = "N"
	
	PRINT(BANCS.INPUT.holdAmount)
	PRINT(BANCS.INPUT.refType)
	PRINT(BANCS.INPUT.txnAmount)
	PRINT(BANCS.INPUT.refNum)
	PRINT(BANCS.INPUT.acfNum)
	PRINT(BANCS.INPUT.balance)
	PRINT(BANCS.INPUT.currency)
	PRINT(BANCS.INPUT.updTypeFlag)
	
	CALL("updAvalLimit.scr")
	IF(FIELDEXISTS(INTF.DATA.orgCode))THEN
	#{
		IF(INTF.DATA.orgCode != "000")THEN
		#{
			fv_errorFlg = "Y"
			CUST.DATA.errorFlg = "Y"
			CUST.DATA.errorMsg = INTF.DATA.orgCode + " - " + INTF.DATA.ErrorDesc
			RETURN 1
		#}
		ENDIF
	#}
	ENDIF
	RETURN 0
#}
ENDFUNCTION

SUB intiVars()
#{
	sub_copyOptionalFieldB("errorFlg","CUST","DATA","errorFlg","N")
	sub_copyOptionalFieldB("errorMsg","CUST","DATA","errorMsg","")
	sub_copyOptionalFieldB("slLimitId","CUST","DATA","slLimitId","")
	sub_copyOptionalFieldB("slAcctId","CUST","DATA","slAcctId","")
	sub_copyOptionalFieldB("slAcctName","CUST","DATA","slAcctName","")
	sub_copyOptionalFieldB("slAcctStatus","CUST","DATA","slAcctStatus","")
	sub_copyOptionalFieldB("slAcctBal","CUST","DATA","slAcctBal","")
	sub_copyOptionalFieldB("slAcctCcy","CUST","DATA","slAcctCcy","")
	sub_copyOptionalFieldB("slPurposeTxn","CUST","DATA","slPurposeTxn","")
	sub_copyOptionalFieldB("slTranRmks","CUST","DATA","slTranRmks","")
	sub_copyOptionalFieldB("tsCnt","CUST","DATA","tsCnt","0")
	sub_copyOptionalFieldB("rcreUserId","CUST","DATA","rcreUserId","")
	sub_copyOptionalFieldB("rcreTime","CUST","DATA","rcreTime","")
	CUST.DATA.serviceName = BANCS.STDIN.serviceName
	CUST.DATA.chkTxnSeq	  = ""
	CUST.DATA.sysDate = func_getSysDateTimeWithFormatB("DD-MM-YYYY hh24:mi:ss")
	PRINT(CUST.DATA.sysDate)
	CUST.DATA.totalEarMark = "0.00"
#}
ENDSUB

<--START
END-->

#============================================================
# IMPORTANT: Auto Generated Header. DO NOT CHANGE MANUALLY.
# Product: Finacle Core
# Category: User Defined
# Script: InqTransferStatus.scr
# Type: NA|default
# Description: InqTransferStatus.scr
# Author: Sreedevi_Neelam
# Date: 6/4/18 6:05 PM
# Modification Log:
#============================================================
IMPORT LibCommonB001
IMPORT LibCommonB002
IMPORT common_business_XMLFunctions
IMPORT InqTransferStatusInput

<--START
# Script body goes here
TRACE ON

	##################Creating repository and classes###################
	#sv_r = urhk_b2k_printrepos("BANCS")
	sub_createRepClassB("INTF","DATA")
	sub_createRepClassB("CUST","TBL")
	
	PRINT(BANCS.STDIN.menuId)
	
	##################Initializing Variables###################
	INTF.DATA.outputString = ""
	BANCS.OUTPUT.successOrFailure = "S"
	BANCS.OUTPUT.ErrorDesc = "SUCCESS"
	
	BANCS.INPARAM.srvReqId 				= "InqTransferStatus"
	BANCS.INPARAM.SERVICE_NAME 			= "FIJCA"
	BANCS.INPARAM.SEND_RECV_FLG 		= "R"
	BANCS.INPARAM.IsRespReqd 			= "Y"
	BANCS.INPARAM.rqAppId      			= "8001"
	BANCS.INPARAM.rqTxnCode  			= "ESB200003"
	BANCS.INPARAM.rqUserId 				= "98001FinCore"
	BANCS.INPARAM.rqToken  				= "98001FinCore"
	BANCS.INPARAM.rqTerminalTypeCode  	= "80"
	BANCS.INPARAM.rqLangPref  			= "en"
	
	#----------------------------
	#Getting and Forming the XML Header , Body and Footer Details
	#------------------------------
	sv_c = func_xmlHeaderDetails()
	BANCS.OUTPARAM.XMLHeader = sv_c
	
	#sv_c = func_xmlBodyDetails()
	sv_c = func_xmlInqTranBodyDetails()
	BANCS.OUTPARAM.XMLBody = sv_c
	
	sv_c = func_xmlFooterDetails()
	BANCS.OUTPARAM.XMLFooter = sv_c
	
	sv_s = BANCS.OUTPARAM.XMLHeader + BANCS.OUTPARAM.XMLBody + BANCS.OUTPARAM.XMLFooter
	PRINT(sv_s)

	#---------------------------------------------
	#Custom Table Insertion & variable definition
	#---------------------------------------------

	CUST.TBL.apiName = "InqTransferStatus"
	CUST.TBL.menuName = BANCS.STDIN.menuId
	CUST.TBL.invDate = BANCS.STDIN.BODDate
	CUST.TBL.reqId = "Req_"+BANCS.INPARAM.requestuuid
	CUST.TBL.soapReqId = BANCS.INPARAM.rqUID
	CUST.TBL.reqXML = sv_s
	CUST.TBL.userId = BANCS.STDIN.userId

	CALLSCRIPTIFEXIST("insertInterfaceRecord.scr")	
	
	#-----------------------------------------------------
	#Sending the request xml to FI service provider
	#-----------------------------------------------------
	
	sv_a = func_ConnectToFIAndSendMsg("INTF","DATA",sv_s,BYREF INTF.DATA.responseXml,BYREF INTF.DATA.msgDescription,BYREF INTF.DATA.successFailure)
	
	#-----------------------------------------------------
	#When request is triggered successfully from Finacle
	#-----------------------------------------------------
	IF(INTF.DATA.successFailure == "Success") THEN
	#{
		sv_e = func_xmlParseFunc(INTF.DATA.responseXml,"<Status>","</Status>",BYREF INTF.DATA.FIStatus)
		PRINT(sv_e)
		sv_e = func_xmlParseFunc(INTF.DATA.responseXml,"<rsCode>","</rsCode>",BYREF INTF.DATA.orgCode)
		PRINT(sv_e)
		sv_e = func_xmlParseFunc(INTF.DATA.responseXml,"<orgCode>","</orgCode>",BYREF INTF.DATA.slCode)
		print(sv_e)
		
		#--------------------------------------------------------------------------------------------------------------------------------
		#Request triggered successfully and processed by host system successfully - Can be a valid account (or) invalid account response.
		#--------------------------------------------------------------------------------------------------------------------------------
		IF((INTF.DATA.FIStatus == "processed") OR (INTF.DATA.FIStatus == "SUCCESS")) THEN
		#{
			INTF.DATA.status = "S"
			#------------------------------------------------------------------------------
			# slCode = 234 & orgCode = 203 means that the inquired tx does not exist in SL
			#------------------------------------------------------------------------------
			IF((INTF.DATA.slCode == "234") AND (INTF.DATA.orgCode == "203"))THEN
			#{
				INTF.DATA.orgCode = "000"
				INTF.DATA.txnStatus = "N"
				sv_e = func_xmlParseFunc(INTF.DATA.responseXml,"<orgDesc>","</orgDesc>",BYREF INTF.DATA.Desc)
                		print(sv_e)

				print(BANCS.INPUT.tellerId)
				print(BANCS.INPUT.chkTxnDate)
				print(BANCS.INPUT.chkTxnSeq)
				print(INTF.DATA.txnStatus)
				print(INTF.DATA.Desc)
				BANCS.OUTPUT.tellerId = BANCS.INPUT.tellerId
				BANCS.OUTPUT.txnDate = BANCS.INPUT.chkTxnDate
				BANCS.OUTPUT.txnSeq = BANCS.INPUT.chkTxnSeq
				BANCS.OUTPUT.txnStatus = INTF.DATA.txnStatus
				BANCS.OUTPUT.errDesc = INTF.DATA.Desc

				INTF.DATA.outputString = BANCS.OUTPUT.tellerId + "!" + BANCS.OUTPUT.txnDate  + "!" + BANCS.OUTPUT.txnSeq + "!" + BANCS.OUTPUT.txnStatus  + "!" + BANCS.OUTPUT.errDesc

				print(INTF.DATA.outputString)
				sv_u = urhk_setOrbOut("errorCode|"+INTF.DATA.orgCode)
				sv_u = urhk_setOrbOut("outputString|"+INTF.DATA.outputString)
				GOTO CONTROLA
			#}
			ENDIF
			#------------------------------------------------------------------------------
			# slCode = 234 & orgCode = 000 means that the inquired tx already exist in SL
			#------------------------------------------------------------------------------
			IF((INTF.DATA.orgCode == 000) AND (INTF.DATA.slCode != "234")) THEN
			#{
				INTF.DATA.noOfFields = "5"
				INTF.DATA.tagFields	= "tellerId|txnDate|txnSeq|txnStatus|errDesc"
				
				sub_getFieldsFromRespXml(INTF.DATA.noOfFields,INTF.DATA.responseXml,INTF.DATA.tagFields,"")
				
				PRINT(BANCS.OUTPUT.tellerId)
				PRINT(BANCS.OUTPUT.txnDate)
				PRINT(BANCS.OUTPUT.txnSeq)
				PRINT(BANCS.OUTPUT.txnStatus)
				PRINT(BANCS.OUTPUT.errDesc)
				INTF.DATA.outputString = BANCS.OUTPUT.tellerId + "!" + BANCS.OUTPUT.txnDate  + "!" + BANCS.OUTPUT.txnSeq + "!" + BANCS.OUTPUT.txnStatus  + "!" + BANCS.OUTPUT.errDesc
				sv_u = urhk_setOrbOut("errorCode|"+INTF.DATA.orgCode)
				sv_u = urhk_setOrbOut("outputString|"+INTF.DATA.outputString)
			#}
			#-----------------------------------------------------------------------------
			#In case of invalid account (or) any other negative response from host system
			#-----------------------------------------------------------------------------
			ELSE
			#{
				sv_e = func_xmlParseFunc(INTF.DATA.responseXml,"<orgDesc>","</orgDesc>",BYREF INTF.DATA.ErrorDesc)
				PRINT(sv_e)
				
				BANCS.OUTPUT.txnStatus = "Y"
				BANCS.OUTPUT.successOrFailure = "F"
				BANCS.OUTPUT.ErrorDesc = INTF.DATA.ErrorDesc
				
				sv_u = urhk_setOrbOut("errorCode|"+INTF.DATA.orgCode)
				sv_u = urhk_setOrbOut("outputString|"+INTF.DATA.ErrorDesc)
				
			#}
			ENDIF
			CONTROLA:
		#}
		#---------------------------------------------------------
		# When request to host times out/when host system is down
		#---------------------------------------------------------
		ELSE
		#{
			sv_e = func_xmlParseFunc(INTF.DATA.responseXml,"<ErrorCode>","</ErrorCode>",BYREF INTF.DATA.orgCode)
			PRINT(sv_e)
            sv_e = func_xmlParseFunc(INTF.DATA.responseXml,"<ErrorDesc>","</ErrorDesc>",BYREF INTF.DATA.ErrorDesc)
			PRINT(sv_e)
			
			BANCS.OUTPUT.successOrFailure = "F"
			INTF.DATA.status = "F"
			
			BANCS.OUTPUT.ErrorDesc = INTF.DATA.ErrorDesc
			sv_u = urhk_setOrbOut("errorCode|"+INTF.DATA.orgCode)
			sv_u = urhk_setOrbOut("outputString|"+INTF.DATA.ErrorDesc)
		#}
		ENDIF
		
		#-----------------------------------------------------------
		#Updating response XML and Status in interface custom table
		#-----------------------------------------------------------

		BANCS.INPARAM.BINDVARS = INTF.DATA.responseXml + "|" + INTF.DATA.status + "|" + CUST.TBL.reqId

		sv_s = "UPDATE CUSTOM.C_ICIT "
		sv_s = sv_s + "SET RESPONSE_XML = ?SVAR, STATUS = ?SVAR "
		sv_s = sv_s + "WHERE REQUEST_ID = ?SVAR "
		print(sv_s)
		sv_a = urhk_dbSQLWithBind(sv_s)
		print(sv_a)

		#sv_a = urhk_dbSqlWithBind("COMMIT")
		print(sv_a)	
	#}
	#--------------------------------------------------------
	#When request is not triggered successfully from Finacle
	#--------------------------------------------------------
	ELSE
	#{
		BANCS.OUTPUT.successOrFailure = "F"
		INTF.DATA.status = "F"
		BANCS.OUTPUT.ErrorDesc = INTF.DATA.msgDescription
		sv_u = urhk_setOrbOut("outputString|"+INTF.DATA.msgDescription)
	#}
	ENDIF

	

EXITSCRIPT
END-->

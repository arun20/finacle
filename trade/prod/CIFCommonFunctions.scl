IMPORT LibCommonB001
IMPORT common_business_XMLFunctions

SUB getCIFDetails(fv_class,fv_repos)
#{
	#=====================================================
	# Parsing Retail CIF details
	#=====================================================
	IF(TOUPPER((fv_class).(fv_repos).("custType")) == "RETAIL") THEN
	#{
		(fv_class).(fv_repos).("noOfFields") = "24"
		(fv_class).(fv_repos).("tagFields") = "cifNum|custClassCode|custClassDesc|titleEn|firstNameEn|lastNameEn|title|"
		(fv_class).(fv_repos).("tagFields") = (fv_class).(fv_repos).("tagFields") +  "firstName|lastName|shortName|aliasName|gender|birthDate|nonResidentIndicator|"
		(fv_class).(fv_repos).("tagFields") = (fv_class).(fv_repos).("tagFields") +  "staffIndicatorCode|staffIndicatorDesc|nationality|martialStatusCode|"
		(fv_class).(fv_repos).("tagFields") = (fv_class).(fv_repos).("tagFields") +  "martialStatusDesc|holdMailIndicator|primaryRM|phoneList|addrList|docList"
		
		(fv_class).(fv_repos).("outputFields")   = "cifNum|custClassCode|custClassDesc|titleEn|firstNameEn|lastNameEn|title|firstName|lastName|shortName|aliasName|"
		(fv_class).(fv_repos).("outputFields")   = (fv_class).(fv_repos).("outputFields")   + "gender|birthDate|nonResInd|staffIndCode|staffIndDesc|nationality|"
		(fv_class).(fv_repos).("outputFields")   = (fv_class).(fv_repos).("outputFields")   + "martialStCode|martialStDesc|holdMailInd|primaryRM|phoneList|addrList|docList"
		
		sub_parseFieldsFromRespXml((fv_class).(fv_repos).("noOfFields"),(fv_class).(fv_repos).("cifXmlResponse"),(fv_class).(fv_repos).("tagFields"),(fv_class).(fv_repos).("outputFields"),"")
		
		(fv_class).(fv_repos).("titleEn")		= BANCS.OUTPUT.titleEn
		(fv_class).(fv_repos).("firstNameEn")		= BANCS.OUTPUT.firstNameEn
		(fv_class).(fv_repos).("lastNameEn")		= BANCS.OUTPUT.lastNameEn
		(fv_class).(fv_repos).("title")			= BANCS.OUTPUT.title
		(fv_class).(fv_repos).("firstName")		= BANCS.OUTPUT.firstName
		(fv_class).(fv_repos).("lastName")		= BANCS.OUTPUT.lastName
		(fv_class).(fv_repos).("shortName")		= BANCS.OUTPUT.shortName
		(fv_class).(fv_repos).("aliasName")		= BANCS.OUTPUT.aliasName
		(fv_class).(fv_repos).("gender")		= BANCS.OUTPUT.gender
		IF((fv_class).(fv_repos).("gender") == "F")THEN
		#{
			(fv_class).(fv_repos).("titleEn") = "MS."
		#}
		ENDIF
		IF((fv_class).(fv_repos).("gender") == "M")THEN
		#{
			(fv_class).(fv_repos).("titleEn") = "MR."
		#}
		ENDIF
		(fv_class).(fv_repos).("birthDate")		= BANCS.OUTPUT.birthDate
		(fv_class).(fv_repos).("nonResInd")		= BANCS.OUTPUT.nonResInd
		(fv_class).(fv_repos).("staffIndCode")		= BANCS.OUTPUT.staffIndCode
		(fv_class).(fv_repos).("staffIndDesc")		= BANCS.OUTPUT.staffIndDesc
		(fv_class).(fv_repos).("nationality")		= BANCS.OUTPUT.nationality
		(fv_class).(fv_repos).("martialStCode")		= BANCS.OUTPUT.martialStCode
		(fv_class).(fv_repos).("martialStDesc")		= BANCS.OUTPUT.martialStDesc
		(fv_class).(fv_repos).("holdMailInd")		= BANCS.OUTPUT.holdMailInd
		
		IF(TRIM((fv_class).(fv_repos).("birthDate")) == "") THEN
		#{
			(fv_class).(fv_repos).("birthDate") = "1900-01-01T00:00:00.000"
		#}
		ELSE
		#{
			(fv_class).(fv_repos).("birthDate") = (fv_class).(fv_repos).("birthDate") + "T00:00:00.000"
		#}
		ENDIF
		print((fv_class).(fv_repos).("birthDate"))
	#}
	ELSE
	#{
		#=====================================================
		# Parsing Corporate CIF details
		#=====================================================
		(fv_class).(fv_repos).("birthDate") = ""
		#(fv_class).(fv_repos).("noOfFields") = "23"
		#(fv_class).(fv_repos).("noOfFields") = "24"
		(fv_class).(fv_repos).("noOfFields") = "25"
		(fv_class).(fv_repos).("tagFields") = "cifNum|custClassCode|custClassDesc|corpName|otherName|businessTypeCode|businessTypeDesc|"
		(fv_class).(fv_repos).("tagFields") = (fv_class).(fv_repos).("tagFields") +  "sectorCode|sectorDesc|corporateRelationshipCIF|corporateRelationshipType|incorporationDate|incorporationCountry|ultimateRiskCountry|"
		(fv_class).(fv_repos).("tagFields") = (fv_class).(fv_repos).("tagFields") +  "email|custRatingCode|custRatingDesc|preferLanguage|"
		#(fv_class).(fv_repos).("tagFields") = (fv_class).(fv_repos).("tagFields") +  "branchNum|primaryRM|phoneList|addrList|docList"
		(fv_class).(fv_repos).("tagFields") = (fv_class).(fv_repos).("tagFields") +  "branchNum|primaryRM|phoneList|addrList|docList|treasuryCustFlag|aliasName"
		
		(fv_class).(fv_repos).("outputFields")   = "cifNum|custClassCode|custClassDesc|corpName|otherName|bussTypeCode|bussTypeDesc|sectorCode|sectorDesc|corpRelCIF|corpRelType|"
		(fv_class).(fv_repos).("outputFields")   = (fv_class).(fv_repos).("outputFields")   + "incorpDate|incorpCountry|ultRiskCountry|email|custRatCode|custRatDesc|"
		#(fv_class).(fv_repos).("outputFields")   = (fv_class).(fv_repos).("outputFields")   + "prefLang|branchNum|primaryRM|phoneList|addrList|docList"
		(fv_class).(fv_repos).("outputFields") = (fv_class).(fv_repos).("outputFields")   + "prefLang|branchNum|primaryRM|phoneList|addrList|docList|treasuryCustFlag|aliasName"
		
		sub_parseFieldsFromRespXml((fv_class).(fv_repos).("noOfFields"),(fv_class).(fv_repos).("cifXmlResponse"),(fv_class).(fv_repos).("tagFields"),(fv_class).(fv_repos).("outputFields"),"")
		
		(fv_class).(fv_repos).("corpName")		= BANCS.OUTPUT.corpName
		(fv_class).(fv_repos).("otherName")		= BANCS.OUTPUT.otherName
		(fv_class).(fv_repos).("bussTypeCode")		= BANCS.OUTPUT.bussTypeCode
		(fv_class).(fv_repos).("bussTypeDesc")		= BANCS.OUTPUT.bussTypeDesc
		(fv_class).(fv_repos).("sectorCode")		= BANCS.OUTPUT.sectorCode
		#(fv_class).(fv_repos).("sectorCode")		= "PS"
		(fv_class).(fv_repos).("sectorDesc")		= BANCS.OUTPUT.sectorDesc
		(fv_class).(fv_repos).("corpRelCIF")		= BANCS.OUTPUT.corpRelCIF
		(fv_class).(fv_repos).("corpRelType")		= BANCS.OUTPUT.corpRelType
		(fv_class).(fv_repos).("incorpDate")		= BANCS.OUTPUT.incorpDate
		(fv_class).(fv_repos).("treasuryCustFlag")	= BANCS.OUTPUT.treasuryCustFlag
		(fv_class).(fv_repos).("aliasName")		= BANCS.OUTPUT.aliasName
		IF((fv_class).(fv_repos).("incorpDate") == "")THEN
		#{
			(fv_class).(fv_repos).("bodDate") = MID$(BANCS.STDIN.BODDate,0,10)
			(fv_class).(fv_repos).("bodDate") = MID$(BANCS.STDIN.BODDate,6,4)+"-"+MID$(BANCS.STDIN.BODDate,3,2)+"-"+MID$(BANCS.STDIN.BODDate,0,2)+"T00:00:00.000"	
			print((fv_class).(fv_repos).("bodDate"))
			(fv_class).(fv_repos).("incorpDate") = (fv_class).(fv_repos).("bodDate")
			print((fv_class).(fv_repos).("incorpDate"))
		#}
		ELSE
		#{
			(fv_class).(fv_repos).("incorpDate") = (fv_class).(fv_repos).("incorpDate") + "T00:00:00.000"
		#}
		ENDIF	
		(fv_class).(fv_repos).("incorpCountry")		= BANCS.OUTPUT.incorpCountry
		(fv_class).(fv_repos).("ultRiskCountry")	= BANCS.OUTPUT.ultRiskCountry
		(fv_class).(fv_repos).("email")			= BANCS.OUTPUT.email
		(fv_class).(fv_repos).("custRatCode")		= BANCS.OUTPUT.custRatCode
		(fv_class).(fv_repos).("custRatDesc")		= BANCS.OUTPUT.custRatDesc
		(fv_class).(fv_repos).("prefLang")		= BANCS.OUTPUT.prefLang
		(fv_class).(fv_repos).("prefLang")		= "INFENG"
		(fv_class).(fv_repos).("branchNum")		= BANCS.OUTPUT.branchNum
	#}
	ENDIF
	(fv_class).(fv_repos).("cifNum")		= BANCS.OUTPUT.cifNum
	(fv_class).(fv_repos).("custClassCode")		= BANCS.OUTPUT.custClassCode
	(fv_class).(fv_repos).("custClassDesc") 	= BANCS.OUTPUT.custClassDesc
	(fv_class).(fv_repos).("primaryRM")		= BANCS.OUTPUT.primaryRM
	print((fv_class).(fv_repos).("primaryRM"))
	IF(TRIM((fv_class).(fv_repos).("primaryRM")) != "")THEN
	#{
		sv_s = "userId|"
		sv_s = sv_s + "SELECT USER_ID"
		sv_s = sv_s + " FROM TBAADM.UPR WHERE "
		sv_s = sv_s + " USER_EMP_ID IN "
		sv_s = sv_s + " (SELECT SSOIDN from CUSTOM.CAOCT WHERE SSOOFF=?SVAR)"

		BANCS.INPARAM.BINDVARS = (fv_class).(fv_repos).("primaryRM")

		print(sv_s)
		print(BANCS.INPARAM.BINDVARS)

		sv_h = urhk_dbSelectWithBind(sv_s)
		print(sv_h)

		IF(sv_h == 0)THEN
		#{
			(fv_class).(fv_repos).("userId") = BANCS.OUTPARAM.userId
    			print((fv_class).(fv_repos).("userId"))
			(fv_class).(fv_repos).("primaryRM") = (fv_class).(fv_repos).("userId")
		#}
		ELSE
		#{
			(fv_class).(fv_repos).("userId") = "UBSADMIN"
    			print((fv_class).(fv_repos).("userId"))
			(fv_class).(fv_repos).("primaryRM") = (fv_class).(fv_repos).("userId")
		#}
		ENDIF	
	#}
	ELSE
	#{
		(fv_class).(fv_repos).("primaryRM") = "UBSADMIN"
	#}
	ENDIF
	print((fv_class).(fv_repos).("primaryRM"))
	(fv_class).(fv_repos).("phoneList")		= BANCS.OUTPUT.phoneList
	(fv_class).(fv_repos).("addrList")		= BANCS.OUTPUT.addrList
	(fv_class).(fv_repos).("docList")		= BANCS.OUTPUT.docList
	
	lv_w = 1
	lv_x = 1
	lv_y = 1
	lv_z = 0
	#=====================================================
	# Parsing Phone List
	#=====================================================
	lv_a = func_getCountOfCharB((fv_class).(fv_repos).("phoneList"), "<phone>" , BYREF (fv_class).(fv_repos).("phoneCount"))
	print((fv_class).(fv_repos).("phoneCount"))
	
	WHILE (lv_w <= CINT((fv_class).(fv_repos).("phoneCount")))
	#{
		(fv_class).(fv_repos).("phoneDetails"+FORMAT$(lv_w,"%d")) = func_getNthFieldFromStringB((fv_class).(fv_repos).("phoneList"), "<phone>", lv_w + 1)
		#print((fv_class).(fv_repos).("phoneDetails"+FORMAT$(lv_w,"%d")))
		
		lv_e = func_xmlParseFunc((fv_class).(fv_repos).("phoneDetails"+FORMAT$(lv_w,"%d")),"<phoneType>","</phoneType>",BYREF (fv_class).(fv_repos).("phoneType"+FORMAT$(lv_w,"%d")))
		lv_e = func_xmlParseFunc((fv_class).(fv_repos).("phoneDetails"+FORMAT$(lv_w,"%d")),"<phoneNumber>","</phoneNumber>",BYREF (fv_class).(fv_repos).("phoneNumber"+FORMAT$(lv_w,"%d")))
		lv_e = func_xmlParseFunc((fv_class).(fv_repos).("phoneDetails"+FORMAT$(lv_w,"%d")),"<phoneCountryCode>","</phoneCountryCode>",BYREF (fv_class).(fv_repos).("phoneCntyCode"+FORMAT$(lv_w,"%d")))
		
		#print((fv_class).(fv_repos).("phoneType"+FORMAT$(lv_w,"%d")))
		#print((fv_class).(fv_repos).("phoneNumber"+FORMAT$(lv_w,"%d")))
		#print((fv_class).(fv_repos).("phoneCntyCode"+FORMAT$(lv_w,"%d")))

		(fv_class).(fv_repos).("phoneNumber"+FORMAT$(lv_w,"%d")) = LTRIM((fv_class).(fv_repos).("phoneNumber"+FORMAT$(lv_w,"%d")),'0')
		print((fv_class).(fv_repos).("phoneNumber"+FORMAT$(lv_w,"%d")))

		lv_w = lv_w + 1
	#}
	DO
	
	#=====================================================
	# Parsing Address List
	#=====================================================
	(fv_class).(fv_repos).("defAddrType") = ""
	lv_a = func_getCountOfCharB((fv_class).(fv_repos).("addrList"), "<addr>" , BYREF (fv_class).(fv_repos).("addrCount"))
	print((fv_class).(fv_repos).("addrCount"))
	lv_l = CINT((fv_class).(fv_repos).("addrCount"))
	
	WHILE (lv_x <= CINT((fv_class).(fv_repos).("addrCount")))
	#{
		(fv_class).(fv_repos).("addrDetails"+FORMAT$(lv_x,"%d")) = func_getNthFieldFromStringB((fv_class).(fv_repos).("addrList"), "<addr>", lv_x + 1)
		#print((fv_class).(fv_repos).("addrDetails"+FORMAT$(lv_x,"%d")))
		
		lv_e = func_xmlParseFunc((fv_class).(fv_repos).("addrDetails"+FORMAT$(lv_x,"%d")),"<addrTypeCode>","</addrTypeCode>",BYREF (fv_class).(fv_repos).("addrTypeCode"+FORMAT$(lv_x,"%d")))
		lv_e = func_xmlParseFunc((fv_class).(fv_repos).("addrDetails"+FORMAT$(lv_x,"%d")),"<addrTypeDesc>","</addrTypeDesc>",BYREF (fv_class).(fv_repos).("addrTypeDesc"+FORMAT$(lv_x,"%d")))
		lv_e = func_xmlParseFunc((fv_class).(fv_repos).("addrDetails"+FORMAT$(lv_x,"%d")),"<addrDetail>","</addrDetail>",BYREF (fv_class).(fv_repos).("addrDetail"+FORMAT$(lv_x,"%d")))
		lv_e = func_xmlParseFunc((fv_class).(fv_repos).("addrDetails"+FORMAT$(lv_x,"%d")),"<addrLine1>","</addrLine1>",BYREF (fv_class).(fv_repos).("addrLine1"+FORMAT$(lv_x,"%d")))
		lv_e = func_xmlParseFunc((fv_class).(fv_repos).("addrDetails"+FORMAT$(lv_x,"%d")),"<addrLine2>","</addrLine2>",BYREF (fv_class).(fv_repos).("addrLine2"+FORMAT$(lv_x,"%d")))
		lv_e = func_xmlParseFunc((fv_class).(fv_repos).("addrDetails"+FORMAT$(lv_x,"%d")),"<addrLine3>","</addrLine3>",BYREF (fv_class).(fv_repos).("addrLine3"+FORMAT$(lv_x,"%d")))
		lv_e = func_xmlParseFunc((fv_class).(fv_repos).("addrDetails"+FORMAT$(lv_x,"%d")),"<addrLine4>","</addrLine4>",BYREF (fv_class).(fv_repos).("addrLine4"+FORMAT$(lv_x,"%d")))
		lv_e = func_xmlParseFunc((fv_class).(fv_repos).("addrDetails"+FORMAT$(lv_x,"%d")),"<addrLine5>","</addrLine5>",BYREF (fv_class).(fv_repos).("addrLine5"+FORMAT$(lv_x,"%d")))
		lv_e = func_xmlParseFunc((fv_class).(fv_repos).("addrDetails"+FORMAT$(lv_x,"%d")),"<addrCityStateZip>","</addrCityStateZip>",BYREF (fv_class).(fv_repos).("addrCtyStZip"+FORMAT$(lv_x,"%d")))
		lv_e = func_xmlParseFunc((fv_class).(fv_repos).("addrDetails"+FORMAT$(lv_x,"%d")),"<addrStateDesc>","</addrStateDesc>",BYREF (fv_class).(fv_repos).("addrState"+FORMAT$(lv_x,"%d")))
		lv_e = func_xmlParseFunc((fv_class).(fv_repos).("addrDetails"+FORMAT$(lv_x,"%d")),"<addrStateCode>","</addrStateCode>",BYREF (fv_class).(fv_repos).("addrStateCode"+FORMAT$(lv_x,"%d")))
		lv_e = func_xmlParseFunc((fv_class).(fv_repos).("addrDetails"+FORMAT$(lv_x,"%d")),"<addrCountry>","</addrCountry>",BYREF (fv_class).(fv_repos).("addrCountry"+FORMAT$(lv_x,"%d")))
		lv_e = func_xmlParseFunc((fv_class).(fv_repos).("addrDetails"+FORMAT$(lv_x,"%d")),"<addrZipCode>","</addrZipCode>",BYREF (fv_class).(fv_repos).("addrZipCode"+FORMAT$(lv_x,"%d")))
		
		print((fv_class).(fv_repos).("addrTypeCode"+FORMAT$(lv_x,"%d")))
		print((fv_class).(fv_repos).("addrTypeDesc"+FORMAT$(lv_x,"%d")))
		print((fv_class).(fv_repos).("addrDetail"+FORMAT$(lv_x,"%d")))
		print((fv_class).(fv_repos).("addrLine1"+FORMAT$(lv_x,"%d")))
		print((fv_class).(fv_repos).("addrLine2"+FORMAT$(lv_x,"%d")))
		print((fv_class).(fv_repos).("addrLine3"+FORMAT$(lv_x,"%d")))
		print((fv_class).(fv_repos).("addrLine4"+FORMAT$(lv_x,"%d")))
		print((fv_class).(fv_repos).("addrLine5"+FORMAT$(lv_x,"%d")))
		print((fv_class).(fv_repos).("addrCtyStZip"+FORMAT$(lv_x,"%d")))
		print((fv_class).(fv_repos).("addrState"+FORMAT$(lv_x,"%d")))
		print((fv_class).(fv_repos).("addrStateCode"+FORMAT$(lv_x,"%d")))
		print((fv_class).(fv_repos).("addrCountry"+FORMAT$(lv_x,"%d")))
		print((fv_class).(fv_repos).("addrZipCode"+FORMAT$(lv_x,"%d")))

		#Concatenate all 5 address lines and take first 200 char as Addr Line 1, 201-400 as Addr Line 2, 401-600 as Addr Line 3
		#Chaging as per banks requirement. SL AddressLine1 Mapped to Finacle AddressLine1, AddressLine2 Mapped to Finacle AddressLine2, AddressLine3 Mapped to Finacle AddressLine3. SL AddressLine4 and AddressLine5 ignored.
		(fv_class).(fv_repos).("fullAddress") = TRIM((fv_class).(fv_repos).("addrLine1"+FORMAT$(lv_x,"%d")))+" "+TRIM((fv_class).(fv_repos).("addrLine2"+FORMAT$(lv_x,"%d")))+" "+TRIM((fv_class).(fv_repos).("addrLine3"+FORMAT$(lv_x,"%d")))+" "+TRIM((fv_class).(fv_repos).("addrLine4"+FORMAT$(lv_x,"%d")))+" "+TRIM((fv_class).(fv_repos).("addrLine5"+FORMAT$(lv_x,"%d")))

		#(fv_class).(fv_repos).("addrLine1"+FORMAT$(lv_x,"%d")) = MID$((fv_class).(fv_repos).("fullAddress"),0,200)
		#(fv_class).(fv_repos).("addrLine2"+FORMAT$(lv_x,"%d")) = MID$((fv_class).(fv_repos).("fullAddress"),200,200)
		#(fv_class).(fv_repos).("addrLine3"+FORMAT$(lv_x,"%d")) = MID$((fv_class).(fv_repos).("fullAddress"),400,200)

		#print((fv_class).(fv_repos).("fullAddress"))
		print((fv_class).(fv_repos).("addrLine1"+FORMAT$(lv_x,"%d")))
                print((fv_class).(fv_repos).("addrLine2"+FORMAT$(lv_x,"%d")))
                print((fv_class).(fv_repos).("addrLine3"+FORMAT$(lv_x,"%d")))

		#addrState - derive the proper value from categories table based on the value received in response from SL
		(fv_class).(fv_repos).("FinState") = ""
		(fv_class).(fv_repos).("SLstate") = (fv_class).(fv_repos).("addrState"+FORMAT$(lv_x,"%d"))
		print((fv_class).(fv_repos).("SLstate"))

		sv_s = "FinState|"
        	sv_s = sv_s + "SELECT value"
        	sv_s = sv_s + " FROM crmuser.categories WHERE "
        	sv_s = sv_s + " categoryid in "
        	sv_s = sv_s + " (select categoryid from crmuser.category_lang where localetext=?SVAR"
		sv_s = sv_s + " ) and categorytype = 'STATE'"

        	BANCS.INPARAM.BINDVARS = (fv_class).(fv_repos).("SLstate")

        	print(sv_s)
        	print(BANCS.INPARAM.BINDVARS)
        	sv_h = urhk_dbSelectWithBind(sv_s)
        	print(sv_h)

        	IF(sv_h == 0)THEN
        	#{
			(fv_class).(fv_repos).("FinState") = BANCS.OUTPARAM.FinState
			print((fv_class).(fv_repos).("FinState"))
        	#}
        	ELSE
        	#{
			(fv_class).(fv_repos).("FinState") = "010"
			print((fv_class).(fv_repos).("FinState"))
        	#}
        	ENDIF

		(fv_class).(fv_repos).("addrState"+FORMAT$(lv_x,"%d")) = (fv_class).(fv_repos).("FinState")

		IF(TOUPPER((fv_class).(fv_repos).("custType")) == "RETAIL") THEN
		#{
			IF(lv_z == 0) THEN
			#{
				#(fv_class).(fv_repos).("retDefAddrType") = (fv_class).(fv_repos).("addrTypeDesc"+FORMAT$(lv_x,"%d"))
				(fv_class).(fv_repos).("retDefAddrType") = "Mailing"
				lv_z = 1
			#}
			ENDIF
		#}
		ELSE
		#{
			IF(lv_z == 0) THEN
			#{
				lv_f = (fv_class).(fv_repos).("addrTypeDesc"+FORMAT$(lv_x,"%d"))	
				print(lv_f)
				IF(lv_f == "Mailling")THEN
				#{
					(fv_class).(fv_repos).("addrTypeDesc"+FORMAT$(lv_x,"%d")) = "Mailing"
				#}
				ENDIF
				#(fv_class).(fv_repos).("defAddrType") = (fv_class).(fv_repos).("addrTypeDesc"+FORMAT$(lv_x,"%d"))
				#(fv_class).(fv_repos).("defAddrType") = "Registered"	
				(fv_class).(fv_repos).("defAddrType") = "COMUNICATION"
				lv_z = 1
			#}
			ENDIF
		#}
		ENDIF

		
		
		lv_x = lv_x + 1
	#}
	DO
	
	#=====================================================
	# Parsing Document List
	#=====================================================
	lv_a = func_getCountOfCharB((fv_class).(fv_repos).("docList"), "<doc>" , BYREF (fv_class).(fv_repos).("docCount"))
	#print((fv_class).(fv_repos).("docCount"))
	WHILE (lv_y <= CINT((fv_class).(fv_repos).("docCount")))
	#{
		(fv_class).(fv_repos).("docDetails"+FORMAT$(lv_y,"%d")) = func_getNthFieldFromStringB((fv_class).(fv_repos).("docList"), "<doc>", lv_y + 1)
		#print((fv_class).(fv_repos).("docDetails"+FORMAT$(lv_y,"%d")))
		
		lv_e = func_xmlParseFunc((fv_class).(fv_repos).("docDetails"+FORMAT$(lv_y,"%d")),"<docTypeCode>","</docTypeCode>",BYREF (fv_class).(fv_repos).("docTypeCode"+FORMAT$(lv_y,"%d")))
		lv_e = func_xmlParseFunc((fv_class).(fv_repos).("docDetails"+FORMAT$(lv_y,"%d")),"<docTypeDesc>","</docTypeDesc>",BYREF (fv_class).(fv_repos).("docTypeDesc"+FORMAT$(lv_y,"%d")))
		lv_e = func_xmlParseFunc((fv_class).(fv_repos).("docDetails"+FORMAT$(lv_y,"%d")),"<issueDate>","</issueDate>",BYREF (fv_class).(fv_repos).("issueDate"+FORMAT$(lv_y,"%d")))
		lv_e = func_xmlParseFunc((fv_class).(fv_repos).("docDetails"+FORMAT$(lv_y,"%d")),"<issueCountry>","</issueCountry>",BYREF (fv_class).(fv_repos).("issueCountry"+FORMAT$(lv_y,"%d")))
		lv_e = func_xmlParseFunc((fv_class).(fv_repos).("docDetails"+FORMAT$(lv_y,"%d")),"<expireDate>","</expireDate>",BYREF (fv_class).(fv_repos).("expiryDate"+FORMAT$(lv_y,"%d")))
		lv_e = func_xmlParseFunc((fv_class).(fv_repos).("docDetails"+FORMAT$(lv_y,"%d")),"<uniqueID>","</uniqueID>",BYREF (fv_class).(fv_repos).("uniqueID"+FORMAT$(lv_y,"%d")))
		print((fv_class).(fv_repos).("docTypeCode"+FORMAT$(lv_y,"%d")))
		print((fv_class).(fv_repos).("docTypeDesc"+FORMAT$(lv_y,"%d")))
		print((fv_class).(fv_repos).("issueDate"+FORMAT$(lv_y,"%d")))

		IF(TRIM((fv_class).(fv_repos).("birthDate")) == "") THEN
                #{
                        (fv_class).(fv_repos).("birthDate") = "1900-01-01T00:00:00.000"
                #}
                ELSE
                #{
                        (fv_class).(fv_repos).("birthDate") = (fv_class).(fv_repos).("birthDate") + "T00:00:00.000"
                #}
                ENDIF

		IF(TRIM((fv_class).(fv_repos).("issueDate"+FORMAT$(lv_y,"%d"))) == "")THEN
		#{
			IF(TOUPPER((fv_class).(fv_repos).("custType")) == "CORPORATE") THEN
 			#{
				(fv_class).(fv_repos).("issueDate"+FORMAT$(lv_y,"%d")) = (fv_class).(fv_repos).("incorpDate")
 			#}
			ELSE
			#{
				(fv_class).(fv_repos).("issueDate"+FORMAT$(lv_y,"%d")) = (fv_class).(fv_repos).("birthDate")
			#}
 			ENDIF
		#}
		ELSE
		#{
			(fv_class).(fv_repos).("issueDate"+FORMAT$(lv_y,"%d")) = (fv_class).(fv_repos).("issueDate"+FORMAT$(lv_y,"%d")) + "T00:00:00.000"
		#}
		ENDIF

		print((fv_class).(fv_repos).("issueDate"+FORMAT$(lv_y,"%d")))
		print((fv_class).(fv_repos).("issueCountry"+FORMAT$(lv_y,"%d")))
		print((fv_class).(fv_repos).("expiryDate"+FORMAT$(lv_y,"%d")))
		IF(TRIM((fv_class).(fv_repos).("expiryDate"+FORMAT$(lv_y,"%d"))) == "")THEN
		#{
			(fv_class).(fv_repos).("expiryDate"+FORMAT$(lv_y,"%d")) = "2099-12-31"
		#}
		ENDIF
		print((fv_class).(fv_repos).("uniqueID"+FORMAT$(lv_y,"%d")))
		
		(fv_class).(fv_repos).("expiryDate"+FORMAT$(lv_y,"%d")) = (fv_class).(fv_repos).("expiryDate"+FORMAT$(lv_y,"%d")) + "T00:00:00.000"
		print((fv_class).(fv_repos).("expiryDate"+FORMAT$(lv_y,"%d")))	
		
		lv_y = lv_y + 1
	#}
	DO
#}
ENDSUB

SUB createCIFAdd(fv_class,fv_repos)
#{
	#=====================================================
	# Request Service Id
	#=====================================================
	BANCS.INPARAM.srvReqId = (fv_class).(fv_repos).("srvReqId")
	CALLSCRIPTIFEXIST("cif_common_business_XMLHeader.scr")
	#print((fv_class).(fv_repos).("XMLHeader"))
	
	lv_m = 1
	lv_n = 1
	lv_o = 1
	
	lv_a = "<Body>"
	#=====================================================
	# Request XML for Adding Retail CIF
	#=====================================================
	(fv_class).(fv_repos).("prefFormat")	= "FREE_TEXT_FORMAT"
	#Default
	#(fv_class).(fv_repos).("startDate")	= "2010-01-01T00:00:00.000" 
	IF(TOUPPER((fv_class).(fv_repos).("custType")) == "CORPORATE") THEN
        #{
        	(fv_class).(fv_repos).("startDate") = (fv_class).(fv_repos).("incorpDate")
        #}
        ELSE
        #{
                (fv_class).(fv_repos).("startDate") = (fv_class).(fv_repos).("birthDate")
        #}
        ENDIF
	(fv_class).(fv_repos).("freeTxtLabel")	= "FREETEXTLABEL1"
	(fv_class).(fv_repos).("addrHoldMail")	= "N"
	
	IF(TOUPPER((fv_class).(fv_repos).("custType")) == "RETAIL") THEN
	#{
		#(fv_class).(fv_repos).("birthDate")	= "1990-09-24T00:00:00.000"
		(fv_class).(fv_repos).("empntStatus")	= "Employed"
		(fv_class).(fv_repos).("relOpnDate")	= "2007-02-01T00:00:00.000"
		(fv_class).(fv_repos).("retSubSgmnt")	= "SUB CLASS A"
		(fv_class).(fv_repos).("taxDeductTbl")	= "TDSIN"
		(fv_class).(fv_repos).("natLangCode")	= "INFENG"
		(fv_class).(fv_repos).("segClass")	= "CLASS A"
		(fv_class).(fv_repos).("createdSysId") 	= "COR"
		(fv_class).(fv_repos).("isMinor")	= "N"
		(fv_class).(fv_repos).("custLang")	= "USA (English)"
		#(fv_class).(fv_repos).("occupation")	= "C"
		(fv_class).(fv_repos).("prmSolId")	= "792"
		#(fv_class).(fv_repos).("prmSolId")	= BANCS.STDIN.homeSolId 
		print((fv_class).(fv_repos).("prmSolId"))
		(fv_class).(fv_repos).("birthDt")	= MID$((fv_class).(fv_repos).("birthDate"),8,2)
		(fv_class).(fv_repos).("birthMonth")	= MID$((fv_class).(fv_repos).("birthDate"),5,2)
		(fv_class).(fv_repos).("birthYear")	= MID$((fv_class).(fv_repos).("birthDate"),0,4)
		#(fv_class).(fv_repos).("psychoText10")	= "USD"
		#(fv_class).(fv_repos).("psychoType")	= "Currency"
		(fv_class).(fv_repos).("prefLocale")	= "en_US"
		(fv_class).(fv_repos).("shortName")	= TRIM(MID$((fv_class).(fv_repos).("firstNameEn"),0,10))
		(fv_class).(fv_repos).("eBankAllow")	= "N"
		#(fv_class).(fv_repos).("nationality")	= "INDIAN"
		#(fv_class).(fv_repos).("martialStCode")	= "UNMAR"
		(fv_class).(fv_repos).("staffIndCode")	= "N"
		#(fv_class).(fv_repos).("nonResInd")	= "N"
		(fv_class).(fv_repos).("region")	= "South"
		#(fv_class).(fv_repos).("primaryRM")	= "UBSADMIN"
		IF(TRIM((fv_class).(fv_repos).("lastNameEn")) == "")THEN
		#{
			(fv_class).(fv_repos).("lastNameEn")    = (fv_class).(fv_repos).("firstNameEn")
		#}
		ENDIF
		print((fv_class).(fv_repos).("lastNameEn"))
		
		lv_a = lv_a + "<RetCustAddRequest>"
		lv_a = lv_a + "<RetCustAddRq>"
		lv_a = lv_a + "<CustDtls>"
		lv_a = lv_a + "<CustData>"
		lv_a = lv_a + "<CustId>"+(fv_class).(fv_repos).("slCifId")+"</CustId>"
		lv_a = lv_a + "<CustClass>"+(fv_class).(fv_repos).("custClassCode")+"</CustClass>"
		lv_a = lv_a + "<Salutation>"+(fv_class).(fv_repos).("titleEn")+"</Salutation>"
		lv_a = lv_a + "<FirstName>"+(fv_class).(fv_repos).("firstNameEn")+"</FirstName>"
		lv_a = lv_a + "<LastName>"+(fv_class).(fv_repos).("lastNameEn")+"</LastName>"
		#Commenting for testing
		#lv_a = lv_a + "<NativeLanguageTitle>"+(fv_class).(fv_repos).("title")+"</NativeLanguageTitle>"
		lv_a = lv_a + "<ShortName>"+(fv_class).(fv_repos).("shortName")+"</ShortName>"
		lv_a = lv_a + "<NickName>"+(fv_class).(fv_repos).("shortName")+"</NickName>"
		lv_a = lv_a + "<Gender>"+(fv_class).(fv_repos).("gender")+"</Gender>"
		lv_a = lv_a + "<DateOfBirth>"+(fv_class).(fv_repos).("birthDate")+"</DateOfBirth>"
		lv_a = lv_a + "<IsCustNRE>"+(fv_class).(fv_repos).("nonResInd")+"</IsCustNRE>"
		IF((fv_class).(fv_repos).("nonResInd") == "Y")THEN
		#{
			lv_a = lv_a + "<NREBecomingDt>"+(fv_class).(fv_repos).("birthDate")+"</NREBecomingDt>"
		#}
		ENDIF
		lv_a = lv_a + "<StaffFlag>"+(fv_class).(fv_repos).("staffIndCode")+"</StaffFlag>"
		IF((fv_class).(fv_repos).("staffIndCode") == "Y") THEN
		#{
			lv_a = lv_a + "<StaffEmployeeId>"+(fv_class).(fv_repos).("staffIndDesc")+"</StaffEmployeeId>"
		#}
		ENDIF
		lv_a = lv_a + "<TradeFinFlag>"+(fv_class).(fv_repos).("tradeCustFlag")+"</TradeFinFlag>"
		lv_a = lv_a + "<Manager>"+(fv_class).(fv_repos).("primaryRM")+"</Manager>" 
		#=====================================================
		# Additional Mandatory Fields
		lv_a = lv_a + "<RelationshipOpeningDt>"+(fv_class).(fv_repos).("relOpnDate")+"</RelationshipOpeningDt>"
		lv_a = lv_a + "<SubSegment>"+(fv_class).(fv_repos).("retSubSgmnt")+"</SubSegment>"
		lv_a = lv_a + "<TaxDeductionTable>"+(fv_class).(fv_repos).("taxDeductTbl")+"</TaxDeductionTable>"
		lv_a = lv_a + "<DefaultAddrType>"+(fv_class).(fv_repos).("retDefAddrType")+"</DefaultAddrType>"
		lv_a = lv_a + "<NativeLanguageCode>"+(fv_class).(fv_repos).("natLangCode")+"</NativeLanguageCode>"
		lv_a = lv_a + "<SegmentationClass>"+(fv_class).(fv_repos).("segClass")+"</SegmentationClass>"
		lv_a = lv_a + "<createdBySystemID>"+(fv_class).(fv_repos).("createdSysId")+"</createdBySystemID>"
		lv_a = lv_a + "<IsMinor>"+(fv_class).(fv_repos).("isMinor")+"</IsMinor>"
		lv_a = lv_a + "<Language>"+(fv_class).(fv_repos).("custLang")+"</Language>"
		#lv_a = lv_a + "<Occupation>"+(fv_class).(fv_repos).("occupation")+"</Occupation>"
		lv_a = lv_a + "<PrimarySolId>"+(fv_class).(fv_repos).("prmSolId")+"</PrimarySolId>"
		lv_a = lv_a + "<BirthDt>"+(fv_class).(fv_repos).("birthDt")+"</BirthDt>"
		lv_a = lv_a + "<BirthMonth>"+(fv_class).(fv_repos).("birthMonth")+"</BirthMonth>"
		lv_a = lv_a + "<BirthYear>"+(fv_class).(fv_repos).("birthYear")+"</BirthYear>" 
		lv_a = lv_a + "<Region>"+(fv_class).(fv_repos).("region")+"</Region>"
		#lv_a = lv_a + "<PrefName>"+(fv_class).(fv_repos).("shortName")+"</PrefName>"
		lv_a = lv_a + "<PrefName>"+(fv_class).(fv_repos).("firstNameEn")+" "+(fv_class).(fv_repos).("lastNameEn")+"</PrefName>"
		lv_a = lv_a + "<IsEbankingEnabled>"+(fv_class).(fv_repos).("eBankAllow")+"</IsEbankingEnabled>" 
		#=====================================================
		#=====================================================
		# Retail CIF multirec phone/email request
		#=====================================================
		#(fv_class).(fv_repos).("phoneCount") = "1"
		(fv_class).(fv_repos).("phonePrefFlag") = "Y"
		print(lv_m)
		print((fv_class).(fv_repos).("phoneCount"))
		lv_h = CINT((fv_class).(fv_repos).("phoneCount"))
		print(lv_h)

		#Fix of batch phone number issue
		IF(lv_h < 3)THEN
		#{
			(fv_class).(fv_repos).("phoneCount") = "3"
		#}
		ENDIF
		print((fv_class).(fv_repos).("phoneCount"))
	
		WHILE(lv_m <= CINT((fv_class).(fv_repos).("phoneCount")))
		#{
			IF(FIELDEXISTS((fv_class).(fv_repos).("phoneNumber"+FORMAT$(lv_m,"%d")))==1)THEN
			#{
				print((fv_class).(fv_repos).("phoneNumber"+FORMAT$(lv_m,"%d")))
				IF(TRIM((fv_class).(fv_repos).("phoneNumber"+FORMAT$(lv_m,"%d"))) != "")THEN
				#{
					#(fv_class).(fv_repos).("phoneType"+FORMAT$(lv_m,"%d"))		= "HOMEPH1"
			
					lv_a = lv_a + "<PhoneEmailDtls>"
					lv_a = lv_a + "<PhoneEmailType>"+TOUPPER((fv_class).(fv_repos).("phoneType"+FORMAT$(lv_m,"%d")))+"</PhoneEmailType>"
					lv_a = lv_a + "<PhoneNum>"+(fv_class).(fv_repos).("phoneNumber"+FORMAT$(lv_m,"%d"))+"</PhoneNum>"
					lv_a = lv_a + "<PhoneNumCountryCode>"+(fv_class).(fv_repos).("phoneCntyCode"+FORMAT$(lv_m,"%d"))+"</PhoneNumCountryCode>"
					lv_a = lv_a + "<PhoneOrEmail>PHONE</PhoneOrEmail>"
					lv_a = lv_a + "<PhoneNumLocalCode>"+(fv_class).(fv_repos).("phoneNumber"+FORMAT$(lv_m,"%d"))+"</PhoneNumLocalCode>"
					lv_a = lv_a + "<PrefFlag>"+(fv_class).(fv_repos).("phonePrefFlag")+"</PrefFlag>" 
					lv_a = lv_a + "</PhoneEmailDtls>"
					(fv_class).(fv_repos).("phonePrefFlag")	= "N"
				#}
				ENDIF
			#}
			ENDIF
			lv_m = lv_m + 1
		#}
		DO
		#=====================================================
		# Retail CIF multirec address request
		#=====================================================
		#(fv_class).(fv_repos).("addrCount") = "1"
		(fv_class).(fv_repos).("prefFlag") = "N"
		(fv_class).(fv_repos).("isMailingAvail") = "N"
		lv_l = CINT((fv_class).(fv_repos).("addrCount"))
		WHILE(lv_n <= CINT((fv_class).(fv_repos).("addrCount")))
		#{
			IF((fv_class).(fv_repos).("addrTypeDesc"+FORMAT$(lv_n,"%d")) == "Mailing")THEN
			#{
				(fv_class).(fv_repos).("isMailingAvail") = "Y"
			#}
			ENDIF

			IF((fv_class).(fv_repos).("addrTypeDesc"+FORMAT$(lv_n,"%d")) == "Communication")THEN
			#{
				(fv_class).(fv_repos).("addrTypeDesc"+FORMAT$(lv_n,"%d")) = "COMUNICATION"
				(fv_class).(fv_repos).("prefFlag") = "Y"				
			#}
			ENDIF
			
			lv_a = lv_a + "<AddrDtls>"
			lv_a = lv_a + "<AddrCategory>"+(fv_class).(fv_repos).("addrTypeDesc"+FORMAT$(lv_n,"%d"))+"</AddrCategory>"
			lv_a = lv_a + "<AddrLine1>"+(fv_class).(fv_repos).("addrLine1"+FORMAT$(lv_n,"%d"))+"</AddrLine1>"
			lv_a = lv_a + "<AddrLine2>"+(fv_class).(fv_repos).("addrLine2"+FORMAT$(lv_n,"%d"))+"</AddrLine2>"
			lv_a = lv_a + "<AddrLine3>"+(fv_class).(fv_repos).("addrLine3"+FORMAT$(lv_n,"%d"))+"</AddrLine3>"
			#lv_a = lv_a + "<State>"+(fv_class).(fv_repos).("addrState"+FORMAT$(lv_n,"%d"))+"</State>"
			lv_a = lv_a + "<State>"+(fv_class).(fv_repos).("addrStateCode"+FORMAT$(lv_n,"%d"))+"</State>"
			lv_a = lv_a + "<Country>"+(fv_class).(fv_repos).("addrCountry"+FORMAT$(lv_n,"%d"))+"</Country>"
			lv_a = lv_a + "<PostalCode>"+(fv_class).(fv_repos).("addrZipCode"+FORMAT$(lv_n,"%d"))+"</PostalCode>"
			lv_a = lv_a + "<PrefAddr>"+(fv_class).(fv_repos).("prefFlag")+"</PrefAddr>"
			#=====================================================
			# Additional Mandatory Fields
			lv_a = lv_a + "<PrefFormat>"+(fv_class).(fv_repos).("prefFormat")+"</PrefFormat>"
			lv_a = lv_a + "<StartDt>"+(fv_class).(fv_repos).("startDate")+"</StartDt>"
			#lv_a = lv_a + "<City>"+(fv_class).(fv_repos).("addrState"+FORMAT$(lv_n,"%d"))+"</City>"
			lv_a = lv_a + "<City>"+(fv_class).(fv_repos).("addrStateCode"+FORMAT$(lv_n,"%d"))+"</City>"
			lv_a = lv_a + "<FreeTextLabel>"+(fv_class).(fv_repos).("freeTxtLabel")+"</FreeTextLabel>"
			lv_a = lv_a + "<HoldMailFlag>"+(fv_class).(fv_repos).("addrHoldMail")+"</HoldMailFlag>"
			#=====================================================
			lv_a = lv_a + "</AddrDtls>"
			(fv_class).(fv_repos).("prefFlag") = "N"
			lv_n = lv_n + 1
		#}
		DO

		print((fv_class).(fv_repos).("isMailingAvail"))
		IF((fv_class).(fv_repos).("isMailingAvail") == "N")THEN
		#{
		        print(lv_n)
                        lv_n = lv_n - 1
                        print(lv_n)

                        lv_a = lv_a + "<AddrDtls>"
                        lv_a = lv_a + "<AddrCategory>Mailing</AddrCategory>"
                        lv_a = lv_a + "<AddrLine1>"+(fv_class).(fv_repos).("addrLine1"+FORMAT$(lv_n,"%d"))+"</AddrLine1>"
                        lv_a = lv_a + "<AddrLine2>"+(fv_class).(fv_repos).("addrLine2"+FORMAT$(lv_n,"%d"))+"</AddrLine2>"
                        lv_a = lv_a + "<AddrLine3>"+(fv_class).(fv_repos).("addrLine3"+FORMAT$(lv_n,"%d"))+"</AddrLine3>"
                        #lv_a = lv_a + "<State>"+(fv_class).(fv_repos).("addrState"+FORMAT$(lv_n,"%d"))+"</State>"
			lv_a = lv_a + "<State>"+(fv_class).(fv_repos).("addrStateCode"+FORMAT$(lv_n,"%d"))+"</State>"
                        lv_a = lv_a + "<Country>"+(fv_class).(fv_repos).("addrCountry"+FORMAT$(lv_n,"%d"))+"</Country>"
                        lv_a = lv_a + "<PostalCode>"+(fv_class).(fv_repos).("addrZipCode"+FORMAT$(lv_n,"%d"))+"</PostalCode>"
                        lv_a = lv_a + "<PrefAddr>N</PrefAddr>"
                        lv_a = lv_a + "<PrefFormat>"+(fv_class).(fv_repos).("prefFormat")+"</PrefFormat>"
                        lv_a = lv_a + "<StartDt>"+(fv_class).(fv_repos).("startDate")+"</StartDt>"
                        #lv_a = lv_a + "<City>"+(fv_class).(fv_repos).("addrState"+FORMAT$(lv_n,"%d"))+"</City>"
			lv_a = lv_a + "<City>"+(fv_class).(fv_repos).("addrStateCode"+FORMAT$(lv_n,"%d"))+"</City>"
                        lv_a = lv_a + "<FreeTextLabel>"+(fv_class).(fv_repos).("freeTxtLabel")+"</FreeTextLabel>"
                        lv_a = lv_a + "<HoldMailFlag>"+(fv_class).(fv_repos).("addrHoldMail")+"</HoldMailFlag>"
                        lv_a = lv_a + "</AddrDtls>"

			lv_n = lv_n + 1	
			print(lv_n)
		#}
		ENDIF
		#When customer is an NRI. One address should be of type NRERelative.
		#As SL doesnt have this address. using the address received as NRERelative address.
		IF((fv_class).(fv_repos).("nonResInd") == "Y")THEN
		#{
			print(lv_n)
			lv_n = lv_n - 1
			print(lv_n)

			lv_a = lv_a + "<AddrDtls>"
			lv_a = lv_a + "<AddrCategory>NRERelative</AddrCategory>"
			lv_a = lv_a + "<AddrLine1>"+(fv_class).(fv_repos).("addrLine1"+FORMAT$(lv_n,"%d"))+"</AddrLine1>"
			lv_a = lv_a + "<AddrLine2>"+(fv_class).(fv_repos).("addrLine2"+FORMAT$(lv_n,"%d"))+"</AddrLine2>"
			lv_a = lv_a + "<AddrLine3>"+(fv_class).(fv_repos).("addrLine3"+FORMAT$(lv_n,"%d"))+"</AddrLine3>"
			#lv_a = lv_a + "<State>"+(fv_class).(fv_repos).("addrState"+FORMAT$(lv_n,"%d"))+"</State>"
			lv_a = lv_a + "<State>"+(fv_class).(fv_repos).("addrStateCode"+FORMAT$(lv_n,"%d"))+"</State>"	
			lv_a = lv_a + "<Country>"+(fv_class).(fv_repos).("addrCountry"+FORMAT$(lv_n,"%d"))+"</Country>"
			lv_a = lv_a + "<PostalCode>"+(fv_class).(fv_repos).("addrZipCode"+FORMAT$(lv_n,"%d"))+"</PostalCode>"
			lv_a = lv_a + "<PrefAddr>N</PrefAddr>"
			lv_a = lv_a + "<PrefFormat>"+(fv_class).(fv_repos).("prefFormat")+"</PrefFormat>"
			lv_a = lv_a + "<StartDt>"+(fv_class).(fv_repos).("startDate")+"</StartDt>"
			#lv_a = lv_a + "<City>"+(fv_class).(fv_repos).("addrState"+FORMAT$(lv_n,"%d"))+"</City>"
			lv_a = lv_a + "<City>"+(fv_class).(fv_repos).("addrStateCode"+FORMAT$(lv_n,"%d"))+"</City>"
			lv_a = lv_a + "<FreeTextLabel>"+(fv_class).(fv_repos).("freeTxtLabel")+"</FreeTextLabel>"
			lv_a = lv_a + "<HoldMailFlag>"+(fv_class).(fv_repos).("addrHoldMail")+"</HoldMailFlag>"
			lv_a = lv_a + "</AddrDtls>"
		#}	
		ENDIF	

		lv_a = lv_a + "</CustData>"
		lv_a = lv_a + "</CustDtls>"
		lv_a = lv_a + "<RelatedDtls>"
		lv_a = lv_a + "<DemographicData>"
		lv_a = lv_a + "<Nationality>"+(fv_class).(fv_repos).("nationality")+"</Nationality>"
		lv_a = lv_a + "<MaritalStatus>"+(fv_class).(fv_repos).("martialStCode")+"</MaritalStatus>"
		lv_a = lv_a + "<HoldMailFlag>"+(fv_class).(fv_repos).("holdMailInd")+"</HoldMailFlag>"
		#=====================================================
		# Additional Mandatory Fields
		lv_a = lv_a + "<EmploymentStatus>"+(fv_class).(fv_repos).("empntStatus")+"</EmploymentStatus>"
		#=====================================================
		lv_a = lv_a + "</DemographicData>"
		#=====================================================
		# Retail CIF multirec document request
		#=====================================================
		#(fv_class).(fv_repos).("docCount") = "1"
		WHILE(lv_o <= CINT((fv_class).(fv_repos).("docCount")))
		#{
			(fv_class).(fv_repos).("docRefNumber")				= (fv_class).(fv_repos).("uniqueID"+FORMAT$(lv_o,"%d"))
			(fv_class).(fv_repos).("docCode") 				= (fv_class).(fv_repos).("docTypeCode"+FORMAT$(lv_o,"%d"))	
			(fv_class).(fv_repos).("docTypeCode"+FORMAT$(lv_o,"%d"))        = TOUPPER((fv_class).(fv_repos).("custType"))
			(fv_class).(fv_repos).("issuedOrg")				= "Ministry of Home"
			IF(lv_o == 1)THEN
			#{
				(fv_class).(fv_repos).("uniqueID"+FORMAT$(lv_o,"%d"))	= "Y"
			#}
			ELSE
			#{
				(fv_class).(fv_repos).("uniqueID"+FORMAT$(lv_o,"%d"))   = "N"
			#}
			ENDIF
			(fv_class).(fv_repos).("placeOfIssue")				= "010"
			
			lv_a = lv_a + "<EntityDoctData>"
			lv_a = lv_a + "<ReferenceNum>"+(fv_class).(fv_repos).("docRefNumber")+"</ReferenceNum>"
			lv_a = lv_a + "<TypeCode>"+(fv_class).(fv_repos).("docTypeCode"+FORMAT$(lv_o,"%d"))+"</TypeCode>"
			lv_a = lv_a + "<DocCode>"+(fv_class).(fv_repos).("docCode")+"</DocCode>"
			lv_a = lv_a + "<IssueDt>"+(fv_class).(fv_repos).("issueDate"+FORMAT$(lv_o,"%d"))+"</IssueDt>"
			lv_a = lv_a + "<IDIssuedOrganisation>"+(fv_class).(fv_repos).("issuedOrg")+"</IDIssuedOrganisation>"
			lv_a = lv_a + "<preferredUniqueId>"+(fv_class).(fv_repos).("uniqueID"+FORMAT$(lv_o,"%d"))+"</preferredUniqueId>"
			lv_a = lv_a + "<CountryOfIssue>"+(fv_class).(fv_repos).("issueCountry"+FORMAT$(lv_o,"%d"))+"</CountryOfIssue>"
			lv_a = lv_a + "<PlaceOfIssue>"+(fv_class).(fv_repos).("placeOfIssue")+"</PlaceOfIssue>"
			IF(TRIM((fv_class).(fv_repos).("expiryDate"+FORMAT$(lv_o,"%d"))) == "")THEN
			#{
				(fv_class).(fv_repos).("expiryDate"+FORMAT$(lv_o,"%d")) = "2099-12-31T00:00:00.000"
			#}
			ENDIF
			IF((fv_class).(fv_repos).("docCode") != "IC")THEN
			#{
				lv_a = lv_a + "<ExpDt>"+(fv_class).(fv_repos).("expiryDate"+FORMAT$(lv_o,"%d"))+"</ExpDt>"
			#}
			ENDIF
			lv_a = lv_a + "</EntityDoctData>"
			(fv_class).(fv_repos).("uniqueID"+FORMAT$(lv_o,"%d")) = "N"
			lv_o = lv_o + 1
		#}
		DO
		#=====================================================
		# Additional Mandatory Fields
		lv_a = lv_a + "<PsychographicData>"
		lv_a = lv_a + "<preferred_Locale>"+(fv_class).(fv_repos).("prefLocale")+"</preferred_Locale>"

		BANCS.INPARAM.BINDVARS = BANCS.STDIN.contextBankId
		lv_g = "defCurrency|SELECT DISTINCT VALUE FROM CRMUSER.CATEGORIES c, CRMUSER.CATEGORY_LANG l"
		lv_g = lv_g + " WHERE c.CATEGORYID = l.CATEGORYID"
		lv_g = lv_g + " and c.CATEGORYTYPE = 'CURRENCY'"
		lv_g = lv_g + " and c.BANK_ID = l.BANK_ID"
		lv_g = lv_g + " and c.BANK_ID = ?SVAR"
		lv_e = urhk_dbCursorOpenWithBind(lv_g)
		IF(lv_e != 0) THEN
		#{
			lv_a = lv_a + "<PsychographMiscData>"
			lv_a = lv_a + "<StrText10>USD</StrText10>"
			lv_a = lv_a + "<Type>CURRENCY</Type>"
			lv_a = lv_a + "</PsychographMiscData>"
		#}
		ELSE
		#{
			lv_x = BANCS.OUTPARAM.DB_CURSOR_NUMBER
			print(lv_x)
			lv_y = urhk_dbCursorFetch(lv_x)
			while (lv_y == 0) 
			#{
				sub_copyOutparamFieldB("defCurrency",(fv_class),(fv_repos),"defCurrency","")
				
				lv_a = lv_a + "<PsychographMiscData>"
				lv_a = lv_a + "<StrText10>"+(fv_class).(fv_repos).("defCurrency")+"</StrText10>"
				lv_a = lv_a + "<Type>CURRENCY</Type>"
				lv_a = lv_a + "</PsychographMiscData>"
				
				lv_y = urhk_dbCursorFetch(lv_x)
			#}
			DO
			lv_e = urhk_dbCursorClose(lv_x)
		#}
		ENDIF
		lv_a = lv_a + "</PsychographicData>"
		IF((fv_class).(fv_repos).("tradeCustFlag") == "Y") THEN
		#{
			lv_a = lv_a + "<TradeFinData>"
			lv_a = lv_a + "<InlandTradeAllowed>Y</InlandTradeAllowed>"
			lv_a = lv_a + "<CustNative>N</CustNative>"
			lv_a = lv_a + "</TradeFinData>"
		#}
		ENDIF
		#=====================================================
		lv_a = lv_a + "</RelatedDtls>"
		lv_a = lv_a + "</RetCustAddRq>"
		lv_a = lv_a + "</RetCustAddRequest>"
	#}
	ELSE
	#{
		(fv_class).(fv_repos).("createdSysId") 	= "COR"
		(fv_class).(fv_repos).("crncyCode")	= "USD"
		(fv_class).(fv_repos).("custHlth")	= "999"
		#(fv_class).(fv_repos).("relCrBy")	= BANCS.STDIN.userId
		(fv_class).(fv_repos).("corpSubSgmnt")	= "SUB CLASS A"
		(fv_class).(fv_repos).("corpSgmnt")	= "CLASS A"
		(fv_class).(fv_repos).("priority")	= "Low"
		(fv_class).(fv_repos).("corpShortName")	= TRIM(MID$((fv_class).(fv_repos).("otherName"),0,10))
		(fv_class).(fv_repos).("corpEntyType")	= "Customer"
		(fv_class).(fv_repos).("langDesc")	= "USA (English)"
		#(fv_class).(fv_repos).("issueCntry")	= "TH"
		(fv_class).(fv_repos).("eBankingAllow")	= "N"
		(fv_class).(fv_repos).("keyContName")	= "AAA"
		(fv_class).(fv_repos).("corpRemarks")	= "REMARKS1"
		(fv_class).(fv_repos).("notes")		= "Notes1"
		(fv_class).(fv_repos).("cntryPOper")	= "TH"
		#(fv_class).(fv_repos).("regNumber")	= "12345"
		(fv_class).(fv_repos).("relType")	= "New"
		(fv_class).(fv_repos).("taxId")	= ""
		(fv_class).(fv_repos).("entityClass")	= "GOLD"
		(fv_class).(fv_repos).("avgAnIncome")	= "0"
		(fv_class).(fv_repos).("sourceOfFund")	= "SELF"
		(fv_class).(fv_repos).("prefAmount1")	= "0"
		(fv_class).(fv_repos).("prefDate1")	= "2099-12-31T00:00:00.000"
		(fv_class).(fv_repos).("region")	= "South"
		
		(fv_class).(fv_repos).("incorpCountry")	= "TH"
		#(fv_class).(fv_repos).("corpSgmnt")	= "50032000"
		#(fv_class).(fv_repos).("bussTypeCode")	= "NEW"
		(fv_class).(fv_repos).("branchNum")	= "792"
		#(fv_class).(fv_repos).("prefLang")	= "ENGLISH"
		#(fv_class).(fv_repos).("primaryRM")	= "UBSADMIN"
		(fv_class).(fv_repos).("relCrBy")	= "UBSADMIN"
		#(fv_class).(fv_repos).("defAddrType")   = "Registered"

		#=====================================================
		#Logic to derive tax id
		#=====================================================
		lv_s = 1
		(fv_class).(fv_repos).("taxIdAlreadyAvail") = "N"

		WHILE (lv_s <= CINT((fv_class).(fv_repos).("docCount")))
		#{
			(fv_class).(fv_repos).("docTypeCode") = (fv_class).(fv_repos).("docTypeCode"+FORMAT$(lv_s,"%d"))

			IF((fv_class).(fv_repos).("taxIdAlreadyAvail") == "N")THEN
			#{
				IF((fv_class).(fv_repos).("docTypeCode") == "CR")THEN
				#{
					(fv_class).(fv_repos).("taxId") = (fv_class).(fv_repos).("uniqueID"+FORMAT$(lv_s,"%d"))
					(fv_class).(fv_repos).("regNumber") = (fv_class).(fv_repos).("uniqueID"+FORMAT$(lv_s,"%d"))
					(fv_class).(fv_repos).("taxIdAlreadyAvail") = "Y"
				#}
				ELSE
				#{
					IF((fv_class).(fv_repos).("docTypeCode") == "TI")THEN
					#{
						(fv_class).(fv_repos).("taxId") = (fv_class).(fv_repos).("uniqueID"+FORMAT$(lv_s,"%d"))
						(fv_class).(fv_repos).("regNumber") = (fv_class).(fv_repos).("uniqueID"+FORMAT$(lv_s,"%d"))
						(fv_class).(fv_repos).("taxIdAlreadyAvail") = "Y"
					#}
					ELSE
					#{
						IF((fv_class).(fv_repos).("docTypeCode") == "OJ")THEN
						#{
							(fv_class).(fv_repos).("taxId") = (fv_class).(fv_repos).("uniqueID"+FORMAT$(lv_s,"%d"))
							(fv_class).(fv_repos).("regNumber") = (fv_class).(fv_repos).("uniqueID"+FORMAT$(lv_s,"%d"))
							(fv_class).(fv_repos).("taxIdAlreadyAvail") = "Y"
						#}
						ELSE
						#{
							IF((fv_class).(fv_repos).("docTypeCode") == "OJ")THEN
							#{
								(fv_class).(fv_repos).("taxId") = (fv_class).(fv_repos).("uniqueID"+FORMAT$(lv_s,"%d"))
								(fv_class).(fv_repos).("regNumber") = (fv_class).(fv_repos).("uniqueID"+FORMAT$(lv_s,"%d"))
								(fv_class).(fv_repos).("taxIdAlreadyAvail") = "Y"
							#}
							ELSE
							#{
								IF((fv_class).(fv_repos).("docTypeCode") == "FI")THEN
								#{
									(fv_class).(fv_repos).("taxId") = (fv_class).(fv_repos).("uniqueID"+FORMAT$(lv_s,"%d"))
									(fv_class).(fv_repos).("regNumber") = (fv_class).(fv_repos).("uniqueID"+FORMAT$(lv_s,"%d"))
									(fv_class).(fv_repos).("taxIdAlreadyAvail") = "Y"
								#}
								ELSE
								#{
									IF((fv_class).(fv_repos).("docTypeCode") == "JR")THEN
									#{
										(fv_class).(fv_repos).("taxId") = (fv_class).(fv_repos).("uniqueID"+FORMAT$(lv_s,"%d"))
										(fv_class).(fv_repos).("regNumber") = (fv_class).(fv_repos).("uniqueID"+FORMAT$(lv_s,"%d"))
										(fv_class).(fv_repos).("taxIdAlreadyAvail") = "Y"
									#}
									ELSE
									#{
										IF((fv_class).(fv_repos).("docTypeCode") == "IO")THEN
										#{
											(fv_class).(fv_repos).("taxId") = (fv_class).(fv_repos).("uniqueID"+FORMAT$(lv_s,"%d"))
											(fv_class).(fv_repos).("regNumber") = (fv_class).(fv_repos).("uniqueID"+FORMAT$(lv_s,"%d"))
											(fv_class).(fv_repos).("taxIdAlreadyAvail") = "Y"
										#}
										ELSE
										#{
											IF((fv_class).(fv_repos).("docTypeCode") == "GO")THEN
											#{
												(fv_class).(fv_repos).("taxId") = (fv_class).(fv_repos).("uniqueID"+FORMAT$(lv_s,"%d"))
												(fv_class).(fv_repos).("regNumber") = (fv_class).(fv_repos).("uniqueID"+FORMAT$(lv_s,"%d"))
												(fv_class).(fv_repos).("taxIdAlreadyAvail") = "Y"
											#}
											ELSE
											#{
												IF((fv_class).(fv_repos).("docTypeCode") == "SW")THEN
												#{
													(fv_class).(fv_repos).("taxId") = (fv_class).(fv_repos).("uniqueID"+FORMAT$(lv_s,"%d"))
													(fv_class).(fv_repos).("regNumber") = (fv_class).(fv_repos).("uniqueID"+FORMAT$(lv_s,"%d"))
													(fv_class).(fv_repos).("taxIdAlreadyAvail") = "Y"
												#}
												ELSE
												#{
													(fv_class).(fv_repos).("taxId") = "11111"
													(fv_class).(fv_repos).("regNumber") = "11111"
												#}
												ENDIF
											#}
											ENDIF
										#}
										ENDIF
									#}
									ENDIF
								#}
								ENDIF
							#}
							ENDIF
						#}
						ENDIF
					#}
					ENDIF
				#}
				ENDIF
			#}
			ENDIF
			lv_s = lv_s + 1
		#}
		DO


		#=====================================================
		# Request XML for Adding Corporate CIF
		#=====================================================
		lv_a = lv_a + "<createCorporateCustomerRequest>"
		lv_a = lv_a + "<CorpCustDetails>"
		lv_a = lv_a + "<corpCustomerDtlsData>"
		lv_a = lv_a + "<corpCustomerData>"
		lv_a = lv_a + "<corp_key>"+(fv_class).(fv_repos).("slCifId")+"</corp_key>"
		lv_a = lv_a + "<legalentity_type>"+(fv_class).(fv_repos).("custClassCode")+"</legalentity_type>"
		#lv_a = lv_a + "<corporate_name>"+(fv_class).(fv_repos).("corpName")+"</corporate_name>"
		IF(TRIM((fv_class).(fv_repos).("aliasName")) != "")THEN
		#{
			lv_a = lv_a + "<corporate_name>"+(fv_class).(fv_repos).("aliasName")+"</corporate_name>"		
		#}
		ELSE
		#{
			lv_a = lv_a + "<corporate_name>"+(fv_class).(fv_repos).("corpName")+"</corporate_name>"
		#}
		ENDIF
		#lv_a = lv_a + "<corporatename_native>"+(fv_class).(fv_repos).("otherName")+"</corporatename_native>"
		lv_a = lv_a + "<business_type>"+(fv_class).(fv_repos).("bussTypeCode")+"</business_type>"
		lv_a = lv_a + "<sector>"+(fv_class).(fv_repos).("sectorCode")+"</sector>"
		lv_a = lv_a + "<date_of_incorporation>"+(fv_class).(fv_repos).("incorpDate")+"</date_of_incorporation>"
		lv_a = lv_a + "<countryOfIncorporation>"+(fv_class).(fv_repos).("incorpCountry")+"</countryOfIncorporation>"
		lv_a = lv_a + "<nativeLangCode>"+(fv_class).(fv_repos).("prefLang")+"</nativeLangCode>"
		lv_a = lv_a + "<primary_service_center>"+(fv_class).(fv_repos).("branchNum")+"</primary_service_center>"
		lv_a = lv_a + "<primaryRM_ID>"+(fv_class).(fv_repos).("primaryRM")+"</primaryRM_ID>"
		#=====================================================
		# Additional Mandatory Fields
		lv_a = lv_a + "<createdBySystemID>"+(fv_class).(fv_repos).("createdSysId")+"</createdBySystemID>"
		lv_a = lv_a + "<crncy_Code>"+(fv_class).(fv_repos).("crncyCode")+"</crncy_Code>"
		lv_a = lv_a + "<cust_hlth>"+(fv_class).(fv_repos).("custHlth")+"</cust_hlth>"
		lv_a = lv_a + "<relationship_createdby>"+(fv_class).(fv_repos).("relCrBy")+"</relationship_createdby>"
		lv_a = lv_a + "<subsegment>"+(fv_class).(fv_repos).("corpSubSgmnt")+"</subsegment>"
		lv_a = lv_a + "<segment>"+(fv_class).(fv_repos).("corpSgmnt")+"</segment>"
		lv_a = lv_a + "<priority>"+(fv_class).(fv_repos).("priority")+"</priority>"
		lv_a = lv_a + "<short_name>"+(fv_class).(fv_repos).("corpShortName")+"</short_name>"
		lv_a = lv_a + "<entity_type>"+(fv_class).(fv_repos).("corpEntyType")+"</entity_type>"
		IF((fv_class).(fv_repos).("defAddrType") == "")THEN
		#{
			(fv_class).(fv_repos).("defAddrType") = "Registered"
		#}
		ENDIF
		lv_a = lv_a + "<defaultaddresstype>"+(fv_class).(fv_repos).("defAddrType")+"</defaultaddresstype>"
		lv_a = lv_a + "<lang_desc>"+(fv_class).(fv_repos).("langDesc")+"</lang_desc>"
		lv_a = lv_a + "<isEbankingEnabled>"+(fv_class).(fv_repos).("eBankingAllow")+"</isEbankingEnabled>"
		lv_a = lv_a + "<keycontact_personname>"+(fv_class).(fv_repos).("keyContName")+"</keycontact_personname>"
		lv_a = lv_a + "<remarks>"+(fv_class).(fv_repos).("corpRemarks")+"</remarks>"
		lv_a = lv_a + "<notes>"+(fv_class).(fv_repos).("notes")+"</notes>"
		lv_a = lv_a + "<principle_placeoperation>"+(fv_class).(fv_repos).("cntryPOper")+"</principle_placeoperation>"
		lv_a = lv_a + "<trade_services_availed>"+(fv_class).(fv_repos).("tradeCustFlag")+"</trade_services_availed>"
		lv_a = lv_a + "<registration_number>"+(fv_class).(fv_repos).("regNumber")+"</registration_number>"
		lv_a = lv_a + "<region>"+(fv_class).(fv_repos).("region")+"</region>"
		lv_a = lv_a + "<relationship_type>"+(fv_class).(fv_repos).("relType")+"</relationship_type>"
		lv_a = lv_a + "<subsector>"+(fv_class).(fv_repos).("sectorCode")+"</subsector>"
		lv_a = lv_a + "<taxid>"+(fv_class).(fv_repos).("taxId")+"</taxid>"
		lv_a = lv_a + "<entityclass>"+(fv_class).(fv_repos).("entityClass")+"</entityclass>"
		lv_a = lv_a + "<average_annualincome>"+(fv_class).(fv_repos).("avgAnIncome")+"</average_annualincome>"
		lv_a = lv_a + "<source_of_funds>"+(fv_class).(fv_repos).("sourceOfFund")+"</source_of_funds>"
		lv_a = lv_a + "<primaryRMLOGIN_ID>"+(fv_class).(fv_repos).("primaryRM")+"</primaryRMLOGIN_ID>" 
		#=====================================================
		#=====================================================
		# Corporate CIF multirec phone/email request
		#=====================================================
		#(fv_class).(fv_repos).("phoneCount") = "1"
		(fv_class).(fv_repos).("phonePrefFlag") = "Y"
		print(lv_m)
		print((fv_class).(fv_repos).("phoneCount"))
		
		WHILE(lv_m <= CINT((fv_class).(fv_repos).("phoneCount")))
		#{
			IF(TRIM((fv_class).(fv_repos).("phoneNumber"+FORMAT$(lv_m,"%d")))!="")THEN
			#{
				#(fv_class).(fv_repos).("phoneType"+FORMAT$(lv_m,"%d"))		= "HOMEPH1"
				#(fv_class).(fv_repos).("phoneCntyCode"+FORMAT$(lv_m,"%d"))	= "263"
			
				lv_a = lv_a + "<corpPhoneEmailData>"
				lv_a = lv_a + "<phoneemailtype>"+TOUPPER((fv_class).(fv_repos).("phoneType"+FORMAT$(lv_m,"%d")))+"</phoneemailtype>"
				lv_a = lv_a + "<phoneno>"+(fv_class).(fv_repos).("phoneNumber"+FORMAT$(lv_m,"%d"))+"</phoneno>"
				lv_a = lv_a + "<phonenocountrycode>"+(fv_class).(fv_repos).("phoneCntyCode"+FORMAT$(lv_m,"%d"))+"</phonenocountrycode>"
				lv_a = lv_a + "<phoneoremail>PHONE</phoneoremail>"
			
				lv_a = lv_a + "<preferredflag>"+(fv_class).(fv_repos).("phonePrefFlag")+"</preferredflag>"
				lv_a = lv_a + "<phonenolocalcode>"+(fv_class).(fv_repos).("phoneNumber"+FORMAT$(lv_m,"%d"))+"</phonenolocalcode>"
			
				lv_a = lv_a + "</corpPhoneEmailData>"
				(fv_class).(fv_repos).("phonePrefFlag") = "N"
			#}
			ENDIF
			lv_m = lv_m + 1
		#}
		DO
		IF(TRIM((fv_class).(fv_repos).("email")) != "") THEN
		#{
			(fv_class).(fv_repos).("emailType") = "WORK"
			
			lv_a = lv_a + "<corpPhoneEmailData>"
			lv_a = lv_a + "<phoneemailtype>"+(fv_class).(fv_repos).("emailType")+"</phoneemailtype>"
			lv_a = lv_a + "<email>"+(fv_class).(fv_repos).("email")+"</email>"
			lv_a = lv_a + "<phoneoremail>EMAIL</phoneoremail>"
			lv_a = lv_a + "<preferredflag>Y</preferredflag>"
			lv_a = lv_a + "</corpPhoneEmailData>"
		#}
		ENDIF
		#=====================================================
		# Corporate CIF multirec address request
		#=====================================================
		#(fv_class).(fv_repos).("addrCount") = "1"
		(fv_class).(fv_repos).("prefFlag") = "N"
		(fv_class).(fv_repos).("isRegisteredAvail") = "N"
		lv_l = CINT((fv_class).(fv_repos).("addrCount"))
		WHILE(lv_n <= CINT((fv_class).(fv_repos).("addrCount")))
		#{
			IF((fv_class).(fv_repos).("addrTypeDesc"+FORMAT$(lv_n,"%d")) == "Registered")THEN
			#{
				(fv_class).(fv_repos).("isRegisteredAvail") = "Y"
			#}
			ENDIF

			IF((fv_class).(fv_repos).("addrTypeDesc"+FORMAT$(lv_n,"%d")) == "Communication")THEN
			#{
				(fv_class).(fv_repos).("addrTypeDesc"+FORMAT$(lv_n,"%d")) = "COMUNICATION"
				(fv_class).(fv_repos).("prefFlag") = "Y"	
			#}
			ENDIF

			lv_a = lv_a + "<corpAddressData>"
			lv_a = lv_a + "<addresscategory>"+(fv_class).(fv_repos).("addrTypeDesc"+FORMAT$(lv_n,"%d"))+"</addresscategory>"
			lv_a = lv_a + "<address_line1>"+(fv_class).(fv_repos).("addrLine1"+FORMAT$(lv_n,"%d"))+"</address_line1>"
			lv_a = lv_a + "<address_line2>"+(fv_class).(fv_repos).("addrLine2"+FORMAT$(lv_n,"%d"))+"</address_line2>"
			lv_a = lv_a + "<address_line3>"+(fv_class).(fv_repos).("addrLine3"+FORMAT$(lv_n,"%d"))+"</address_line3>"
			#lv_a = lv_a + "<state>"+(fv_class).(fv_repos).("addrState"+FORMAT$(lv_n,"%d"))+"</state>"
			lv_a = lv_a + "<state>"+(fv_class).(fv_repos).("addrStateCode"+FORMAT$(lv_n,"%d"))+"</state>"
			#=====================================================
			# Additional Mandatory Fields
			#lv_a = lv_a + "<city>"+(fv_class).(fv_repos).("addrState"+FORMAT$(lv_n,"%d"))+"</city>"
			lv_a = lv_a + "<city>"+(fv_class).(fv_repos).("addrStateCode"+FORMAT$(lv_n,"%d"))+"</city>"	
			lv_a = lv_a + "<start_date>"+(fv_class).(fv_repos).("startDate")+"</start_date>"
			lv_a = lv_a + "<preferredFormat>"+(fv_class).(fv_repos).("prefFormat")+"</preferredFormat>"
			#=====================================================
			lv_a = lv_a + "<country>"+(fv_class).(fv_repos).("addrCountry"+FORMAT$(lv_n,"%d"))+"</country>"
			lv_a = lv_a + "<zip>"+(fv_class).(fv_repos).("addrZipCode"+FORMAT$(lv_n,"%d"))+"</zip>"
			lv_a = lv_a + "<preferredAddress>"+(fv_class).(fv_repos).("prefFlag")+"</preferredAddress>"
			lv_a = lv_a + "<FreeTextLabel>"+(fv_class).(fv_repos).("freeTxtLabel")+"</FreeTextLabel>"
			lv_a = lv_a + "<holdMailFlag>"+(fv_class).(fv_repos).("addrHoldMail")+"</holdMailFlag>"
			lv_a = lv_a + "</corpAddressData>"
			(fv_class).(fv_repos).("prefFlag") = "N"
			lv_n = lv_n + 1
		#}
		DO

		print((fv_class).(fv_repos).("isRegisteredAvail"))	
		IF(((fv_class).(fv_repos).("isRegisteredAvail") == "N") AND (lv_l>0))THEN
		#{
			lv_n = lv_n - 1
			print(lv_n)

			lv_a = lv_a + "<corpAddressData>"
                        lv_a = lv_a + "<addresscategory>Registered</addresscategory>"
                        lv_a = lv_a + "<address_line1>"+(fv_class).(fv_repos).("addrLine1"+FORMAT$(lv_n,"%d"))+"</address_line1>"
                        lv_a = lv_a + "<address_line2>"+(fv_class).(fv_repos).("addrLine2"+FORMAT$(lv_n,"%d"))+"</address_line2>"
                        lv_a = lv_a + "<address_line3>"+(fv_class).(fv_repos).("addrLine3"+FORMAT$(lv_n,"%d"))+"</address_line3>"
                        #lv_a = lv_a + "<state>"+(fv_class).(fv_repos).("addrState"+FORMAT$(lv_n,"%d"))+"</state>"
			lv_a = lv_a + "<state>"+(fv_class).(fv_repos).("addrStateCode"+FORMAT$(lv_n,"%d"))+"</state>"
                        #=====================================================
                        # Additional Mandatory Fields
                        #lv_a = lv_a + "<city>"+(fv_class).(fv_repos).("addrState"+FORMAT$(lv_n,"%d"))+"</city>"
			lv_a = lv_a + "<city>"+(fv_class).(fv_repos).("addrStateCode"+FORMAT$(lv_n,"%d"))+"</city>"
                        lv_a = lv_a + "<start_date>"+(fv_class).(fv_repos).("startDate")+"</start_date>"
                        lv_a = lv_a + "<preferredFormat>"+(fv_class).(fv_repos).("prefFormat")+"</preferredFormat>"
                        #=====================================================
                        lv_a = lv_a + "<country>"+(fv_class).(fv_repos).("addrCountry"+FORMAT$(lv_n,"%d"))+"</country>"
                        lv_a = lv_a + "<zip>"+(fv_class).(fv_repos).("addrZipCode"+FORMAT$(lv_n,"%d"))+"</zip>"
                        lv_a = lv_a + "<preferredAddress>"+(fv_class).(fv_repos).("prefFlag")+"</preferredAddress>"
                        lv_a = lv_a + "<FreeTextLabel>"+(fv_class).(fv_repos).("freeTxtLabel")+"</FreeTextLabel>"
                        lv_a = lv_a + "<holdMailFlag>"+(fv_class).(fv_repos).("addrHoldMail")+"</holdMailFlag>"
                        lv_a = lv_a + "</corpAddressData>"
		#}
		ENDIF

		lv_a = lv_a + "</corpCustomerData>"
		lv_a = lv_a + "</corpCustomerDtlsData>"
		lv_a = lv_a + "<corpRelatedData>"
		#=====================================================
		# Corporate CIF multirec document request
		#=====================================================
		WHILE(lv_o <= CINT((fv_class).(fv_repos).("docCount")))
		#{
			#(fv_class).(fv_repos).("issueCountry"+FORMAT$(lv_o,"%d")) 	= "TH"
			(fv_class).(fv_repos).("placeOfIssue")				= "010"
			(fv_class).(fv_repos).("docRefNumber") 				= (fv_class).(fv_repos).("uniqueID"+FORMAT$(lv_o,"%d"))
			(fv_class).(fv_repos).("docCode") 				= (fv_class).(fv_repos).("docTypeCode"+FORMAT$(lv_o,"%d"))
			(fv_class).(fv_repos).("status")				= "Received"
			(fv_class).(fv_repos).("custType") 				= TOUPPER((fv_class).(fv_repos).("custType"))
			
			lv_a = lv_a + "<corpEntityDocumentData>"
			lv_a = lv_a + "<referenceNumber>"+(fv_class).(fv_repos).("docRefNumber")+"</referenceNumber>"
			IF((fv_class).(fv_repos).("docCode") == "TI")THEN
			#{
				lv_a = lv_a + "<docExpiryDate>"+(fv_class).(fv_repos).("expiryDate"+FORMAT$(lv_o,"%d"))+"</docExpiryDate>"
			#}
			ENDIF
			lv_a = lv_a + "<docTypeCode>"+(fv_class).(fv_repos).("custType")+"</docTypeCode>"
			lv_a = lv_a + "<docCode>"+(fv_class).(fv_repos).("docCode")+"</docCode>"
			lv_a = lv_a + "<docIssueDate>"+(fv_class).(fv_repos).("issueDate"+FORMAT$(lv_o,"%d"))+"</docIssueDate>"
			lv_a = lv_a + "<placeOfIssue>"+(fv_class).(fv_repos).("placeOfIssue")+"</placeOfIssue>"
			lv_a = lv_a + "<countryOfIssue>"+(fv_class).(fv_repos).("issueCountry"+FORMAT$(lv_o,"%d"))+"</countryOfIssue>"
			lv_a = lv_a + "<status>"+(fv_class).(fv_repos).("status")+"</status>"
			lv_a = lv_a + "</corpEntityDocumentData>"

			lv_o = lv_o + 1 
		#}
		DO
		lv_a = lv_a + "<preferencesData>"
		BANCS.INPARAM.BINDVARS = BANCS.STDIN.contextBankId
		lv_g = "defCurrency|SELECT DISTINCT VALUE FROM CRMUSER.CATEGORIES c, CRMUSER.CATEGORY_LANG l"
		lv_g = lv_g + " WHERE c.CATEGORYID = l.CATEGORYID"
		lv_g = lv_g + " and c.CATEGORYTYPE = 'CURRENCY'"
		lv_g = lv_g + " and c.BANK_ID = l.BANK_ID"
		lv_g = lv_g + " and c.BANK_ID = ?SVAR"
		lv_e = urhk_dbCursorOpenWithBind(lv_g)
		IF(lv_e != 0) THEN
		#{
			lv_a = lv_a + "<corpPrefMiscData>"
			lv_a = lv_a + "<amount1>"+(fv_class).(fv_repos).("prefAmount1")+"</amount1>"
			lv_a = lv_a + "<date1>"+(fv_class).(fv_repos).("prefDate1")+"</date1>"
			lv_a = lv_a + "<str1>USD</str1>"
			lv_a = lv_a + "<type>CURRENCY</type>"
			lv_a = lv_a + "</corpPrefMiscData>"
		#}
		ELSE
		#{
			lv_x = BANCS.OUTPARAM.DB_CURSOR_NUMBER
			lv_y = urhk_dbCursorFetch(lv_x)
			while (lv_y == 0) 
			#{
				sub_copyOutparamFieldB("defCurrency",(fv_class),(fv_repos),"defCurrency","")
				
				lv_a = lv_a + "<corpPrefMiscData>"
				lv_a = lv_a + "<amount1>"+(fv_class).(fv_repos).("prefAmount1")+"</amount1>"
				lv_a = lv_a + "<date1>"+(fv_class).(fv_repos).("prefDate1")+"</date1>"
				lv_a = lv_a + "<str1>"+(fv_class).(fv_repos).("defCurrency")+"</str1>"
				lv_a = lv_a + "<type>CURRENCY</type>"
				lv_a = lv_a + "</corpPrefMiscData>"
				lv_y = urhk_dbCursorFetch(lv_x)
			#}
			DO
			lv_e = urhk_dbCursorClose(lv_x)
		#}
		ENDIF
		lv_a = lv_a + "</preferencesData>"
		IF((fv_class).(fv_repos).("tradeCustFlag") == "Y") THEN
		#{
			lv_a = lv_a + "<tradeFinanceData>"
			lv_a = lv_a + "<InlandTradeAllowed>Y</InlandTradeAllowed>"
			lv_a = lv_a + "<CustNative>N</CustNative>"
			lv_a = lv_a + "</tradeFinanceData>"
		#}
		ENDIF

		IF((fv_class).(fv_repos).("treasuryCustFlag") == "Y")THEN
		#{
			lv_a = lv_a + "<CoreInterfaceData><TreasuryCounterParty>Y</TreasuryCounterParty></CoreInterfaceData>"
		#}
		ENDIF

		lv_a = lv_a + "</corpRelatedData>"
		lv_a = lv_a + "</CorpCustDetails>"

		lv_a = lv_a + "<createCorporateCustomer_CustomData>"

		IF(TRIM((fv_class).(fv_repos).("ultRiskCountry")) != "")THEN
		#{
			lv_a = lv_a + "<FreeCode1Desc>" + (fv_class).(fv_repos).("ultRiskCountry") + "</FreeCode1Desc>"
		#}
		ENDIF

		IF(TRIM((fv_class).(fv_repos).("corpRelCIF")) != "")THEN	
		#{
			lv_a = lv_a + "<FreeCode3Desc>" + (fv_class).(fv_repos).("corpRelCIF") + "</FreeCode3Desc>"
		#}
		ENDIF

		IF(TRIM((fv_class).(fv_repos).("corpRelType")) != "")THEN
		#{
			lv_a = lv_a + "<FreeCode4Desc>" + (fv_class).(fv_repos).("corpRelType") + "</FreeCode4Desc>"	
		#}
		ENDIF

		IF(TRIM((fv_class).(fv_repos).("custRatCode")) != "")THEN
		#{
			 lv_a = lv_a + "<FreeCode2Desc>" + (fv_class).(fv_repos).("custRatCode") + "</FreeCode2Desc>"
		#}
		ENDIF

		lv_a = lv_a + "</createCorporateCustomer_CustomData>"
		lv_a = lv_a + "</createCorporateCustomerRequest>"
	#}
	ENDIF
	lv_a = lv_a + "</Body>"
	lv_a = lv_a + "</FIXML>"
	#print(lv_a)
	
	lv_c = (fv_class).(fv_repos).("XMLHeader") + lv_a
	print(lv_c)
	
	#=====================================================
	# Calling API for CIF Creation
	#=====================================================
	BANCS.INPARAM.SERVICE_NAME = "FIJCA"
	BANCS.INPARAM.SEND_RECV_FLG = "R"
	lv_k = urhk_ConnectToFIAndSendMsg(lv_c)
	#print(lv_k)
	print(BANCS.OUTPARAM.RespMesg)
	print(BANCS.OUTPARAM.ErrMsg)
#}
ENDSUB

SUB createCIFVerify(fv_class,fv_repos)
#{
	#=====================================================
	# Request Service Id
	#=====================================================
	BANCS.INPARAM.srvReqId = (fv_class).(fv_repos).("srvReqId")
	CALLSCRIPTIFEXIST("cif_common_business_XMLHeader.scr")
	#print((fv_class).(fv_repos).("XMLHeader"))
	
	lv_a = "<Body>"
	lv_a = lv_a + "<verifyCustomerDetailsRequest>"
	lv_a = lv_a + "<CustomerVerifyRq>"
	lv_a = lv_a + "<cifId>"+(fv_class).(fv_repos).("crmCifId")+"</cifId>"
	lv_a = lv_a + "<decision>Approve</decision>"
	IF(TOUPPER((fv_class).(fv_repos).("custType")) == "RETAIL") THEN
	#{
		lv_a = lv_a + "<entityName>RetailCustomer</entityName>"
	#}
	ELSE
	#{
		lv_a = lv_a + "<entityName>CorporateCustomer</entityName>"
	#}
	ENDIF
	lv_a = lv_a + "</CustomerVerifyRq>"
	lv_a = lv_a + "</verifyCustomerDetailsRequest>"
	lv_a = lv_a +"</Body>"
	lv_a = lv_a +"</FIXML>"
	PRINT(lv_a)
	
	lv_c = (fv_class).(fv_repos).("XMLHeader") + lv_a
	print(lv_c)

	BANCS.INPARAM.SERVICE_NAME = "FIJCA"
	BANCS.INPARAM.SEND_RECV_FLG = "R"

	lv_k = urhk_ConnectToFIAndSendMsg(lv_c)
	PRINT(lv_k)
	print(BANCS.OUTPARAM.RespMesg)
	print(BANCS.OUTPARAM.ErrMsg)
#}
ENDSUB

SUB parseFieldsFromRespXml(fv_noOfFields,fv_resxml,fv_TagFields,fv_outputFields,fv_defaultValue)
#{
	fv_counter = 1
	fv_repos = "BANCS"
	fv_repClass = "OUTPUT"
	
	WHILE(fv_counter <= fv_noOfFields)
	#{
		fv_TagName = func_getNthFieldFromStringB(fv_TagFields,"|",fv_counter)
		PRINT(fv_TagName)
		fv_outputField = func_getNthFieldFromStringB(fv_outputFields,"|",fv_counter)
		PRINT(fv_outputField)
		
		fv_startTag = "<"+fv_TagName+">"
		PRINT(fv_startTag)
		
		fv_endTag = "</"+fv_TagName+">"
		PRINT(fv_endTag)
		
		fv_u = GETPOSITION(fv_resxml,fv_startTag) + STRLEN(fv_startTag) - 1
		PRINT(fv_u)
		IF(fv_u != 0) THEN
		#{
			fv_v  = GETPOSITION(fv_resxml,fv_endTag) - 1
			PRINT(fv_v)
			fv_e = MID$(fv_resxml,fv_u,(fv_v-fv_u))
			PRINT(fv_e)
			(fv_repos).(fv_repClass).(fv_outputField) = fv_e
			PRINT((fv_repos).(fv_repClass).(fv_outputField))
			fv_counter = fv_counter + 1
		#}
		ENDIF
	#}
	DO
#}
ENDSUB

#============================================================
# IMPORTANT: Auto Generated Header. DO NOT CHANGE MANUALLY.
# Domain: Finacle Core
# Library Name: pttmScriptBasedCharges.scl
# Description: To calculate the final Charge Amount
#============================================================
IMPORT LibCommonB001
IMPORT LibCommonB002

FUNCTION finalChargeAmount(fv_rep, fv_class)
#{
	# Initialize Variables
	fv_e = " "
	(fv_rep).(fv_class).("errorFlg") = "N"
	(fv_rep).(fv_class).("errorMsg") = " "
	(fv_rep).(fv_class).("errorCode")  = " "
	(fv_rep).(fv_class).("chargeAmountCollCrncy") = ""
	
	# MANDATORY FIELDS CHECK
	fv_m = "chargeAmount|chargeCalcCurr"
	fv_f = func_chkMandatorySRVInputsB(fv_rep,fv_class,fv_m,BYREF fv_e)
	PRINT(fv_f)
	IF(fv_f != 0)THEN
	#{
		(fv_rep).(fv_class).("errorFlg") = "Y"
		fv_e = func_replaceCharB(fv_e,"|","")
		(fv_rep).(fv_class).("errorMsg")  = fv_e
		RETURN 1
	#}
	ENDIF
	PRINT((fv_rep).(fv_class).("chargeAmount"))
	PRINT((fv_rep).(fv_class).("chargeCalcCurr"))
	(fv_rep).(fv_class).("AmountWithNoDiscount") = (fv_rep).(fv_class).("chargeAmount")
	IF(FIELDEXISTS((fv_rep).(fv_class).("chrgCollCrncy")) != 1)THEN
	#{
		(fv_rep).(fv_class).("chrgCollCrncy") = ""
	#}
	ENDIF
	PRINT((fv_rep).(fv_class).("chrgCollCrncy"))
	IF(TRIM((fv_rep).(fv_class).("chrgCollCrncy")) == "")THEN
	#{
		# CO-MANDATORY FIELDS CHECK
		fv_m = "debitCrncy"
		fv_f = func_chkMandatorySRVInputsB(fv_rep,fv_class,fv_m,BYREF fv_e)
		PRINT(fv_f)
		IF(fv_f != 0)THEN
		#{
			#(fv_rep).(fv_class).("errorFlg") = "Y"
			#fv_e = func_replaceCharB(fv_e,"|","")
			(fv_rep).(fv_class).("errorMsg")  = "chrgCollCrncy OR debitCrncy must be entered"
			RETURN 1
		#}
		ENDIF
		(fv_rep).(fv_class).("chrgCollCrncy") = (fv_rep).(fv_class).("debitCrncy")
	#}
	ENDIF
	PRINT((fv_rep).(fv_class).("chrgCollCrncy"))
	(fv_rep).(fv_class).("chargeCrncy") = (fv_rep).(fv_class).("chargeCalcCurr")
	
	# Check if field is available in input,otherwise intialize
	IF(FIELDEXISTS((fv_rep).(fv_class).("minimumChargeAmount")) != 1)THEN
	#{
		(fv_rep).(fv_class).("minimumChargeAmount") = ""
	#}
	ENDIF
	IF(FIELDEXISTS((fv_rep).(fv_class).("minimumChargeAmountCrncy")) != 1)THEN
	#{
		(fv_rep).(fv_class).("minimumChargeAmountCrncy") = ""
	#}
	ENDIF
	IF(FIELDEXISTS((fv_rep).(fv_class).("maximumChargeAmount")) != 1)THEN
	#{
		(fv_rep).(fv_class).("maximumChargeAmount") = ""
	#}
	ENDIF
	IF(FIELDEXISTS((fv_rep).(fv_class).("maximumChargeAmountCrncy")) != 1)THEN
	#{
		(fv_rep).(fv_class).("maximumChargeAmountCrncy") = ""
	#}
	ENDIF
	IF(FIELDEXISTS((fv_rep).(fv_class).("rateCode")) != 1)THEN
	#{
		(fv_rep).(fv_class).("rateCode") = ""
	#}
	ENDIF
	IF(FIELDEXISTS((fv_rep).(fv_class).("rateValue")) != 1)THEN
	#{
		(fv_rep).(fv_class).("rateValue") = ""
	#}
	ENDIF
	IF(FIELDEXISTS((fv_rep).(fv_class).("discountPercentage")) != 1)THEN
	#{
		(fv_rep).(fv_class).("discountPercentage") = ""
	#}
	ENDIF
	IF(FIELDEXISTS((fv_rep).(fv_class).("roundOffIndicator")) != 1)THEN
	#{
		(fv_rep).(fv_class).("roundOffIndicator") = ""
	#}
	ENDIF
	IF(FIELDEXISTS((fv_rep).(fv_class).("roundOffValue")) != 1)THEN
	#{
		(fv_rep).(fv_class).("roundOffValue") = ""
	#}
	ENDIF
	IF(FIELDEXISTS((fv_rep).(fv_class).("debitCrncy")) != 1)THEN
	#{
		(fv_rep).(fv_class).("debitCrncy") = ""
	#}
	ENDIF
	
	# Fetch Rate Code if its not given in function input
	IF(TRIM((fv_rep).(fv_class).("rateCode")) == "")THEN
	#{
		fv_a=func_selectFromCustTableB("rateCode","rate_code","tbaadm.gct","BANK_ID|DEL_FLG",BANCS.STDIN.contextBankId +"|"+ "N")
		PRINT(fv_a)
		sub_copyOutparamFieldB("rateCode",fv_rep,fv_class,"rateCode","")
		PRINT((fv_rep).(fv_class).("rateCode"))
	#}
	ENDIF
	
	# Apply Discount on Charge Amount
	IF(((fv_rep).(fv_class).("discountPercentage") != "") AND (CDOUBLE((fv_rep).(fv_class).("discountPercentage")) > 0))THEN
	#{
		(fv_rep).(fv_class).("chargeAmount") = CDOUBLE((fv_rep).(fv_class).("chargeAmount")) - (CDOUBLE((fv_rep).(fv_class).("chargeAmount"))*(CDOUBLE((fv_rep).(fv_class).("discountPercentage"))/100))
		PRINT((fv_rep).(fv_class).("chargeAmount"))
	#}
	ENDIF
	
	# Check if minimumChargeAmount is more than chargeAmount
	PRINT((fv_rep).(fv_class).("minimumChargeAmount"))
	IF(((fv_rep).(fv_class).("minimumChargeAmount") != "") AND (CDOUBLE((fv_rep).(fv_class).("minimumChargeAmount")) > 0))THEN
	#{
		IF(((fv_rep).(fv_class).("minimumChargeAmountCrncy") != "") AND ((fv_rep).(fv_class).("minimumChargeAmountCrncy") != (fv_rep).(fv_class).("chargeCrncy")))THEN
		#{
			(fv_rep).(fv_class).("chargeAmountMinCrncy") = "0"
			fv_a = func_convertAmountB((fv_rep).(fv_class).("chargeAmount"),(fv_rep).(fv_class).("chargeCrncy"),(fv_rep).(fv_class).("minimumChargeAmountCrncy"),(fv_rep).(fv_class).("rateCode"),"",BYREF (fv_rep).(fv_class).("chargeAmountMinCrncy"))
			PRINT((fv_rep).(fv_class).("chargeAmountMinCrncy"))
			(fv_rep).(fv_class).("chargeAmountMinCrncy") = TRIM((fv_rep).(fv_class).("chargeAmountMinCrncy"))
			PRINT((fv_rep).(fv_class).("chargeAmountMinCrncy"))
			#}
		ELSE
			#{
			(fv_rep).(fv_class).("chargeAmountMinCrncy") = (fv_rep).(fv_class).("chargeAmount")
		#}
		ENDIF
		IF(CDOUBLE((fv_rep).(fv_class).("chargeAmountMinCrncy")) < CDOUBLE((fv_rep).(fv_class).("minimumChargeAmount")))THEN
		#{
			(fv_rep).(fv_class).("chargeAmount") = (fv_rep).(fv_class).("minimumChargeAmount")
			(fv_rep).(fv_class).("chargeCrncy") = (fv_rep).(fv_class).("minimumChargeAmountCrncy")
		#}
		ENDIF
	#}
	ENDIF
	
	# Check if maximumChargeAmount is less than chargeAmount
	IF(((fv_rep).(fv_class).("maximumChargeAmount") != "") AND (CDOUBLE((fv_rep).(fv_class).("maximumChargeAmount")) > 0))THEN
	#{
		IF(((fv_rep).(fv_class).("maximumChargeAmountCrncy") != "") AND ((fv_rep).(fv_class).("maximumChargeAmountCrncy") != (fv_rep).(fv_class).("chargeCrncy")))THEN
		#{
			(fv_rep).(fv_class).("chargeAmountMaxCrncy") = "0"
			fv_a = func_convertAmountB((fv_rep).(fv_class).("chargeAmount"),(fv_rep).(fv_class).("chargeCrncy"),(fv_rep).(fv_class).("maximumChargeAmountCrncy"),(fv_rep).(fv_class).("rateCode"),"",BYREF (fv_rep).(fv_class).("chargeAmountMaxCrncy"))
			PRINT((fv_rep).(fv_class).("chargeAmountMaxCrncy"))
			(fv_rep).(fv_class).("chargeAmountMaxCrncy") = TRIM((fv_rep).(fv_class).("chargeAmountMaxCrncy"))
			PRINT((fv_rep).(fv_class).("chargeAmountMaxCrncy"))
			#}
		ELSE
			#{
			(fv_rep).(fv_class).("chargeAmountMaxCrncy") = (fv_rep).(fv_class).("chargeAmount")
		#}
		ENDIF
		IF(CDOUBLE((fv_rep).(fv_class).("chargeAmountMaxCrncy")) > CDOUBLE((fv_rep).(fv_class).("maximumChargeAmount")))THEN
		#{
			(fv_rep).(fv_class).("chargeAmount") = (fv_rep).(fv_class).("maximumChargeAmount")
			(fv_rep).(fv_class).("chargeCrncy") = (fv_rep).(fv_class).("maximumChargeAmountCrncy")
		#}
		ENDIF
	#}
	ENDIF
	
	# Convert Amount to chrgCollCrncy
	IF((fv_rep).(fv_class).("chargeCrncy") != (fv_rep).(fv_class).("chrgCollCrncy"))THEN
	#{
		(fv_rep).(fv_class).("chargeAmountCollCrncy") = "0"
		fv_a = func_convertAmountB((fv_rep).(fv_class).("chargeAmount"),(fv_rep).(fv_class).("chargeCrncy"),(fv_rep).(fv_class).("chrgCollCrncy"),(fv_rep).(fv_class).("rateCode"),"",BYREF (fv_rep).(fv_class).("chargeAmountCollCrncy"))
		PRINT((fv_rep).(fv_class).("chargeAmountCollCrncy"))
		(fv_rep).(fv_class).("chargeAmountCollCrncy") = TRIM((fv_rep).(fv_class).("chargeAmountCollCrncy"))
		PRINT((fv_rep).(fv_class).("chargeAmountCollCrncy"))
		#}
	ELSE
		#{
		(fv_rep).(fv_class).("chargeAmountCollCrncy") = (fv_rep).(fv_class).("chargeAmount")
	#}
	ENDIF
	
	# Round Off Charge Amount
	IF((TRIM((fv_rep).(fv_class).("roundOffValue")) != "") AND (TRIM((fv_rep).(fv_class).("roundOffIndicator")) != ""))THEN
	#{
		BANCS.INPARAM.InputAmount = (fv_rep).(fv_class).("chargeAmountCollCrncy")
		BANCS.INPARAM.RoundOffAmt = (fv_rep).(fv_class).("roundOffValue")
		BANCS.INPARAM.RoundOffFlag = (fv_rep).(fv_class).("roundOffIndicator")
		fv_r = urhk_B2k_RoundOff("")
		PRINT(fv_r)
		IF(fv_r == 0)THEN
		#{
			(fv_rep).(fv_class).("chargeAmountCollCrncy") = BANCS.OUTPARAM.OutputAmount
			PRINT((fv_rep).(fv_class).("chargeAmountCollCrncy"))
		#}
		ENDIF
	#}
	ENDIF
	
	# Setting Output Fields of the function
	(fv_rep).(fv_class).("collCrncy") = (fv_rep).(fv_class).("chrgCollCrncy")
	(fv_rep).(fv_class).("collAmount") = (fv_rep).(fv_class).("chargeAmountCollCrncy")
	PRINT((fv_rep).(fv_class).("AmountWithNoDiscount"))
	
	RETURN 0
#}
ENDFUNCTION

<--START
CHECKSUM="510e09899f34cf0544513433a8f479d80f80b47a581d1e6e4c9757df54d9870b"
END-->

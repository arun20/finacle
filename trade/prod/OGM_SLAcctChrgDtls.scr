#============================================================
# IMPORTANT: Auto Generated Header. DO NOT CHANGE MANUALLY.
# Product: Finacle Core
# Category: User Defined
# Script: OGM_SLAcctChrgDtls.scr
# Type: NA|default
# Description: This script is used to maintain the SL Account Details enetered in Charge Details Tab of OGM
# Author: Saisomasekhar_N
# Date: 6/12/18 2:50 PM
# Modification Log:
#============================================================
IMPORT LibCommonB001
IMPORT LibCommonB002
IMPORT customFields
<--START
	# Script body goes here
	TRACE ON
	sub_createRepClassB("CUST","DATA")
	
	##sv_a = urhk_b2k_printRepos("BANCS")
	#sv_a = urhk_b2k_printRepos("ONS")
	
	### 1.GET MENU ID ###
	CUST.DATA.menuId = ""
	sv_a = func_getCallingMenuOptionB("CMMSG00004",BYREF CUST.DATA.menuId)
	PRINT(CUST.DATA.menuId)
	IF((CUST.DATA.menuId != "OGM")AND(CUST.DATA.menuId != "ODCM")AND(CUST.DATA.menuId != "IGM")AND(CUST.DATA.menuId != "IDCM"))THEN
	#{
		EXITSCRIPT
	#}
	ENDIF
	
	### 2.INITIALIZE VARIABLES ###
	sub_copyOptionalFieldB("errorFlg","CUST","DATA","errorFlg","N")
	sub_copyOptionalFieldB("errorMsg","CUST","DATA","errorMsg","")
	sub_copyOptionalFieldB("slAcctName","CUST","DATA","slAcctName","")
	sub_copyOptionalFieldB("slAcctId","CUST","DATA","slAcctId","")
	sub_copyOptionalFieldB("slAcctStatus","CUST","DATA","slAcctStatus","")
	sub_copyOptionalFieldB("slAcctBal","CUST","DATA","slAcctBal","")
	sub_copyOptionalFieldB("slAcctCcy","CUST","DATA","slAcctCcy","")
	sub_copyOptionalFieldB("slPurposeTxn","CUST","DATA","slPurposeTxn","")
	sub_copyOptionalFieldB("slLimitId","CUST","DATA","slLimitId","")
	sub_copyOptionalFieldB("tsCnt","CUST","DATA","tsCnt","0")
	sub_copyOptionalFieldB("rcreUserId","CUST","DATA","rcreUserId","")
	sub_copyOptionalFieldB("rcreTime","CUST","DATA","rcreTime","")
	CUST.DATA.serviceName = BANCS.STDIN.serviceName
	CUST.DATA.chkTxnSeq	  = ""
	CUST.DATA.isNewEntity = ""
	CUST.DATA.totEarMark  = "0"
	BANCS.INPUT.holdAmount = "0"
	CUST.DATA.sysDate = func_getSysDateTimeWithFormatB("DD-MM-YYYY hh24:mi:ss")
	PRINT(CUST.DATA.sysDate)
	
	CUST.DATA.insertFields = "B2K_ID,B2KID_TYPE,EVENT_TYPE,EVENT_SRL_NUM,TFCT_KEY_SRL_NUM,SL_ACCT_ID,ACCT_NAME,ACCT_STATUS,CHRG_EVENT_ID,CHRG_EVENT_TYPE,"
	CUST.DATA.insertFields = CUST.DATA.insertFields + "ACCT_BAL,SL_LIMIT_ID,BANK_ID,LCHG_USER_ID,LCHG_TIME,RCRE_USER_ID,RCRE_TIME,TS_CNT,PURPOSE_OF_TXN,ACCT_CCY,"
	CUST.DATA.insertFields = CUST.DATA.insertFields + "SEQ_TRAN_ID_SL,ENTITY_AMOUNT,ENTITY_CCY,AMEND_IND,AMEND_AMT,SRL_NUM,ENTITY_CRE_FLG,SRV_NAME,MENU_ID,TOTAL_EARMARK,SL_REMARKS"
	PRINT(CUST.DATA.insertFields)
	
	### 3.GET KEY FIELD VALUES FROM SRV - MENU SPECIFIC ###
	IF(CUST.DATA.menuId == "OGM")THEN
	#{
		CUST.DATA.srvFieldNames = "bgCritDtl.bgFuncCode|bgCritDtl.bgSrlNum|bgCommonDtl.bgB2kId|bgCritDtl.bgType.type|bgChargeDtl.entityId.entityType"
		CUST.DATA.srvFieldNames = CUST.DATA.srvFieldNames + "|" + "bgChargeDtl.eventSrlNum|bgCommonDtl.bgEventAmt|bgCritDtl.bgCritCrncy"
		CUST.DATA.srvFieldNames = CUST.DATA.srvFieldNames + "|" + "bgAmendDtl.amendInd|bgAmendDtl.amendAmt"
	#}
	ENDIF
	IF(CUST.DATA.menuId == "ODCM")THEN
	#{
		CUST.DATA.srvFieldNames = "dcOutCritDtl.dcFuncCode|dcOutCritDtl.dcRefNum|dcOutGenDtl.dcPordDtl.purOrdrDtl.purOrdHdrDtl.entityB2kId|dcOutCritDtl.dcReg.type|dcOutGenDtl.dcPordDtl.purOrdrDtl.purOrdHdrDtl.entityType"
		CUST.DATA.srvFieldNames = CUST.DATA.srvFieldNames + "|" + "dcChargeDtl.eventSrlNum|dcOutGenDtl.dcAmtDtl.dcOpenValue|dcOutCritDtl.dcCrncyCode"
		CUST.DATA.srvFieldNames = CUST.DATA.srvFieldNames + "|" + "dcAmendDtl.amendInd|dcAmendDtl.amendAmt"
	#}
	ENDIF
	IF(CUST.DATA.menuId == "IGM")THEN
	#{
		CUST.DATA.srvFieldNames = "bgInMsg.bgCritDtl.bgFuncCode|bgInMsg.bgCritDtl.bgSrlNum|bgInMsg.bgCommonDtl.bgB2kId|bgInMsg.bgCritDtl.bgType.type|bgInMsg.bgChargeDtl.entityId.entityType"
		CUST.DATA.srvFieldNames = CUST.DATA.srvFieldNames + "|" + "bgInMsg.bgChargeDtl.eventSrlNum|bgInMsg.bgCommonDtl.bgEventAmt|bgInMsg.bgCritDtl.bgCritCrncy"
		CUST.DATA.srvFieldNames = CUST.DATA.srvFieldNames + "|" + "bgInMsg.bgAmendDtl.amendInd|bgInMsg.bgAmendDtl.amendAmt"
	#}
	ENDIF
	IF(CUST.DATA.menuId == "IDCM")THEN
	#{
		CUST.DATA.srvFieldNames = "dcInMsgDtl.dcOutCritDtl.dcFuncCode|dcInMsgDtl.dcOutCritDtl.dcRefNum|dcInMsgDtl.dcOutGenDtl.dcPordDtl.purOrdrDtl.purOrdHdrDtl.entityB2kId|dcInMsgDtl.dcOutCritDtl.dcReg.type|dcInMsgDtl.dcOutGenDtl.dcPordDtl.purOrdrDtl.purOrdHdrDtl.entityType"
		CUST.DATA.srvFieldNames = CUST.DATA.srvFieldNames + "|" + "dcInMsgDtl.dcChargeDtl.eventSrlNum|dcInMsgDtl.dcOutGenDtl.dcAmtDtl.dcOpenValue|dcInMsgDtl.dcOutCritDtl.dcCrncyCode"
		CUST.DATA.srvFieldNames = CUST.DATA.srvFieldNames + "|" + "dcInMsgDtl.dcAmendDtl.amendInd|dcInMsgDtl.dcAmendDtl.amendAmt"
	#}
	ENDIF
	CUST.DATA.srvFieldValues = "funcCode|b2kRefNo|entityB2kId|b2kType|b2kIdType|eventSrlNum|b2kEventAmt|b2kCcy|amendInd|amendAmt"
	sub_getFieldValuesfromSRVStructB("10","CUST","DATA",CUST.DATA.srvFieldNames,CUST.DATA.srvFieldValues)
	PRINT(CUST.DATA.funcCode)
	PRINT(CUST.DATA.b2kRefNo)
	PRINT(CUST.DATA.entityB2kId)
	PRINT(CUST.DATA.b2kType)
	PRINT(CUST.DATA.b2kIdType)
	PRINT(CUST.DATA.eventSrlNum)
	CUST.DATA.b2kEventAmt = CDOUBLE(CUST.DATA.b2kEventAmt)
	PRINT(CUST.DATA.b2kEventAmt)
	PRINT(CUST.DATA.b2kCcy)
	PRINT(CUST.DATA.amendInd)
	CUST.DATA.amendAmt = CDOUBLE(CUST.DATA.amendAmt)
	PRINT(CUST.DATA.amendAmt)
	IF(((CUST.DATA.menuId == "OGM") OR (CUST.DATA.menuId == "IGM")) AND (CUST.DATA.b2kIdType == "")) THEN	
	#{
		CUST.DATA.b2kIdType = "BNKGR"
	#}
	ENDIF	
	### 4.FETCH PREVIOUS OPERATION VALUES ON THIS ENTITY ###
	sub_getFieldValuesfromONSB("1","CUST","DATA","tfc_limit_details_FIELD_1","slLimitId","")
	CUST.DATA.slLimitId	= TOUPPER(CUST.DATA.slLimitId)
	
	BANCS.INPARAM.BINDVARS = CUST.DATA.entityB2kId + "|" + CUST.DATA.b2kIdType + "|" + BANCS.STDIN.contextBankId
	BANCS.INPARAM.BINDVARS = BANCS.INPARAM.BINDVARS + "|" + CUST.DATA.entityB2kId + "|" + CUST.DATA.b2kIdType + "|" + BANCS.STDIN.contextBankId
	PRINT(BANCS.INPARAM.BINDVARS)
	sv_a = "slLimitId,prevEntityAmt,prevEntityCcy,prevAmdInd,prevAmdAmt,prevEarMark|SELECT SL_LIMIT_ID,ENTITY_AMOUNT,ENTITY_CCY,AMEND_IND,AMEND_AMT,TOTAL_EARMARK"
	sv_a = sv_a + " FROM CUSTOM.C_TFCT_TBL WHERE B2K_ID = ?SVAR AND B2KID_TYPE = ?SVAR AND BANK_ID = ?SVAR AND SRL_NUM = "
	sv_a = sv_a + " (SELECT MAX(SRL_NUM) FROM CUSTOM.C_TFCT_TBL WHERE B2K_ID = ?SVAR AND B2KID_TYPE = ?SVAR AND BANK_ID = ?SVAR) AND ROWNUM = 1"
	PRINT(sv_a)
	sv_a = urhk_dbSelectWithBind(sv_a)
	PRINT(sv_a)
	IF(TRIM(CUST.DATA.slLimitId) == "")THEN
	#{
		sub_copyOutparamFieldB("slLimitId","CUST","DATA","slLimitId","")
	#}
	ENDIF
	sub_copyOutparamFieldB("prevEntityAmt","CUST","DATA","prevEntityAmt","0")
	sub_copyOutparamFieldB("prevEntityCcy","CUST","DATA","prevEntityCcy","")
	sub_copyOutparamFieldB("prevAmdInd","CUST","DATA","prevAmdInd","")
	sub_copyOutparamFieldB("prevAmdAmt","CUST","DATA","prevAmdAmt","0")
	sub_copyOutparamFieldB("prevEarMark","CUST","DATA","prevEarMark","0")
	IF(sv_a != 0)THEN
	#{
		#sub_getFieldValuesfromONSB("1","CUST","DATA","tfc_limit_details_FIELD_1","slLimitId","")
		#CUST.DATA.slLimitId	= TOUPPER(CUST.DATA.slLimitId)
		CUST.DATA.isNewEntity = "Y"
	#}
	ENDIF
	PRINT(CUST.DATA.slLimitId)
	PRINT(CUST.DATA.prevEntityAmt)
	PRINT(CUST.DATA.prevEntityCcy)
	PRINT(CUST.DATA.prevAmdInd)
	PRINT(CUST.DATA.prevAmdAmt)
	PRINT(CUST.DATA.prevEarMark)
	
	### 5.CALL MANAGE EARMARK API ONLY IF SL_LIMIT_ID IS EXISTING ###
	### INPUTS TO CALL MANAGE EARMARK API ###
	### INPUT 1. BANCS.INPUT.acfNum (SL_LIMIT_ID) ####
	### INPUT 2. BANCS.INPUT.holdAmount (Event Amount) ####
	### INPUT 3. BANCS.INPUT.earType (A-Add/R-Remove) ####
	### INPUT 4. BANCS.INPUT.currency (Entity Currency) ####
	
	### 5.1 ADD/COPY/ISSUE/ADVICE ###
	IF(CUST.DATA.isNewEntity == "Y")THEN
	#{
		BANCS.INPUT.acfNum 		= CUST.DATA.slLimitId
		BANCS.INPUT.holdAmount 	= FORMAT$(CDOUBLE(CUST.DATA.b2kEventAmt),"%2.2f")
		BANCS.INPUT.earType 	= "A"
		BANCS.INPUT.currency 	= CUST.DATA.b2kCcy
	#}
	ENDIF
	### 5.2 VERIFY ###
	IF(CUST.DATA.funcCode == "V")THEN
	#{
		### EARMARK REMOVED IN PREPROCESS SRV ###
	#}
	ENDIF
	### 5.2 CANCEL ###
	IF(CUST.DATA.funcCode == "X")THEN
	#{
		IF(CDOUBLE(CUST.DATA.prevEarMark) != 0) THEN
		#{
			BANCS.INPUT.acfNum 		= CUST.DATA.slLimitId
			BANCS.INPUT.holdAmount 	= FORMAT$(CDOUBLE(CUST.DATA.b2kEventAmt),"%2.2f")
			BANCS.INPUT.earType 	= "R"
			BANCS.INPUT.currency 	= CUST.DATA.b2kCcy
		#}
		ELSE
		#{
			GOTO JUSTCANCEL
		#}
		ENDIF
	#}
	ENDIF
	### 5.3 MODIFY/AMEND/OTHERS ###
	IF((CUST.DATA.isNewEntity != "Y") AND (CUST.DATA.funcCode != "X"))THEN
	#{
		IF((CUST.DATA.amendInd != "") AND (CUST.DATA.funcCode != "M"))THEN
		#{
			IF(CUST.DATA.amendInd == "E")THEN
			#{
				BANCS.INPUT.acfNum 		= CUST.DATA.slLimitId
				BANCS.INPUT.holdAmount 	= FORMAT$(CDOUBLE(CUST.DATA.amendAmt),"%2.2f")
				BANCS.INPUT.earType 	= "A"
				BANCS.INPUT.currency 	= CUST.DATA.b2kCcy
			#}
			ENDIF
			IF(CUST.DATA.amendInd == "R")THEN
			#{
				BANCS.INPUT.acfNum 		= CUST.DATA.slLimitId
				BANCS.INPUT.holdAmount 	= FORMAT$(CDOUBLE(CUST.DATA.amendAmt),"%2.2f")
				BANCS.INPUT.earType 	= "R"
				BANCS.INPUT.currency 	= CUST.DATA.b2kCcy
			#}
			ENDIF
		#}
		ELSE
		#{
			IF((TRIM(CUST.DATA.slLimitId) != "" )AND(CDOUBLE(CUST.DATA.prevEarMark) != 0) AND (CUST.DATA.funcCode == "M") AND (CUST.DATA.amendInd != "R"))THEN
			#{
				BANCS.INPUT.acfNum              = CUST.DATA.slLimitId
				BANCS.INPUT.holdAmount  = FORMAT$(CDOUBLE(CUST.DATA.prevEntityAmt),"%2.2f")
				BANCS.INPUT.earType     = "R"
				BANCS.INPUT.currency    = CUST.DATA.b2kCcy
				CALL("mngEarmark.scr")
				IF(INTF.DATA.orgCode != "000")THEN
                       		#{
                               		CUST.DATA.errorMsg = INTF.DATA.orgCode+"-"+INTF.DATA.ErrorDesc
                               		CUST.DATA.errorFlg = "Y"
                               		GOTO ENDOFSCRIPT
                       		#}
                       		ENDIF
				CUST.DATA.prevEarMark = "0.00"
			#}
			ENDIF
			BANCS.INPUT.acfNum 	= CUST.DATA.slLimitId
			BANCS.INPUT.holdAmount 	= FORMAT$(CDOUBLE(CUST.DATA.b2kEventAmt),"%2.2f")
			BANCS.INPUT.earType 	= "A"
			BANCS.INPUT.currency 	= CUST.DATA.b2kCcy
		#}
		ENDIF
	#}
	ENDIF
	IF(CUST.DATA.funcCode == "N") THEN
	#{
		BANCS.INPUT.holdAmount = "0"
	#}
	ENDIF
	IF((TRIM(CUST.DATA.slLimitId) != "" )AND(CDOUBLE(BANCS.INPUT.holdAmount) != 0) AND (CUST.DATA.amendInd != "R") AND (CUST.DATA.funcCode != "V"))THEN
	#{
		CALL("mngEarmark.scr")
		IF(FIELDEXISTS(INTF.DATA.orgCode))THEN
		#{
			IF(INTF.DATA.orgCode != "000")THEN
			#{
				CUST.DATA.errorMsg = INTF.DATA.orgCode+"-"+INTF.DATA.ErrorDesc
				CUST.DATA.errorFlg = "Y"
				GOTO ENDOFSCRIPT
			#}
			ENDIF
			IF(BANCS.INPUT.earType == "A")THEN
			#{
				CUST.DATA.totEarMark = CDOUBLE(CUST.DATA.prevEarMark) + CDOUBLE(BANCS.INPUT.holdAmount)
			#}
			ENDIF
			IF(BANCS.INPUT.earType == "R")THEN
			#{
				CUST.DATA.totEarMark = CDOUBLE(CUST.DATA.prevEarMark) - CDOUBLE(BANCS.INPUT.holdAmount)
			#}
			ENDIF
		#}
		ENDIF
	#}
	ENDIF
	PRINT(CUST.DATA.prevEarMark)
	PRINT(CUST.DATA.totEarMark)
	
	### 6.HANDLE DB OPERATIONS IN THIS BLOCK ###
	### 6.1 ALL FUNCTIONS WHERE MODIFICATION IS ALLOWED ###
	IF((CUST.DATA.funcCode != "V") AND (CUST.DATA.funcCode != "X"))THEN
	#{
		sub_getFieldValuesfromONSB("2","CUST","DATA","tfc_charge_details_FIELD_2|tfc_charge_details_FIELD_3","noOfRecs|noOfFldsPerRec","0")
		PRINT(CUST.DATA.noOfRecs)
		PRINT(CUST.DATA.noOfFldsPerRec)
		
		### GET MULTI-REC CHARGE DETAILS TAB FIELD VALUES ###
		IF(CUST.DATA.menuId == "OGM")THEN
		#{
			sub_getFieldValuesfromSRVStructB("1","CUST","DATA","bgChargeDtl.entityChargeLL.<rec_0>.key.serial_num","chrgSrlNum")
		#}
		ENDIF
		IF(CUST.DATA.menuId == "ODCM")THEN
		#{
			sub_getFieldValuesfromSRVStructB("1","CUST","DATA","dcChargeDtl.entityChargeLL.<rec_0>.key.serial_num","chrgSrlNum")
		#}
		ENDIF
		IF(CUST.DATA.menuId == "IGM")THEN
		#{
			sub_getFieldValuesfromSRVStructB("1","CUST","DATA","bgInMsg.bgChargeDtl.entityChargeLL.<rec_0>.key.serial_num","chrgSrlNum")
		#}
		ENDIF
		IF(CUST.DATA.menuId == "IDCM")THEN
		#{
			sub_getFieldValuesfromSRVStructB("1","CUST","DATA","dcInMsgDtl.dcChargeDtl.entityChargeLL.<rec_0>.key.serial_num","chrgSrlNum")
		#}
		ENDIF
		PRINT(CUST.DATA.chrgSrlNum)
		
		### CHECK MAX OF RUNNING SRL NUM FOR ENTITY ID ###
		sv_a = func_selectFromCustTableB("srlNum","MAX(SRL_NUM)","CUSTOM.C_TFCT_TBL","B2K_ID|B2KID_TYPE|BANK_ID", CUST.DATA.entityB2kId + "|" + CUST.DATA.b2kIdType + "|"+ BANCS.STDIN.contextBankId)
		sub_copyOutparamFieldB("srlNum","CUST","DATA","srlNum","0")
		PRINT(CUST.DATA.srlNum)
		CUST.DATA.newSrlNum = CINT(CUST.DATA.srlNum) + 1
		PRINT(CUST.DATA.newSrlNum)
		
		### INSERT ONLY ONE RECORD WITH NULL VALUES IF NO CHARGES ARE PRESENT ###
		IF(TRIM(CUST.DATA.chrgSrlNum) == "")THEN
		#{
			CUST.DATA.chrgSrlNum = 0
		#}
		ENDIF
		IF(((CUST.DATA.menuId == "OGM") OR (CUST.DATA.menuId == "IGM")) AND (CUST.DATA.funcCode == "N"))  THEN
		#{

			sub_getFieldValuesfromONSB("1","CUST","DATA","FRWK_OGMINVOCDET_FIELD_1","slAcctId","")
			PRINT(CUST.DATA.slAcctId)
			CUST.DATA.slLimitId     = TOUPPER(CUST.DATA.slLimitId)
			sub_getFieldValuesfromONSB("1","CUST","DATA","FRWK_OGMINVOCDET_FIELD_2","slAcctName","")
			PRINT(CUST.DATA.slAcctName)
			sub_getFieldValuesfromONSB("1","CUST","DATA","FRWK_OGMINVOCDET_FIELD_3","slAcctCcy","")
			PRINT(CUST.DATA.slAcctCcy)
			sub_getFieldValuesfromONSB("1","CUST","DATA","FRWK_OGMINVOCDET_FIELD_4","slAccBal","")
			PRINT(CUST.DATA.slAccBal)
			sub_getFieldValuesfromONSB("1","CUST","DATA","FRWK_OGMINVOCDET_FIELD_5","slAccSts","")
			PRINT(CUST.DATA.slAccSts)
			CUST.DATA.tfctsrlNo = "999"
			### INSERT INTO CUSTOM.C_TFCT ###
			CUST.DATA.insertValues = CUST.DATA.entityB2kId  + "|" + CUST.DATA.b2kIdType + "|" + CUST.DATA.funcCode + "|" + CUST.DATA.eventSrlNum
			CUST.DATA.insertValues = CUST.DATA.insertValues + "|" + CUST.DATA.tfctsrlNo + "|"  + CUST.DATA.slAcctId
			CUST.DATA.insertValues = CUST.DATA.insertValues + "|" + CUST.DATA.slAcctName + "|" + CUST.DATA.slAccSts + "|" + ""
			CUST.DATA.insertValues = CUST.DATA.insertValues + "|" + "" + "|" +  CUST.DATA.slAccBal  + "|" + CUST.DATA.slLimitId + "|" + BANCS.STDIN.contextBankId
			CUST.DATA.insertValues = CUST.DATA.insertValues + "|" + BANCS.STDIN.userId + "|DT" + CUST.DATA.sysDate + "|" + BANCS.STDIN.userId + "|DT" + CUST.DATA.sysDate + "|"+ CUST.DATA.tsCnt
			CUST.DATA.insertValues = CUST.DATA.insertValues + "|" + "" + "|" + CUST.DATA.slAcctCcy + "|" + ""
			CUST.DATA.insertValues = CUST.DATA.insertValues + "|" + CUST.DATA.b2kEventAmt + "|" + CUST.DATA.b2kCcy
			CUST.DATA.insertValues = CUST.DATA.insertValues + "|" + CUST.DATA.amendInd + "|" + CUST.DATA.amendAmt + "|" + CUST.DATA.newSrlNum + "|N"
			CUST.DATA.insertValues = CUST.DATA.insertValues + "|" + CUST.DATA.serviceName + "|" + CUST.DATA.menuId + "|" + CUST.DATA.totEarMark + "|" + ""
			sv_a = func_insertIntoCustTableB("CUSTOM.C_TFCT_TBL", CUST.DATA.insertFields, CUST.DATA.insertValues)
			PRINT(sv_a)
			IF(sv_a != 0)THEN
			#{
					CUST.DATA.errorFlg = "Y"
					CUST.DATA.errorMsg = "INSERT INTO C_TFCT_TBL FAILED"
					GOTO ENDOFSCRIPT
			#}
			ENDIF
		#}
		ENDIF
		IF((CINT(CUST.DATA.chrgSrlNum) == 0) AND (CUST.DATA.funcCode != "N"))THEN 
		#{
			### INSERT INTO CUSTOM.C_TFCT ###
			CUST.DATA.insertValues = CUST.DATA.entityB2kId  + "|" + CUST.DATA.b2kIdType + "|" + CUST.DATA.funcCode + "|" + CUST.DATA.eventSrlNum
			CUST.DATA.insertValues = CUST.DATA.insertValues + "|" + "" + "|" + "" + "|" + ""
			CUST.DATA.insertValues = CUST.DATA.insertValues + "|" + "" + "|" + "" + "|" + ""
			CUST.DATA.insertValues = CUST.DATA.insertValues + "|" + "" + "|" + CUST.DATA.slLimitId + "|" + BANCS.STDIN.contextBankId
			CUST.DATA.insertValues = CUST.DATA.insertValues + "|" + BANCS.STDIN.userId + "|DT" + CUST.DATA.sysDate + "|" + BANCS.STDIN.userId + "|DT" + CUST.DATA.sysDate + "|"+ CUST.DATA.tsCnt
			CUST.DATA.insertValues = CUST.DATA.insertValues + "|" + "" + "|" + "" + "|"
			CUST.DATA.insertValues = CUST.DATA.insertValues + "|" + CUST.DATA.b2kEventAmt + "|" + CUST.DATA.b2kCcy
			CUST.DATA.insertValues = CUST.DATA.insertValues + "|" + CUST.DATA.amendInd + "|" + CUST.DATA.amendAmt + "|" + CUST.DATA.newSrlNum + "|N"
			CUST.DATA.insertValues = CUST.DATA.insertValues + "|" + CUST.DATA.serviceName + "|" + CUST.DATA.menuId + "|" + CUST.DATA.totEarMark + "|" + ""
			sv_a = func_insertIntoCustTableB("CUSTOM.C_TFCT_TBL", CUST.DATA.insertFields, CUST.DATA.insertValues)
			PRINT(sv_a)
			IF(sv_a != 0)THEN
			#{
				CUST.DATA.errorFlg = "Y"
				CUST.DATA.errorMsg = "INSERT INTO C_TFCT_TBL FAILED"
				GOTO ENDOFSCRIPT
			#}
			ENDIF
		#}
		ENDIF
		
		CUST.DATA.counter = "0"
		WHILE(CINT(CUST.DATA.chrgSrlNum) != 0)
		#{
			### CHARGE EVENT ID/TYPE AND TFCT SRL NUM ###
			IF(CUST.DATA.menuId == "OGM")THEN
			#{
				CUST.DATA.srvFieldNames = "bgChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.chrgEventId.eventId|bgChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.chrgEventId.eventType|bgChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.tfctSrlNum|bgChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.chrgDesc"
			#}
			ENDIF
			IF(CUST.DATA.menuId == "ODCM")THEN
			#{
				CUST.DATA.srvFieldNames = "dcChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.chrgEventId.eventId|dcChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.chrgEventId.eventType|dcChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.tfctSrlNum|dcChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.chrgDesc"
			#}
			ENDIF
			IF(CUST.DATA.menuId == "IGM")THEN
			#{
				CUST.DATA.srvFieldNames = "bgInMsg.bgChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.chrgEventId.eventId|bgInMsg.bgChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.chrgEventId.eventType|bgInMsg.bgChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.tfctSrlNum|bgInMsg.bgChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.chrgDesc"
			#}
			ENDIF
			IF(CUST.DATA.menuId == "IDCM")THEN
			#{
				CUST.DATA.srvFieldNames = "dcInMsgDtl.dcChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.chrgEventId.eventId|dcInMsgDtl.dcChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.chrgEventId.eventType|dcInMsgDtl.dcChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.tfctSrlNum|dcInMsgDtl.dcChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.chrgDesc"
			#}
			ENDIF
			CUST.DATA.srvFieldValues = "chrgEventId|chrgEventType|tfctSrlNum|chrgDesc"
			sub_getFieldValuesfromSRVStructB("4","CUST","DATA",CUST.DATA.srvFieldNames,CUST.DATA.srvFieldValues)
			PRINT(CUST.DATA.chrgEventId)
			PRINT(CUST.DATA.chrgEventType)
			PRINT(CUST.DATA.tfctSrlNum)
			PRINT(CUST.DATA.chrgDesc)
			
			### GET CUSTOM FIELD VALUES FOR EACH RECORD FROM ONS BEGIN ###
			CUST.DATA.slAcctIdPos 		= (CINT(CUST.DATA.noOfFldsPerRec) * CINT(CUST.DATA.chrgSrlNum)) - 3
			CUST.DATA.slAcctNamePos 	= CINT(CUST.DATA.slAcctIdPos) 	+ 1
			CUST.DATA.slAcctCcyPos 		= CINT(CUST.DATA.slAcctNamePos)	+ 1
			CUST.DATA.slAcctBalPos 		= CINT(CUST.DATA.slAcctCcyPos)  + 1
			CUST.DATA.slAcctStatusPos 	= CINT(CUST.DATA.slAcctBalPos) 	+ 1
			CUST.DATA.purposeOfTxnPos 	= CINT(CUST.DATA.slAcctStatusPos)+ 1
			CUST.DATA.slTranRmksPos 	= CINT(CUST.DATA.purposeOfTxnPos) + 1
			
			CUST.DATA.ONSFields = "tfc_charge_details_FIELD_" + CUST.DATA.slAcctIdPos + "|" + "tfc_charge_details_FIELD_" + CUST.DATA.slAcctNamePos + "|" + "tfc_charge_details_FIELD_" + CUST.DATA.slAcctCcyPos + "|" + "tfc_charge_details_FIELD_" + CUST.DATA.slAcctBalPos
			CUST.DATA.ONSFields = CUST.DATA.ONSFields + "|" + "tfc_charge_details_FIELD_" + CUST.DATA.slAcctStatusPos + "|" + "tfc_charge_details_FIELD_" + CUST.DATA.purposeOfTxnPos  + "|" + "tfc_charge_details_FIELD_" + CUST.DATA.slTranRmksPos
			PRINT(CUST.DATA.ONSFields)
			CUST.DATA.outputFields = "slAcctId|slAcctName|slAcctCcy|slAcctBal|slAcctStatus|slPurposeTxn|slTranRmks"
			sub_getFieldValuesfromONSB("7","CUST","DATA", CUST.DATA.ONSFields, CUST.DATA.outputFields,"")
			PRINT(CUST.DATA.slAcctId)
			PRINT(CUST.DATA.slAcctName)
			PRINT(CUST.DATA.slAcctCcy)
			PRINT(CUST.DATA.slAcctBal)
			PRINT(CUST.DATA.slAcctStatus)
			PRINT(CUST.DATA.slPurposeTxn)
			PRINT(CUST.DATA.slTranRmks)
			
			IF(CUST.DATA.slAcctBal == "NULL")THEN
			#{
				CUST.DATA.slAcctBal = "0"
			#}
			ENDIF
			
			### INSERT INTO CUSTOM.C_TFCT ###
			CUST.DATA.insertValues = CUST.DATA.entityB2kId  + "|" + CUST.DATA.b2kIdType + "|" + CUST.DATA.funcCode + "|" + CUST.DATA.eventSrlNum
			CUST.DATA.insertValues = CUST.DATA.insertValues + "|" + CUST.DATA.tfctSrlNum + "|" + CUST.DATA.slAcctId + "|" + CUST.DATA.slAcctName
			CUST.DATA.insertValues = CUST.DATA.insertValues + "|" + CUST.DATA.slAcctStatus + "|" + CUST.DATA.chrgEventId + "|" + CUST.DATA.chrgEventType
			CUST.DATA.insertValues = CUST.DATA.insertValues + "|" + CUST.DATA.slAcctBal + "|" + CUST.DATA.slLimitId + "|" + BANCS.STDIN.contextBankId
			CUST.DATA.insertValues = CUST.DATA.insertValues + "|" + BANCS.STDIN.userId + "|DT" + CUST.DATA.sysDate + "|" + BANCS.STDIN.userId + "|DT" + CUST.DATA.sysDate + "|"+ CUST.DATA.tsCnt
			CUST.DATA.insertValues = CUST.DATA.insertValues + "|" + CUST.DATA.slPurposeTxn + "|" + CUST.DATA.slAcctCcy + "|" + CUST.DATA.chkTxnSeq
			CUST.DATA.insertValues = CUST.DATA.insertValues + "|" + CUST.DATA.b2kEventAmt + "|" + CUST.DATA.b2kCcy
			CUST.DATA.insertValues = CUST.DATA.insertValues + "|" + CUST.DATA.amendInd + "|" + CUST.DATA.amendAmt + "|" + CUST.DATA.newSrlNum + "|N"
			CUST.DATA.insertValues = CUST.DATA.insertValues + "|" + CUST.DATA.serviceName + "|" + CUST.DATA.menuId + "|" + CUST.DATA.totEarMark + "|" + CUST.DATA.slTranRmks
			sv_a = func_insertIntoCustTableB("CUSTOM.C_TFCT_TBL", CUST.DATA.insertFields, CUST.DATA.insertValues)
			PRINT(sv_a)
			IF(sv_a != 0)THEN
			#{
				CUST.DATA.errorFlg = "Y"
				CUST.DATA.errorMsg = "INSERT INTO C_TFCT_TBL FAILED"
				GOTO ENDOFSCRIPT
			#}
			ENDIF
			
			### INCREMENT COUNTER ###
			CUST.DATA.counter = CINT(CUST.DATA.counter) + 1
			IF(CUST.DATA.menuId == "OGM")THEN
			#{
				CUST.DATA.srvFieldNames = "bgChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.key.serial_num"
			#}
			ENDIF
			IF(CUST.DATA.menuId == "ODCM")THEN
			#{
				CUST.DATA.srvFieldNames = "dcChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.key.serial_num"
			#}
			ENDIF
			IF(CUST.DATA.menuId == "IGM")THEN
			#{
				CUST.DATA.srvFieldNames = "bgInMsg.bgChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.key.serial_num"
			#}
			ENDIF
			IF(CUST.DATA.menuId == "IDCM")THEN
			#{
				CUST.DATA.srvFieldNames = "dcInMsgDtl.dcChargeDtl.entityChargeLL.<rec_"+CUST.DATA.counter+">.key.serial_num"
			#}
			ENDIF
			sub_getFieldValuesfromSRVStructB("1","CUST","DATA",CUST.DATA.srvFieldNames,"chrgSrlNum")
			PRINT(CUST.DATA.chrgSrlNum)
			IF(TRIM(CUST.DATA.chrgSrlNum) == "")THEN
			#{
				CUST.DATA.chrgSrlNum = 0
			#}
			ENDIF
		#}
		DO
		PRINT(CUST.DATA.counter)
		IF(CINT(CUST.DATA.counter) >5)THEN
		#{
			CUST.DATA.errorFlg = "Y"
			CUST.DATA.errorMsg = "MAXIMUM OF 5 PART TRANS Dr/Cr IS ALLOWED"
			GOTO ENDOFSCRIPT
		#}
		ENDIF
	#}
	ENDIF
	### 6.2 HANDLE DB OPERATIONS FOR VERIFY ###
	IF(CUST.DATA.funcCode == "V")THEN
	#{
		### FETCH SEQ_TRAN_ID_SL,PURPOSE_CODE,SL_REMARKS FROM C_TFCT_TBL ###
		BANCS.INPARAM.BINDVARS = CUST.DATA.entityB2kId + "|" + CUST.DATA.b2kIdType + "|" + BANCS.STDIN.contextBankId
		BANCS.INPARAM.BINDVARS = BANCS.INPARAM.BINDVARS + "|" + CUST.DATA.entityB2kId + "|" + CUST.DATA.b2kIdType + "|" + BANCS.STDIN.contextBankId
		PRINT(BANCS.INPARAM.BINDVARS)
		sv_a = "slTranSeq,purposeOfTxn,slRmks|SELECT SEQ_TRAN_ID_SL,PURPOSE_OF_TXN,SL_REMARKS FROM CUSTOM.C_TFCT_TBL WHERE B2K_ID = ?SVAR AND B2KID_TYPE = ?SVAR AND BANK_ID = ?SVAR "
		sv_a = sv_a + "AND SRL_NUM = (SELECT MAX(SRL_NUM) FROM CUSTOM.C_TFCT_TBL WHERE B2K_ID = ?SVAR AND B2KID_TYPE = ?SVAR AND BANK_ID = ?SVAR) AND ROWNUM=1"
		sv_a = urhk_dbSelectWithBind(sv_a)
		PRINT(sv_a)
		sub_copyOutparamFieldB("slTranSeq","CUST","DATA","slTranSeq","")
		sub_copyOutparamFieldB("purposeOfTxn","CUST","DATA","purposeOfTxn","")
		sub_copyOutparamFieldB("slRmks","CUST","DATA","slRmks","")
		PRINT(CUST.DATA.slTranSeq)
		PRINT(CUST.DATA.purposeOfTxn)
		PRINT(CUST.DATA.slRmks)
		
		### FETCH CHARGE TRAN DETAILS FROM SRV STRUCT ###
		IF(CUST.DATA.menuId == "OGM")THEN
		#{
			sub_getFieldValuesfromSRVStructB("3","CUST","DATA","bgChargeDtl.chrgTranId|bgChargeDtl.chrgStartDate|bgChargeDtl.entityId.entityType","chrgTranId|chrgStartDate|entityB2kType")
		#}
		ENDIF
		IF(CUST.DATA.menuId == "ODCM")THEN
		#{
			sub_getFieldValuesfromSRVStructB("3","CUST","DATA","dcChargeDtl.chrgTranId|dcChargeDtl.chrgStartDate|dcChargeDtl.entityId.entityType","chrgTranId|chrgStartDate|entityB2kType")
		#}
		ENDIF
		IF(CUST.DATA.menuId == "IGM")THEN
		#{
			sub_getFieldValuesfromSRVStructB("3","CUST","DATA","bgInMsg.bgChargeDtl.chrgTranId|bgInMsg.bgChargeDtl.chrgStartDate|bgInMsg.bgChargeDtl.entityId.entityType","chrgTranId|chrgStartDate|entityB2kType")
		#}
		ENDIF
		IF(CUST.DATA.menuId == "IDCM")THEN
		#{
			sub_getFieldValuesfromSRVStructB("3","CUST","DATA","dcInMsgDtl.dcChargeDtl.chrgTranId|dcInMsgDtl.dcChargeDtl.chrgStartDate|dcInMsgDtl.dcChargeDtl.entityId.entityType","chrgTranId|chrgStartDate|entityB2kType")
		#}
		ENDIF
		PRINT(CUST.DATA.chrgTranId)
		PRINT(CUST.DATA.chrgStartDate)
		PRINT(CUST.DATA.entityB2kType)
		CUST.DATA.chrgStartDate = LEFT$(CUST.DATA.chrgStartDate,10)
		
		### SKIP IF NO CHARGE TRANSACTION ###
		IF(TRIM(CUST.DATA.chrgTranId) == "")THEN
		#{
		#	EXITSCRIPT
		#}
		ENDIF
		
		### INSERT FROM TBAADM.DTD TO CUSTOM.C_DTD_P_EXT ###
		sv_a = func_selectFromCustTableB("count","count(*)","TBAADM.DTD","TRIM(TRAN_ID)|TO_CHAR(TRAN_DATE,'DD-MM-YYYY')", TRIM(CUST.DATA.chrgTranId) + "|" + CUST.DATA.chrgStartDate)
		PRINT(sv_a)
		sub_copyOutparamFieldB("count","CUST","DATA","count","0")
		PRINT(CUST.DATA.count)
		IF(CINT(CUST.DATA.count) != 0)THEN
		#{
			BANCS.INPARAM.BINDVARS = CUST.DATA.purposeOfTxn + "|" + BANCS.STDIN.userId + "|" + BANCS.STDIN.userId + "|"+ CUST.DATA.slTranSeq + "|" + CUST.DATA.slRmks
			BANCS.INPARAM.BINDVARS = BANCS.INPARAM.BINDVARS + "|"+ BANCS.STDIN.contextBankId + "|" + CUST.DATA.chrgTranId + "|" + CUST.DATA.chrgStartDate
			PRINT(BANCS.INPARAM.BINDVARS)
			sv_a = "INSERT INTO CUSTOM.C_DTD_P_EXT( "
			sv_a = sv_a + "SELECT ACID,TRAN_ID,TRAN_DATE,TRAN_AMT,PART_TRAN_SRL_NUM,PART_TRAN_TYPE,PSTD_FLG,?SVAR,"
			sv_a = sv_a + "'','','','','','Y','N',SYSDATE,?SVAR,?SVAR,SYSDATE,BANK_ID,'','',?SVAR,?SVAR "
			sv_a = sv_a + " FROM TBAADM.DTD WHERE BANK_ID = ?SVAR AND TRIM(TRAN_ID) = TRIM(?SVAR) AND TO_CHAR(TRAN_DATE,'DD-MM-YYYY') = ?SVAR) "
			PRINT(sv_a)
			sv_a = urhk_dbSQLWithBind(sv_a)
			PRINT(sv_a)
			IF(sv_a != 0)THEN
			#{
				CUST.DATA.errorFlg = "Y"
				CUST.DATA.errorMsg = "INSERT INTO CUSTOM.C_DTD_P_EXT TABLE FAILED"
				GOTO ENDOFSCRIPT
			#}
			ENDIF
		#}
		ENDIF					
		### INSERT INTO C_TFCT_TBL ###
		BANCS.INPARAM.BINDVARS = CUST.DATA.funcCode + "|" + BANCS.STDIN.userId + "|" + CUST.DATA.sysDate + "|" + CUST.DATA.serviceName + "|" + CUST.DATA.menuId
		BANCS.INPARAM.BINDVARS = BANCS.INPARAM.BINDVARS + "|" + CUST.DATA.entityB2kId + "|" + CUST.DATA.b2kIdType + "|" + BANCS.STDIN.contextBankId
		BANCS.INPARAM.BINDVARS = BANCS.INPARAM.BINDVARS + "|" + CUST.DATA.entityB2kId + "|" + CUST.DATA.b2kIdType + "|" + BANCS.STDIN.contextBankId
		PRINT(BANCS.INPARAM.BINDVARS)
		sv_a = "INSERT INTO CUSTOM.C_TFCT_TBL (SELECT B2K_ID,B2KID_TYPE,?SVAR,EVENT_SRL_NUM,TFCT_KEY_SRL_NUM,SL_ACCT_ID,ACCT_NAME,ACCT_STATUS, "
		sv_a = sv_a + " CHRG_EVENT_ID,CHRG_EVENT_TYPE,ACCT_BAL,SL_LIMIT_ID,BANK_ID,?SVAR,TO_DATE(?SVAR,'dd-mm-yyyy hh24:mi:ss'),RCRE_USER_ID,RCRE_TIME,TS_CNT, "
		sv_a = sv_a + " PURPOSE_OF_TXN,ACCT_CCY,SEQ_TRAN_ID_SL,ENTITY_AMOUNT,ENTITY_CCY,AMEND_IND,AMEND_AMT,SRL_NUM+1,'Y',?SVAR,?SVAR,0,SL_REMARKS "
		sv_a = sv_a + " FROM CUSTOM.C_TFCT_TBL WHERE B2K_ID = ?SVAR AND B2KID_TYPE = ?SVAR AND BANK_ID = ?SVAR "
		sv_a = sv_a + " AND SRL_NUM = (SELECT MAX(SRL_NUM) FROM CUSTOM.C_TFCT_TBL WHERE B2K_ID = ?SVAR AND B2KID_TYPE = ?SVAR AND BANK_ID = ?SVAR)) "
		PRINT(sv_a)
		sv_a = urhk_dbSQLWithBind(sv_a)
		PRINT(sv_a)
		IF(sv_a != 0)THEN
		#{
			CUST.DATA.errorFlg = "Y"
			CUST.DATA.errorMsg = "UPDATE OF ENTITY_CRE_FLG ON CUSTOM.C_TFCT TABLE FAILED"
			GOTO ENDOFSCRIPT
		#}
		ENDIF
	#}
	ENDIF
	JUSTCANCEL:
	### 6.3 HANDLE DB OPERATIONS FOR CANCEL ###
	IF(CUST.DATA.funcCode == "X")THEN
	#{
		BANCS.INPARAM.BINDVARS = CUST.DATA.entityB2kId + "|" + CUST.DATA.b2kIdType + "|" + BANCS.STDIN.contextBankId
		BANCS.INPARAM.BINDVARS = BANCS.INPARAM.BINDVARS + "|" + CUST.DATA.entityB2kId + "|" + CUST.DATA.b2kIdType + "|" + BANCS.STDIN.contextBankId
		PRINT(BANCS.INPARAM.BINDVARS)
		sv_a = "DELETE FROM CUSTOM.C_TFCT_TBL WHERE B2K_ID = ?SVAR AND B2KID_TYPE = ?SVAR AND BANK_ID = ?SVAR "
		sv_a = sv_a + "AND SRL_NUM = (SELECT MAX(SRL_NUM) FROM CUSTOM.C_TFCT_TBL WHERE B2K_ID = ?SVAR AND B2KID_TYPE = ?SVAR AND BANK_ID = ?SVAR) AND ENTITY_CRE_FLG = 'N'"
		PRINT(sv_a)
		sv_a = urhk_dbSQLWithBind(sv_a)
		PRINT(sv_a)
		IF(sv_a != 0)THEN
		#{
			#CUST.DATA.errorFlg = "Y"
			#CUST.DATA.errorMsg = "DELETE FROM CUSTOM.C_TFCT TABLE FAILED"
			#GOTO ENDOFSCRIPT
		#}
		ENDIF
	#}
	ENDIF
	### 7.ERROR HANDLING ###
	ENDOFSCRIPT :
		IF(CUST.DATA.errorFlg == "Y")THEN
		#{
			PRINT(CUST.DATA.errorMsg)
			sv_a = urhk_SRV_SetErr(CUST.DATA.errorMsg)
			sv_u = urhk_setOrbOut("SuccessOrFailure|N")
			BANCS.OUTPUT.successOrFailure = "F"
		#}
		ENDIF
		sub_deleteRepClassB("CUST","DATA")
		TRACE OFF
END-->

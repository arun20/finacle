#============================================================
# IMPORTANT: Auto Generated Header. DO NOT CHANGE MANUALLY.
# Product: Finacle Core
# Category: User Defined
# Script: MTFT_updAvalLimit.scr
# Type: NA|default
# Description: MTFT_updAvalLimit.scr
# Author: Kanti Kalyan Desu
# Date: 7/22/18 11:19 AM
# Modification Log:
#============================================================
IMPORT LibCommonB001
IMPORT LibCommonB002
IMPORT common_business_XMLFunctions
IMPORT updAvailLimitInput
<--START
	# Script body goes here
	TRACE ON

	sub_createRepClassB("CUST","DATA")

	### THIS SCRIPT IS CALLED DURING PREPROCESS OF VERIFY IN MTFT ###
	### 1.GET MENU ID ###
	sv_a = func_getCallingMenuOptionB("CMMSG00004",BYREF CUST.DATA.menuId)
	PRINT(CUST.DATA.menuId)
	IF(CUST.DATA.menuId != "MTFT")THEN
	#{
		EXITSCRIPT
	#}
	ENDIF
	
	### 2.GET KEY FIELD VALUES FROM SRV - MENU SPECIFIC ###
	CUST.DATA.srvFieldNames = "pcCritDtl.pcFuncCode|pcCritDtl.pcDisbId|pcChargeDtl.b2kId|pcChargeDtl.entityId.entityType"
	CUST.DATA.srvFieldNames = CUST.DATA.srvFieldNames + "|" + "pcChargeDtl.eventSrlNum|pcChargeDtl.eventAmt|pcCritDtl.pcPreShipAcct.crncyCode"
	CUST.DATA.srvFieldNames = CUST.DATA.srvFieldNames + "|" + "pcCritDtl.pcPreShipAcct.foracid|pcOtherDtl.pcEffFuncCode"
	CUST.DATA.srvFieldNames = CUST.DATA.srvFieldNames + "|pcOffsetDtl.offsetGenDtl.offsetAmt|pcOffsetDtl.offsetGenDtl.offsetAmtCrncy.crncyCode"
	CUST.DATA.srvFieldNames = CUST.DATA.srvFieldNames + "|pcRlovrDtl.rlovrInd|pcRlovrDtl.rlovrAmt|pcRlovrDtl.rlovrAmtCrncy.crncyCode"
	CUST.DATA.srvFieldValues = "funcCode|b2kRefNo|entityB2kId|b2kIdType|eventSrlNum|b2kEventAmt|b2kCcy|foracid|pcEffFuncCode|offsetAmt|offsetCrncy"
	CUST.DATA.srvFieldValues = CUST.DATA.srvFieldValues + "|rlovrInd|rlovrAmt|rlovrCrncy"
	sub_getFieldValuesfromSRVStructB("14","CUST","DATA",CUST.DATA.srvFieldNames,CUST.DATA.srvFieldValues)
	PRINT(CUST.DATA.funcCode)
	PRINT(CUST.DATA.b2kRefNo)
	PRINT(CUST.DATA.entityB2kId)
	PRINT(CUST.DATA.b2kIdType)
	PRINT(CUST.DATA.eventSrlNum)
	CUST.DATA.b2kEventAmt = CDOUBLE(CUST.DATA.b2kEventAmt)
	PRINT(CUST.DATA.b2kEventAmt)
	PRINT(CUST.DATA.b2kCcy)
	PRINT(CUST.DATA.foracid)
	PRINT(CUST.DATA.pcEffFuncCode)
	PRINT(CUST.DATA.offsetAmt)
	PRINT(CUST.DATA.offsetCrncy)
	PRINT(CUST.DATA.rlovrInd)
	PRINT(CUST.DATA.rlovrAmt)
	PRINT(CUST.DATA.rlovrCrncy)
	IF(CUST.DATA.b2kIdType == "") THEN
	#{
		CUST.DATA.b2kIdType = "RDISB"
	#}
	ENDIF
	
	### 3.FETCH PREVIOUS OPERATION VALUES ON THIS ENTITY ###
	BANCS.INPARAM.BINDVARS = CUST.DATA.b2kRefNo + "|" + CUST.DATA.b2kIdType + "|" + BANCS.STDIN.contextBankId
	BANCS.INPARAM.BINDVARS = BANCS.INPARAM.BINDVARS + "|" + CUST.DATA.b2kRefNo + "|" + CUST.DATA.b2kIdType + "|" + BANCS.STDIN.contextBankId
	PRINT(BANCS.INPARAM.BINDVARS)
	sv_a = "slLmtId,prevEntityAmt,prevEntityCcy,prevEarMark|SELECT SL_LIMIT_ID,ENTITY_AMOUNT,ENTITY_CCY,TOTAL_EARMARK"
	sv_a = sv_a + " FROM CUSTOM.C_TFCT_TBL WHERE B2K_ID = TRIM(?SVAR) AND B2KID_TYPE = ?SVAR AND BANK_ID = ?SVAR AND SRL_NUM = "
	sv_a = sv_a + " (SELECT MAX(SRL_NUM) FROM CUSTOM.C_TFCT_TBL WHERE B2K_ID = TRIM(?SVAR) AND B2KID_TYPE = ?SVAR AND BANK_ID = ?SVAR) AND ROWNUM=1"
	PRINT(sv_a)
	sv_a = urhk_dbSelectWithBind(sv_a)
	PRINT(sv_a)
	sub_copyOutparamFieldB("slLmtId","CUST","DATA","slLmtId","")
	sub_copyOutparamFieldB("prevEntityAmt","CUST","DATA","prevEntityAmt","0")
	sub_copyOutparamFieldB("prevEntityCcy","CUST","DATA","prevEntityCcy","")
	sub_copyOutparamFieldB("prevEarMark","CUST","DATA","prevEarMark","0")
	IF(sv_a != 0)THEN
	#{
		sub_getFieldValuesfromONSB("1","CUST","DATA","FRWK_MPTDISBDET_FIELD_7","slLmtId","")
		CUST.DATA.slLmtId	= TOUPPER(CUST.DATA.slLmtId)
		CUST.DATA.isNewEntity = "Y"
	#}
	ENDIF
	PRINT(CUST.DATA.slLmtId)
	PRINT(CUST.DATA.prevEntityAmt)
	PRINT(CUST.DATA.prevEntityCcy)
	PRINT(CUST.DATA.prevEarMark)
	IF(CUST.DATA.pcEffFuncCode == "O") THEN
	#{
		CUST.DATA.prevEarMark = "0"
		CUST.DATA.prevEntityAmt = CUST.DATA.offsetAmt
		CUST.DATA.prevEntityCcy = CUST.DATA.offsetCrncy
	#}
	ENDIF
	IF(CUST.DATA.pcEffFuncCode == "R") THEN
	#{
		IF(CUST.DATA.rlovrInd == "R") THEN
		#{
			CUST.DATA.prevEarMark = "0"
		#}
		ELSE
		#{
			CUST.DATA.prevEarMark = CUST.DATA.rlovrAmt
		#}
		ENDIF
		CUST.DATA.prevEntityAmt= CUST.DATA.rlovrAmt
		CUST.DATA.prevEntityCcy = CUST.DATA.rlovrCrncy
	#}
	ENDIF
	### 4.CALL UPDATE AVAIL LIMIT API ###
	BANCS.INPUT.holdAmount 	= FORMAT$(CDOUBLE(CUST.DATA.prevEarMark),"%2.2f")
	BANCS.INPUT.refType 	= "T"
	BANCS.INPUT.txnAmount  	= FORMAT$(CDOUBLE(CUST.DATA.prevEntityAmt),"%2.2f")
	BANCS.INPUT.refNum	   	= CUST.DATA.foracid
	BANCS.INPUT.acfNum	   	= CUST.DATA.slLmtId
	BANCS.INPUT.balance    	= FORMAT$(CDOUBLE(CUST.DATA.prevEntityAmt),"%2.2f") + "|" + CUST.DATA.prevEntityCcy 
	BANCS.INPUT.currency 	= CUST.DATA.prevEntityCcy
	#BANCS.INPUT.currency   	= CUST.DATA.b2kCcy
	#BANCS.INPUT.currency    = BANCS.INPUT.TranCurrency
	PRINT(BANCS.INPUT.currency)
	IF(CDOUBLE(CUST.DATA.prevEarMark) == 0)THEN
	#{
		BANCS.INPUT.balance = -1 * CDOUBLE(CUST.DATA.prevEntityAmt)
		BANCS.INPUT.balance = FORMAT$(CDOUBLE(BANCS.INPUT.balance),"%2.2f") + "|" + CUST.DATA.prevEntityCcy 
		BANCS.INPUT.updTypeFlag	= "UO"
	#}
	ELSE
	#{
		BANCS.INPUT.updTypeFlag	= "RU"
	#}
	ENDIF
	
	IF((TRIM(CUST.DATA.slLmtId) != "") AND (CDOUBLE(CUST.DATA.prevEntityAmt) != 0)) THEN
        #{
		CALL("updAvalLimit.scr")

		IF(FIELDEXISTS(INTF.DATA.orgCode))THEN
		#{
			IF(INTF.DATA.orgCode != "000")THEN
			#{
				sv_a = urhk_SRV_SetErr(INTF.DATA.orgCode + " - " + INTF.DATA.ErrorDesc)
				sv_u = urhk_setOrbOut("SuccessOrFailure|N")
				BANCS.OUTPUT.successOrFailure = "F"
				EXITSCRIPT
			#}
			ENDIF
		#}
		ENDIF
	#}
	ENDIF
	TRACE OFF
	EXITSCRIPT
END-->

#============================================================
# IMPORTANT: Auto Generated Header. DO NOT CHANGE MANUALLY.
# Product: Finacle Core
# Category: User Defined
# Script: APCHCOLL_SLAcctChrgDtls_Fetch.scr
# Type: NA|default
# Description: APCHCOLL_SLAcctChrgDtls_Fetch.scr
# Author: Saisomasekhar_N
# Date: 7/4/18 12:40 PM
# Modification Log:
#============================================================
IMPORT LibCommonB001
IMPORT LibCommonB002
IMPORT customFields
<--START
	# Script body goes here
	TRACE ON
	
	sub_createRepClassB("CUST","DATA")
	
	##sv_a = urhk_b2k_printRepos("BANCS")
	##sv_a = urhk_b2k_printRepos("ONS")
	
	### 1.GET MENU ID ###
	CUST.DATA.menuId = ""
	sv_a = func_getCallingMenuOptionB("CMMSG00004",BYREF CUST.DATA.menuId)
	PRINT(sv_a)
	PRINT(CUST.DATA.menuId)
	IF(CUST.DATA.menuId != "APCHCOLL")THEN
	#{
		EXITSCRIPT
	#}
	ENDIF
	
	### 2.INITIALIZE VARIABLES ###
	sub_copyOptionalFieldB("errorFlg","CUST","DATA","errorFlg","N")
	sub_copyOptionalFieldB("errorMsg","CUST","DATA","errorMsg","")
	sub_copyOptionalFieldB("slAcctName","CUST","DATA","slAcctName","")
	sub_copyOptionalFieldB("slAcctId","CUST","DATA","slAcctId","")
	sub_copyOptionalFieldB("slAcctStatus","CUST","DATA","slAcctStatus","")
	sub_copyOptionalFieldB("slAcctBal","CUST","DATA","slAcctBal","")
	sub_copyOptionalFieldB("slAcctCcy","CUST","DATA","slAcctCcy","")
	sub_copyOptionalFieldB("slPurposeTxn","CUST","DATA","slPurposeTxn","")
	sub_copyOptionalFieldB("slRmks","CUST","DATA","slRmks","")
	sub_copyOptionalFieldB("custDataOut","CUST","DATA","custDataOut","")
	sub_copyOptionalFieldB("noOfRecs","CUST","DATA","noOfRecs","0")
	sub_copyOptionalFieldB("noOfFldsPerRec","CUST","DATA","noOfFldsPerRec","7")
	
	### 3.GET KEY FIELD VALUES FROM SRV - MENU SPECIFIC ###
	CUST.DATA.srvFieldNames = "actionCode|entityId.entityType|entityId.entityId|entityId.entityDispId"
	CUST.DATA.srvFieldNames = CUST.DATA.srvFieldNames + "|" + "entityCrncy|eventSrlNum"
	CUST.DATA.srvFieldValues = "funcCode|b2kIdType|entityB2kId|b2kRefNo|b2kCcy|eventSrlNum"
	sub_getFieldValuesfromSRVStructB("6","CUST","DATA",CUST.DATA.srvFieldNames,CUST.DATA.srvFieldValues)
	PRINT(CUST.DATA.funcCode)
	PRINT(CUST.DATA.b2kIdType)
	PRINT(CUST.DATA.entityB2kId)
	PRINT(CUST.DATA.b2kRefNo)
	PRINT(CUST.DATA.b2kCcy)
	PRINT(CUST.DATA.eventSrlNum)
	PRINT(BANCS.STDIN.serviceName)
	IF(BANCS.STDIN.serviceName == "SRV_tfcFetchLaterChrgDtlsForCancel")THEN
	#{
		CUST.DATA.funcCode = "X"
	#}
	ENDIF
	IF(BANCS.STDIN.serviceName == "SRV_tfcFetchLaterChrgDtlsForVerify")THEN
	#{
		CUST.DATA.funcCode = "V"
	#}
	ENDIF
	IF((CUST.DATA.funcCode != "V")AND(CUST.DATA.funcCode != "X"))THEN
	#{
		EXITSCRIPT
	#}
	ENDIF
	
	### 4.CUSROSR TO FETCH SL ACCOUNT DETAILS ###
	PRINT(CUST.DATA.custDataOut)
	PRINT(CUST.DATA.entityB2kId)
	PRINT(CUST.DATA.b2kIdType)
	PRINT(BANCS.STDIN.contextBankId)
	
	BANCS.INPARAM.BINDVARS = CUST.DATA.entityB2kId + "|" + CUST.DATA.b2kIdType + "|" + CUST.DATA.entityB2kId + "|" + CUST.DATA.b2kIdType + "|" + BANCS.STDIN.contextBankId + "|" + BANCS.STDIN.contextBankId
	PRINT(BANCS.INPARAM.BINDVARS)
	sv_a = "slAcctId,slAcctName,slAcctCcy,slAcctBal,slAcctStatus,slPurposeTxn,slRmks|"
	sv_a = sv_a + " SELECT SL_ACCT_ID,ACCT_NAME,ACCT_CCY,ACCT_BAL,ACCT_STATUS,PURPOSE_OF_TXN,SL_REMARKS "
	sv_a = sv_a + " FROM CUSTOM.C_TFCT_TBL WHERE B2K_ID = ?SVAR "
	sv_a = sv_a + " AND B2KID_TYPE = ?SVAR AND SRL_NUM = (SELECT MAX(SRL_NUM) FROM CUSTOM.C_TFCT_TBL WHERE B2K_ID = ?SVAR AND B2KID_TYPE = ?SVAR AND BANK_ID = ?SVAR) "
	sv_a = sv_a + " AND BANK_ID = ?SVAR ORDER BY TFCT_KEY_SRL_NUM "
	PRINT(sv_a)
	sv_b = urhk_dbCursorOpenWithBind(sv_a)
	PRINT(sv_b)
	IF(sv_b != 0)THEN
	#{
		PRINT("NO RECORDS PRESENT")
		CUST.DATA.custDataOut = ""
		EXITSCRIPT
	#}
	ENDIF
	CUST.DATA.mainCursor = BANCS.OUTPARAM.DB_CURSOR_NUMBER
	PRINT(CUST.DATA.mainCursor)
	sv_c = urhk_dbCursorFetch(CUST.DATA.mainCursor)
	PRINT(sv_c)
	IF(sv_c != 0)THEN
	#{
		sv_c = urhk_dbCursorClose(CUST.DATA.mainCursor)
		PRINT(sv_c)
		PRINT("NO RECORDS PRESENT")
		CUST.DATA.custDataOut = ""
		EXITSCRIPT
	#}
	ENDIF
	WHILE(sv_c == 0)
	#{
		CUST.DATA.noOfRecs = CINT(CUST.DATA.noOfRecs) + 1
		PRINT(CUST.DATA.noOfRecs)
		sub_copyOutparamFieldB("slAcctId","CUST","DATA","slAcctId","NULL")
		sub_copyOutparamFieldB("slAcctName","CUST","DATA","slAcctName","NULL")
		sub_copyOutparamFieldB("slAcctCcy","CUST","DATA","slAcctCcy","NULL")
		sub_copyOutparamFieldB("slAcctBal","CUST","DATA","slAcctBal","NULL")
		sub_copyOutparamFieldB("slAcctStatus","CUST","DATA","slAcctStatus","NULL")
		sub_copyOutparamFieldB("slPurposeTxn","CUST","DATA","slPurposeTxn","NULL")
		sub_copyOutparamFieldB("slRmks","CUST","DATA","slRmks","NULL")
		PRINT(CUST.DATA.slAcctId)
		PRINT(CUST.DATA.slAcctName)
		PRINT(CUST.DATA.slAcctCcy)
		PRINT(CUST.DATA.slAcctBal)
		PRINT(CUST.DATA.slAcctStatus)
		PRINT(CUST.DATA.slPurposeTxn)
		PRINT(CUST.DATA.slRmks)
		CUST.DATA.custDataOut = CUST.DATA.custDataOut + "|" + CUST.DATA.slAcctId + "|" + CUST.DATA.slAcctName + "|" + CUST.DATA.slAcctCcy
		CUST.DATA.custDataOut = CUST.DATA.custDataOut + "|" + CUST.DATA.slAcctBal + "|" + CUST.DATA.slAcctStatus + "|" + CUST.DATA.slPurposeTxn
		CUST.DATA.custDataOut = CUST.DATA.custDataOut + "|" + CUST.DATA.slRmks
		PRINT(CUST.DATA.custDataOut)
		
		sv_c = urhk_dbCursorFetch(CUST.DATA.mainCursor)
		PRINT(sv_c)
	#}
	DO
	sv_c = urhk_dbCursorClose(CUST.DATA.mainCursor)
	PRINT(sv_c)
	
	### 5.SET ONS CUSTOM DATA OUT ###
	PRINT(CUST.DATA.custDataOut)
	IF(TRIM(CUST.DATA.custDataOut) != "")THEN
	#{
		CUST.DATA.custDataOut = "intFlag|" + CUST.DATA.noOfRecs + "|" + CUST.DATA.noOfFldsPerRec + CUST.DATA.custDataOut
		PRINT(CUST.DATA.custDataOut)
	#}
	ENDIF
	PRINT(ONS.CUSTOM.custDataOut)
	IF(TRIM(CUST.DATA.custDataOut) != "")THEN
	#{
		IF(TRIM(ONS.CUSTOM.custDataOut) != "")THEN
		#{
			#ONS.CUSTOM.custDataOut = ONS.CUSTOM.custDataOut + "|~tfc_charge_details|" + CUST.DATA.custDataOut + "|~tfc_limit_details|" + CUST.DATA.slLimitId
			ONS.CUSTOM.custDataOut = ONS.CUSTOM.custDataOut + "|~tfc_charge_details|" + CUST.DATA.custDataOut
			#}
		ELSE
			#{
			#ONS.CUSTOM.custDataOut = "~tfc_charge_details|" + CUST.DATA.custDataOut + "|~tfc_limit_details|" + CUST.DATA.slLimitId
			ONS.CUSTOM.custDataOut = "~tfc_charge_details|" + CUST.DATA.custDataOut
		#}
		ENDIF
	#}
	ENDIF
	PRINT(ONS.CUSTOM.custDataOut)
	IF(CUST.DATA.errorFlg == "Y")THEN
	#{
		PRINT(CUST.DATA.errorMsg)
		sv_a = urhk_SRV_SetErr(CUST.DATA.errorMsg)
		sv_u = urhk_setOrbOut("SuccessOrFailure|N")
		BANCS.OUTPUT.successOrFailure = "F"
	#}
	ENDIF
	sub_deleteRepClassB("CUST","DATA")
	TRACE OFF
END-->
